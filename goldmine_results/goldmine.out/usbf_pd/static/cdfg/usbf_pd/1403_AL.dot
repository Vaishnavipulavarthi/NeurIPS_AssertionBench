strict digraph "" {
	node [label="\N"];
	"1418:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647e57a10>",
		fillcolor=cadetblue,
		label="1418:BS
next_state = ACTIVE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647e57a10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_1403:AL"	 [def_var="['got_pid_ack', 'data_done', 'seq_err', 'token_le_1', 'token_le_2', 'pid_le_sm', 'data_valid_d', 'next_state']",
		label="Leaf_1403:AL"];
	"1418:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1415:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f0647df0f10>",
		fillcolor=lightcyan,
		label="1415:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1416:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647df0350>",
		fillcolor=turquoise,
		label="1416:BL
pid_le_sm = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647df0210>]",
		style=filled,
		typ=Block];
	"1415:CA" -> "1416:BL"	 [cond="[]",
		lineno=None];
	"1461:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647ddce10>",
		fillcolor=cadetblue,
		label="1461:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647ddce10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1461:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1470:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647ddcf50>",
		fillcolor=cadetblue,
		label="1470:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647ddcf50>]",
		style=filled,
		typ=BlockingSubstitution];
	"1470:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1421:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647de70d0>",
		fillcolor=turquoise,
		label="1421:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1423:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647de7110>",
		fillcolor=springgreen,
		label="1423:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1421:BL" -> "1423:IF"	 [cond="[]",
		lineno=None];
	"1466:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647de75d0>",
		fillcolor=cadetblue,
		label="1466:BS
data_valid_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647de75d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1466:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1468:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647de7b10>",
		fillcolor=turquoise,
		label="1468:BL
data_done = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647de79d0>]",
		style=filled,
		typ=Block];
	"1470:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647de7b50>",
		fillcolor=springgreen,
		label="1470:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1468:BL" -> "1470:IF"	 [cond="[]",
		lineno=None];
	"1438:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647ddc3d0>",
		fillcolor=turquoise,
		label="1438:BL
data_valid_d = 1'b1;
next_state = DATA;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647ddc410>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647ddc590>]",
		style=filled,
		typ=Block];
	"1438:BL" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1437:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647e57c50>",
		fillcolor=springgreen,
		label="1437:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1437:IF" -> "1438:BL"	 [cond="['pid_DATA', 'rx_valid', 'rx_active', 'rx_err']",
		label="(pid_DATA && rx_valid && rx_active && !rx_err)",
		lineno=1437];
	"1443:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647e57c90>",
		fillcolor=springgreen,
		label="1443:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1437:IF" -> "1443:IF"	 [cond="['pid_DATA', 'rx_valid', 'rx_active', 'rx_err']",
		label="!((pid_DATA && rx_valid && rx_active && !rx_err))",
		lineno=1437];
	"1445:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647e57d10>",
		fillcolor=turquoise,
		label="1445:BL
seq_err = !rx_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647e57d50>]",
		style=filled,
		typ=Block];
	"1443:IF" -> "1445:BL"	 [cond="['rx_active', 'rx_err', 'rx_valid', 'pid_TOKEN', 'pid_DATA']",
		label="(!rx_active || rx_err || rx_valid && !(pid_TOKEN || pid_DATA))",
		lineno=1443];
	"1426:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647de7310>",
		fillcolor=cadetblue,
		label="1426:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647de7310>]",
		style=filled,
		typ=BlockingSubstitution];
	"1426:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1452:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647de7c10>",
		fillcolor=springgreen,
		label="1452:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1458:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647de7c50>",
		fillcolor=springgreen,
		label="1458:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1452:IF" -> "1458:IF"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="!((rx_valid && rx_active && !rx_err))",
		lineno=1452];
	"1453:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647de7d90>",
		fillcolor=turquoise,
		label="1453:BL
token_le_2 = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647de7dd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647de7f10>]",
		style=filled,
		typ=Block];
	"1452:IF" -> "1453:BL"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="(rx_valid && rx_active && !rx_err)",
		lineno=1452];
	"1450:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f0647dfa050>",
		fillcolor=lightcyan,
		label="1450:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1451:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647dfa0d0>",
		fillcolor=turquoise,
		label="1451:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1450:CA" -> "1451:BL"	 [cond="[]",
		lineno=None];
	"1447:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647e57ed0>",
		fillcolor=springgreen,
		label="1447:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1447:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647e57f10>",
		fillcolor=cadetblue,
		label="1447:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647e57f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1447:IF" -> "1447:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1447];
	"1405:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647df0e10>",
		fillcolor=turquoise,
		label="1405:BL
next_state = state;
pid_le_sm = 1'b0;
token_le_1 = 1'b0;
token_le_2 = 1'b0;
data_valid_d = 1'b0;
data_done = 1'b0;
seq_err = \
1'b0;
got_pid_ack = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647df0490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647df05d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647df0710>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647df07d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647df0910>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647df0a50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647df0b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647df0cd0>]",
		style=filled,
		typ=Block];
	"1414:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f0647df0e50>",
		fillcolor=linen,
		label="1414:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1405:BL" -> "1414:CS"	 [cond="[]",
		lineno=None];
	"1424:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647de7150>",
		fillcolor=turquoise,
		label="1424:BL
got_pid_ack = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647de7190>]",
		style=filled,
		typ=Block];
	"1423:IF" -> "1424:BL"	 [cond="['pid_ACK', 'rx_err']",
		label="(pid_ACK && !rx_err)",
		lineno=1423];
	"1430:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647e57bd0>",
		fillcolor=springgreen,
		label="1430:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1423:IF" -> "1430:IF"	 [cond="['pid_ACK', 'rx_err']",
		label="!((pid_ACK && !rx_err))",
		lineno=1423];
	"1459:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647de78d0>",
		fillcolor=turquoise,
		label="1459:BL
seq_err = !rx_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647de7750>]",
		style=filled,
		typ=Block];
	"1458:IF" -> "1459:BL"	 [cond="['rx_active', 'rx_err']",
		label="(!rx_active || rx_err)",
		lineno=1458];
	"1403:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0647dfa510>",
		clk_sens=False,
		fillcolor=gold,
		label="1403:AL",
		sens="['state', 'rx_valid', 'rx_active', 'rx_err', 'pid_ACK', 'pid_TOKEN', 'pid_DATA']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_err', 'rx_valid', 'state', 'rx_active', 'pid_TOKEN', 'pid_DATA', 'pid_ACK']"];
	"1403:AL" -> "1405:BL"	 [cond="[]",
		lineno=None];
	"1461:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647de7910>",
		fillcolor=springgreen,
		label="1461:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1459:BL" -> "1461:IF"	 [cond="[]",
		lineno=None];
	"1470:IF" -> "1470:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1470];
	"1414:CS" -> "1415:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1414:CS" -> "1450:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1464:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f0647dfa110>",
		fillcolor=lightcyan,
		label="1464:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1414:CS" -> "1464:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1420:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f0647df0f90>",
		fillcolor=lightcyan,
		label="1420:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1414:CS" -> "1420:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1447:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1453:BL" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1426:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647de72d0>",
		fillcolor=springgreen,
		label="1426:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1424:BL" -> "1426:IF"	 [cond="[]",
		lineno=None];
	"1426:IF" -> "1426:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1426];
	"1466:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647dfa1d0>",
		fillcolor=springgreen,
		label="1466:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1466:IF" -> "1466:BS"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="(rx_valid && rx_active && !rx_err)",
		lineno=1466];
	"1430:IF" -> "1437:IF"	 [cond="['pid_TOKEN', 'rx_valid', 'rx_active', 'rx_err']",
		label="!((pid_TOKEN && rx_valid && rx_active && !rx_err))",
		lineno=1430];
	"1431:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647ddc8d0>",
		fillcolor=turquoise,
		label="1431:BL
token_le_1 = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647ddc910>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0647ddca50>]",
		style=filled,
		typ=Block];
	"1430:IF" -> "1431:BL"	 [cond="['pid_TOKEN', 'rx_valid', 'rx_active', 'rx_err']",
		label="(pid_TOKEN && rx_valid && rx_active && !rx_err)",
		lineno=1430];
	"1467:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647dfa390>",
		fillcolor=springgreen,
		label="1467:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1467:IF" -> "1468:BL"	 [cond="['rx_active', 'rx_err']",
		label="(!rx_active || rx_err)",
		lineno=1467];
	"1451:BL" -> "1452:IF"	 [cond="[]",
		lineno=None];
	"1465:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0647dfa190>",
		fillcolor=turquoise,
		label="1465:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1464:CA" -> "1465:BL"	 [cond="[]",
		lineno=None];
	"1418:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0647df0390>",
		fillcolor=springgreen,
		label="1418:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1418:IF" -> "1418:BS"	 [cond="['rx_valid', 'rx_active']",
		label="(rx_valid && rx_active)",
		lineno=1418];
	"1416:BL" -> "1418:IF"	 [cond="[]",
		lineno=None];
	"1420:CA" -> "1421:BL"	 [cond="[]",
		lineno=None];
	"1465:BL" -> "1466:IF"	 [cond="[]",
		lineno=None];
	"1465:BL" -> "1467:IF"	 [cond="[]",
		lineno=None];
	"1431:BL" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1461:IF" -> "1461:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1461];
	"1445:BL" -> "1447:IF"	 [cond="[]",
		lineno=None];
}
