strict digraph "compose( ,  )" {
	node [label="\N"];
	"1461:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f3e10>",
		fillcolor=cadetblue,
		label="1461:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f3e10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_1403:AL"	 [def_var="['got_pid_ack', 'data_done', 'seq_err', 'token_le_1', 'token_le_2', 'pid_le_sm', 'data_valid_d', 'next_state']",
		label="Leaf_1403:AL"];
	"1461:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1421:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269eea90>",
		fillcolor=turquoise,
		label="1421:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1423:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269eeed0>",
		fillcolor=springgreen,
		label="1423:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1421:BL" -> "1423:IF"	 [cond="[]",
		lineno=None];
	"1346:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626a14690>",
		clk_sens=True,
		fillcolor=gold,
		label="1346:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'rxv1', 'data_valid_d', 'data_done']"];
	"1348:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a14a10>",
		fillcolor=springgreen,
		label="1348:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1346:AL" -> "1348:IF"	 [cond="[]",
		lineno=None];
	"1348:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a149d0>",
		fillcolor=firebrick,
		label="1348:NS
rxv2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a149d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1346:AL"	 [def_var="['rxv2']",
		label="Leaf_1346:AL"];
	"1348:NS" -> "Leaf_1346:AL"	 [cond="[]",
		lineno=None];
	"1466:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0626a0d150>",
		fillcolor=cadetblue,
		label="1466:BS
data_valid_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0626a0d150>]",
		style=filled,
		typ=BlockingSubstitution];
	"1466:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1403:AL" -> "1346:AL";
	"1335:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626a14110>",
		clk_sens=True,
		fillcolor=gold,
		label="1335:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'data_valid_d', 'data_done']"];
	"Leaf_1403:AL" -> "1335:AL";
	"1354:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626a14910>",
		clk_sens=True,
		fillcolor=gold,
		label="1354:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rxv2', 'data_valid_d']"];
	"Leaf_1403:AL" -> "1354:AL";
	"1366:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626a08d50>",
		def_var="['rx_data_done']",
		fillcolor=deepskyblue,
		label="1366:AS
rx_data_done = data_done;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_done']"];
	"Leaf_1403:AL" -> "1366:AS";
	"1253:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626996b50>",
		def_var="['pid_ld_en']",
		fillcolor=deepskyblue,
		label="1253:AS
pid_ld_en = pid_le_sm & rx_active & rx_valid;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid_le_sm', 'rx_active', 'rx_valid']"];
	"Leaf_1403:AL" -> "1253:AS";
	"1357:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626a08310>",
		clk_sens=True,
		fillcolor=gold,
		label="1357:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_valid_d', 'rx_data', 'd0', 'd1']"];
	"Leaf_1403:AL" -> "1357:AL";
	"1388:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626a0e1d0>",
		def_var="['crc16_err']",
		fillcolor=deepskyblue,
		label="1388:AS
crc16_err = data_done & (crc16_sum != 16'h800d);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_done', 'crc16_sum']"];
	"Leaf_1403:AL" -> "1388:AS";
	"1294:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626c86ad0>",
		clk_sens=True,
		fillcolor=gold,
		label="1294:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_le_2']"];
	"Leaf_1403:AL" -> "1294:AL";
	"1398:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626a0e350>",
		clk_sens=True,
		fillcolor=gold,
		label="1398:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'next_state']"];
	"Leaf_1403:AL" -> "1398:AL";
	"1288:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626c86710>",
		clk_sens=True,
		fillcolor=gold,
		label="1288:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_le_1', 'rx_data']"];
	"Leaf_1403:AL" -> "1288:AL";
	"1297:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626c86e50>",
		clk_sens=True,
		fillcolor=gold,
		label="1297:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['got_pid_ack', 'token_valid_r1']"];
	"Leaf_1403:AL" -> "1297:AL";
	"1376:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f06269f2390>",
		clk_sens=True,
		fillcolor=gold,
		label="1376:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_valid_d', 'crc16_out', 'crc16_clr']"];
	"Leaf_1403:AL" -> "1376:AL";
	"1291:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626c86a10>",
		clk_sens=True,
		fillcolor=gold,
		label="1291:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_le_2', 'rx_data']"];
	"Leaf_1403:AL" -> "1291:AL";
	"1337:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a14310>",
		fillcolor=springgreen,
		label="1337:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1335:AL" -> "1337:IF"	 [cond="[]",
		lineno=None];
	"1468:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0626a0d4d0>",
		fillcolor=turquoise,
		label="1468:BL
data_done = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0626a0d450>]",
		style=filled,
		typ=Block];
	"1470:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a0d610>",
		fillcolor=springgreen,
		label="1470:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1468:BL" -> "1470:IF"	 [cond="[]",
		lineno=None];
	"1361:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a08950>",
		fillcolor=firebrick,
		label="1361:NS
d2 <= d1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a08950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1357:AL"	 [def_var="['d2', 'd0', 'd1']",
		label="Leaf_1357:AL"];
	"1361:NS" -> "Leaf_1357:AL"	 [cond="[]",
		lineno=None];
	"1437:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269f7c90>",
		fillcolor=springgreen,
		label="1437:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1443:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269f3190>",
		fillcolor=springgreen,
		label="1443:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1437:IF" -> "1443:IF"	 [cond="['pid_DATA', 'rx_valid', 'rx_active', 'rx_err']",
		label="!((pid_DATA && rx_valid && rx_active && !rx_err))",
		lineno=1437];
	"1438:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269f7b50>",
		fillcolor=turquoise,
		label="1438:BL
data_valid_d = 1'b1;
next_state = DATA;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f7b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f7cd0>]",
		style=filled,
		typ=Block];
	"1437:IF" -> "1438:BL"	 [cond="['pid_DATA', 'rx_valid', 'rx_active', 'rx_err']",
		label="(pid_DATA && rx_valid && rx_active && !rx_err)",
		lineno=1437];
	"1292:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626c86950>",
		fillcolor=springgreen,
		label="1292:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1292:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626c86b90>",
		fillcolor=firebrick,
		label="1292:NS
token1 <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626c86b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1292:IF" -> "1292:NS"	 [cond="['token_le_2']",
		label=token_le_2,
		lineno=1292];
	"Leaf_1354:AL"	 [def_var="['data_valid0']",
		label="Leaf_1354:AL"];
	"1365:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626a08bd0>",
		def_var="['rx_data_valid']",
		fillcolor=deepskyblue,
		label="1365:AS
rx_data_valid = data_valid0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_valid0']"];
	"Leaf_1354:AL" -> "1365:AS";
	"1372:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a08f50>",
		fillcolor=firebrick,
		label="1372:NS
rx_active_r <= rx_active;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a08f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1371:AL"	 [def_var="['rx_active_r']",
		label="Leaf_1371:AL"];
	"1372:NS" -> "Leaf_1371:AL"	 [cond="[]",
		lineno=None];
	"1268:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c89bd0>",
		def_var="['pid_SOF']",
		fillcolor=deepskyblue,
		label="1268:AS
pid_SOF = pid[3:0] == 4'b0101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1284:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c86150>",
		def_var="['pid_TOKEN']",
		fillcolor=deepskyblue,
		label="1284:AS
pid_TOKEN = pid_OUT | pid_IN | pid_SOF | pid_SETUP | pid_PING;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid_OUT', 'pid_IN', 'pid_SOF', 'pid_SETUP', 'pid_PING']"];
	"1268:AS" -> "1284:AS";
	"1405:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269ee550>",
		fillcolor=turquoise,
		label="1405:BL
next_state = state;
pid_le_sm = 1'b0;
token_le_1 = 1'b0;
token_le_2 = 1'b0;
data_valid_d = 1'b0;
data_done = 1'b0;
seq_err = \
1'b0;
got_pid_ack = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0626a0eb90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0626a0ecd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0626a0ee10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0626a0ef50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269ee110>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269ee250>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269ee390>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269ee4d0>]",
		style=filled,
		typ=Block];
	"1414:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f06269eefd0>",
		fillcolor=linen,
		label="1414:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1405:BL" -> "1414:CS"	 [cond="[]",
		lineno=None];
	"1424:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269eef10>",
		fillcolor=turquoise,
		label="1424:BL
got_pid_ack = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269eee90>]",
		style=filled,
		typ=Block];
	"1423:IF" -> "1424:BL"	 [cond="['pid_ACK', 'rx_err']",
		label="(pid_ACK && !rx_err)",
		lineno=1423];
	"1430:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269f7790>",
		fillcolor=springgreen,
		label="1430:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1423:IF" -> "1430:IF"	 [cond="['pid_ACK', 'rx_err']",
		label="!((pid_ACK && !rx_err))",
		lineno=1423];
	"Leaf_1294:AL"	 [def_var="['token_valid_r1']",
		label="Leaf_1294:AL"];
	"Leaf_1294:AL" -> "1297:AL";
	"1355:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a08110>",
		fillcolor=firebrick,
		label="1355:NS
data_valid0 <= rxv2 & data_valid_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a08110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1354:AL" -> "1355:NS"	 [cond="[]",
		lineno=None];
	"1322:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f06269ec4d0>",
		def_var="['crc5_out2']",
		fillcolor=deepskyblue,
		label="1322:AS
crc5_out2 = ~{ crc5_out[0], crc5_out[1], crc5_out[2], crc5_out[3], crc5_out[4] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc5_out', 'crc5_out', 'crc5_out', 'crc5_out', 'crc5_out']"];
	"1304:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c94590>",
		def_var="['crc5_err']",
		fillcolor=deepskyblue,
		label="1304:AS
crc5_err = token_valid & (crc5_out2 != token_crc5);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token_valid', 'crc5_out2', 'token_crc5']"];
	"1322:AS" -> "1304:AS";
	"1269:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c89e50>",
		def_var="['pid_SETUP']",
		fillcolor=deepskyblue,
		label="1269:AS
pid_SETUP = pid[3:0] == 4'b1101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1269:AS" -> "1284:AS";
	"1348:IF" -> "1348:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1348];
	"1350:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a14d50>",
		fillcolor=springgreen,
		label="1350:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1348:IF" -> "1350:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1348];
	"1298:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626c94190>",
		fillcolor=firebrick,
		label="1298:NS
token_valid_str1 <= token_valid_r1 | got_pid_ack;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626c94190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1297:AL"	 [def_var="['token_valid_str1']",
		label="Leaf_1297:AL"];
	"1298:NS" -> "Leaf_1297:AL"	 [cond="[]",
		lineno=None];
	"1453:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269f3690>",
		fillcolor=turquoise,
		label="1453:BL
token_le_2 = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f3650>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f37d0>]",
		style=filled,
		typ=Block];
	"1453:BL" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1426:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269f7090>",
		fillcolor=springgreen,
		label="1426:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1424:BL" -> "1426:IF"	 [cond="[]",
		lineno=None];
	"1426:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f7190>",
		fillcolor=cadetblue,
		label="1426:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f7190>]",
		style=filled,
		typ=BlockingSubstitution];
	"1426:IF" -> "1426:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1426];
	"1276:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c99050>",
		def_var="['pid_STALL']",
		fillcolor=deepskyblue,
		label="1276:AS
pid_STALL = pid[3:0] == 4'b1110;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1415:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f06269ee690>",
		fillcolor=lightcyan,
		label="1415:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1416:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269ee850>",
		fillcolor=turquoise,
		label="1416:BL
pid_le_sm = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269ee7d0>]",
		style=filled,
		typ=Block];
	"1415:CA" -> "1416:BL"	 [cond="[]",
		lineno=None];
	"1300:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c94350>",
		def_var="['token_valid']",
		fillcolor=deepskyblue,
		label="1300:AS
token_valid = token_valid_str1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token_valid_str1']"];
	"1300:AS" -> "1304:AS";
	"1352:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a14e90>",
		fillcolor=springgreen,
		label="1352:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1352:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a14f90>",
		fillcolor=firebrick,
		label="1352:NS
rxv2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a14f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1352:IF" -> "1352:NS"	 [cond="['data_done']",
		label=data_done,
		lineno=1352];
	"1260:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626996f50>",
		fillcolor=springgreen,
		label="1260:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1262:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626c890d0>",
		fillcolor=springgreen,
		label="1262:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1260:IF" -> "1262:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1260];
	"1260:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626996f10>",
		fillcolor=firebrick,
		label="1260:NS
pid <= 8'hf0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626996f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1260:IF" -> "1260:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1260];
	"1418:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269ee9d0>",
		fillcolor=springgreen,
		label="1418:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1416:BL" -> "1418:IF"	 [cond="[]",
		lineno=None];
	"1379:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f06269f27d0>",
		fillcolor=firebrick,
		label="1379:NS
crc16_sum <= crc16_out;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f06269f27d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1376:AL"	 [def_var="['crc16_sum']",
		label="Leaf_1376:AL"];
	"1379:NS" -> "Leaf_1376:AL"	 [cond="[]",
		lineno=None];
	"1258:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626996d50>",
		clk_sens=True,
		fillcolor=gold,
		label="1258:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'rx_data', 'pid_ld_en']"];
	"1253:AS" -> "1258:AL";
	"1258:AL" -> "1260:IF"	 [cond="[]",
		lineno=None];
	"1418:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269eead0>",
		fillcolor=cadetblue,
		label="1418:BS
next_state = ACTIVE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269eead0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1418:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1400:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a0e510>",
		fillcolor=firebrick,
		label="1400:NS
state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a0e510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1398:AL"	 [def_var="['state']",
		label="Leaf_1398:AL"];
	"1400:NS" -> "Leaf_1398:AL"	 [cond="[]",
		lineno=None];
	"1272:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c81610>",
		def_var="['pid_DATA2']",
		fillcolor=deepskyblue,
		label="1272:AS
pid_DATA2 = pid[3:0] == 4'b0111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1285:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c86490>",
		def_var="['pid_DATA']",
		fillcolor=deepskyblue,
		label="1285:AS
pid_DATA = pid_DATA0 | pid_DATA1 | pid_DATA2 | pid_MDATA;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']"];
	"1272:AS" -> "1285:AS";
	"1377:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f06269f2510>",
		fillcolor=firebrick,
		label="1377:NS
crc16_sum <= 16'hffff;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f06269f2510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1377:NS" -> "Leaf_1376:AL"	 [cond="[]",
		lineno=None];
	"1279:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c997d0>",
		def_var="['pid_ERR']",
		fillcolor=deepskyblue,
		label="1279:AS
pid_ERR = pid[3:0] == 4'b1100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1273:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c81890>",
		def_var="['pid_MDATA']",
		fillcolor=deepskyblue,
		label="1273:AS
pid_MDATA = pid[3:0] == 4'b1111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1273:AS" -> "1285:AS";
	"1262:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626c891d0>",
		fillcolor=firebrick,
		label="1262:NS
pid <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626c891d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1262:IF" -> "1262:NS"	 [cond="['pid_ld_en']",
		label=pid_ld_en,
		lineno=1262];
	"1352:NS" -> "Leaf_1346:AL"	 [cond="[]",
		lineno=None];
	"1445:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269f3310>",
		fillcolor=turquoise,
		label="1445:BL
seq_err = !rx_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f3290>]",
		style=filled,
		typ=Block];
	"1443:IF" -> "1445:BL"	 [cond="['rx_active', 'rx_err', 'rx_valid', 'pid_TOKEN', 'pid_DATA']",
		label="(!rx_active || rx_err || rx_valid && !(pid_TOKEN || pid_DATA))",
		lineno=1443];
	"1426:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1328:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f06269ecf10>",
		def_var="['token_crc5']",
		fillcolor=deepskyblue,
		label="1328:AS
token_crc5 = token1[7:3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token1']"];
	"1328:AS" -> "1304:AS";
	"1339:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a14590>",
		fillcolor=firebrick,
		label="1339:NS
rxv1 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a14590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1335:AL"	 [def_var="['rxv1']",
		label="Leaf_1335:AL"];
	"1339:NS" -> "Leaf_1335:AL"	 [cond="[]",
		lineno=None];
	"1359:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a08510>",
		fillcolor=firebrick,
		label="1359:NS
d0 <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a08510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1359:NS" -> "Leaf_1357:AL"	 [cond="[]",
		lineno=None];
	"1281:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c99cd0>",
		def_var="['pid_PING']",
		fillcolor=deepskyblue,
		label="1281:AS
pid_PING = pid[3:0] == 4'b0100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1281:AS" -> "1284:AS";
	"1358:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f0626a087d0>",
		fillcolor=turquoise,
		label="1358:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1357:AL" -> "1358:BL"	 [cond="[]",
		lineno=None];
	"1438:BL" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1360:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a08750>",
		fillcolor=firebrick,
		label="1360:NS
d1 <= d0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a08750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1360:NS" -> "Leaf_1357:AL"	 [cond="[]",
		lineno=None];
	"1341:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a14810>",
		fillcolor=firebrick,
		label="1341:NS
rxv1 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a14810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1341:NS" -> "Leaf_1335:AL"	 [cond="[]",
		lineno=None];
	"1361:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a08850>",
		fillcolor=springgreen,
		label="1361:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1361:IF" -> "1361:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1361];
	"1358:BL" -> "1361:IF"	 [cond="[]",
		lineno=None];
	"1360:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a08650>",
		fillcolor=springgreen,
		label="1360:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1358:BL" -> "1360:IF"	 [cond="[]",
		lineno=None];
	"1359:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a08250>",
		fillcolor=springgreen,
		label="1359:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1358:BL" -> "1359:IF"	 [cond="[]",
		lineno=None];
	"1271:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c81390>",
		def_var="['pid_DATA1']",
		fillcolor=deepskyblue,
		label="1271:AS
pid_DATA1 = pid[3:0] == 4'b1011;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1271:AS" -> "1285:AS";
	"1275:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c81d90>",
		def_var="['pid_NACK']",
		fillcolor=deepskyblue,
		label="1275:AS
pid_NACK = pid[3:0] == 4'b1010;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1339:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a145d0>",
		fillcolor=springgreen,
		label="1339:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1339:IF" -> "1339:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1339];
	"1341:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a14710>",
		fillcolor=springgreen,
		label="1341:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1339:IF" -> "1341:IF"	 [cond="['data_valid_d']",
		label="!(data_valid_d)",
		lineno=1339];
	"Leaf_1291:AL"	 [def_var="['token1']",
		label="Leaf_1291:AL"];
	"1292:NS" -> "Leaf_1291:AL"	 [cond="[]",
		lineno=None];
	"1374:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f06269f21d0>",
		def_var="['crc16_clr']",
		fillcolor=deepskyblue,
		label="1374:AS
crc16_clr = rx_active & !rx_active_r;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_active', 'rx_active_r']"];
	"1374:AS" -> "1376:AL";
	"1278:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c99550>",
		def_var="['pid_PRE']",
		fillcolor=deepskyblue,
		label="1278:AS
pid_PRE = pid[3:0] == 4'b1100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1270:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c81110>",
		def_var="['pid_DATA0']",
		fillcolor=deepskyblue,
		label="1270:AS
pid_DATA0 = pid[3:0] == 4'b0011;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1270:AS" -> "1285:AS";
	"1295:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626c86dd0>",
		fillcolor=firebrick,
		label="1295:NS
token_valid_r1 <= token_le_2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626c86dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1294:AL" -> "1295:NS"	 [cond="[]",
		lineno=None];
	"1470:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0626a0d710>",
		fillcolor=cadetblue,
		label="1470:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0626a0d710>]",
		style=filled,
		typ=BlockingSubstitution];
	"1470:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1297:AL" -> "1300:AS";
	"1371:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626a08d10>",
		clk_sens=True,
		fillcolor=gold,
		label="1371:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_active']"];
	"1371:AL" -> "1372:NS"	 [cond="[]",
		lineno=None];
	"1459:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269f3c10>",
		fillcolor=turquoise,
		label="1459:BL
seq_err = !rx_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f3b90>]",
		style=filled,
		typ=Block];
	"1461:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269f3d10>",
		fillcolor=springgreen,
		label="1461:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1459:BL" -> "1461:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1371:AL" -> "1374:AS";
	"1350:IF" -> "1352:IF"	 [cond="['rxv1', 'data_valid_d']",
		label="!((rxv1 && data_valid_d))",
		lineno=1350];
	"1350:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a14d10>",
		fillcolor=firebrick,
		label="1350:NS
rxv2 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a14d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1350:IF" -> "1350:NS"	 [cond="['rxv1', 'data_valid_d']",
		label="(rxv1 && data_valid_d)",
		lineno=1350];
	"1360:IF" -> "1360:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1360];
	"1403:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f0626a0eb10>",
		clk_sens=False,
		fillcolor=gold,
		label="1403:AL",
		sens="['state', 'rx_valid', 'rx_active', 'rx_err', 'pid_ACK', 'pid_TOKEN', 'pid_DATA']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_err', 'rx_valid', 'state', 'rx_active', 'pid_TOKEN', 'pid_DATA', 'pid_ACK']"];
	"1284:AS" -> "1403:AL";
	"Leaf_1398:AL" -> "1403:AL";
	"1400:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a0e550>",
		fillcolor=springgreen,
		label="1400:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1398:AL" -> "1400:IF"	 [cond="[]",
		lineno=None];
	"1458:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269f3a10>",
		fillcolor=springgreen,
		label="1458:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1458:IF" -> "1459:BL"	 [cond="['rx_active', 'rx_err']",
		label="(!rx_active || rx_err)",
		lineno=1458];
	"1470:IF" -> "1470:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1470];
	"1447:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f3510>",
		fillcolor=cadetblue,
		label="1447:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f3510>]",
		style=filled,
		typ=BlockingSubstitution];
	"1447:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1280:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c99a50>",
		def_var="['pid_SPLIT']",
		fillcolor=deepskyblue,
		label="1280:AS
pid_SPLIT = pid[3:0] == 4'b1000;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1376:AL" -> "1388:AS";
	"1364:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626a08a50>",
		def_var="['rx_data_st']",
		fillcolor=deepskyblue,
		label="1364:AS
rx_data_st = d2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['d2']"];
	"1277:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c992d0>",
		def_var="['pid_NYET']",
		fillcolor=deepskyblue,
		label="1277:AS
pid_NYET = pid[3:0] == 4'b0110;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1335:AL" -> "1346:AL";
	"1447:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269f3410>",
		fillcolor=springgreen,
		label="1447:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1445:BL" -> "1447:IF"	 [cond="[]",
		lineno=None];
	"1295:NS" -> "Leaf_1294:AL"	 [cond="[]",
		lineno=None];
	"1467:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a0d310>",
		fillcolor=springgreen,
		label="1467:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1467:IF" -> "1468:BL"	 [cond="['rx_active', 'rx_err']",
		label="(!rx_active || rx_err)",
		lineno=1467];
	"1325:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f06269ec810>",
		def_var="['frame_no']",
		fillcolor=deepskyblue,
		label="1325:AS
frame_no = { token1[2:0], token0 };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token1', 'token0']"];
	"1264:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c894d0>",
		def_var="['pid_cks_err']",
		fillcolor=deepskyblue,
		label="1264:AS
pid_cks_err = pid[3:0] != ~pid[7:4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid', 'pid']"];
	"1274:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c81b10>",
		def_var="['pid_ACK']",
		fillcolor=deepskyblue,
		label="1274:AS
pid_ACK = pid[3:0] == 4'b0010;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1274:AS" -> "1403:AL";
	"1337:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a142d0>",
		fillcolor=firebrick,
		label="1337:NS
rxv1 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a142d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1337:NS" -> "Leaf_1335:AL"	 [cond="[]",
		lineno=None];
	"1450:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f06269f7150>",
		fillcolor=lightcyan,
		label="1450:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1451:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269f7410>",
		fillcolor=turquoise,
		label="1451:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1450:CA" -> "1451:BL"	 [cond="[]",
		lineno=None];
	"1420:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f06269eeb10>",
		fillcolor=lightcyan,
		label="1420:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1420:CA" -> "1421:BL"	 [cond="[]",
		lineno=None];
	"1465:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269f3f90>",
		fillcolor=turquoise,
		label="1465:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1465:BL" -> "1467:IF"	 [cond="[]",
		lineno=None];
	"1466:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626a0d050>",
		fillcolor=springgreen,
		label="1466:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1465:BL" -> "1466:IF"	 [cond="[]",
		lineno=None];
	"1350:NS" -> "Leaf_1346:AL"	 [cond="[]",
		lineno=None];
	"1461:IF" -> "1461:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1461];
	"1327:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f06269ecd10>",
		def_var="['token_endp']",
		fillcolor=deepskyblue,
		label="1327:AS
token_endp = { token1[2:0], token0[7] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token1', 'token0']"];
	"1414:CS" -> "1415:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1414:CS" -> "1450:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1414:CS" -> "1420:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1464:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f06269f3850>",
		fillcolor=lightcyan,
		label="1464:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1414:CS" -> "1464:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1289:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626c86890>",
		fillcolor=firebrick,
		label="1289:NS
token0 <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626c86890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1288:AL"	 [def_var="['token0']",
		label="Leaf_1288:AL"];
	"1289:NS" -> "Leaf_1288:AL"	 [cond="[]",
		lineno=None];
	"1289:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0626c86690>",
		fillcolor=springgreen,
		label="1289:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1288:AL" -> "1289:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1258:AL"	 [def_var="['pid']",
		label="Leaf_1258:AL"];
	"Leaf_1258:AL" -> "1268:AS";
	"Leaf_1258:AL" -> "1269:AS";
	"Leaf_1258:AL" -> "1276:AS";
	"Leaf_1258:AL" -> "1272:AS";
	"Leaf_1258:AL" -> "1279:AS";
	"Leaf_1258:AL" -> "1273:AS";
	"Leaf_1258:AL" -> "1281:AS";
	"Leaf_1258:AL" -> "1271:AS";
	"Leaf_1258:AL" -> "1275:AS";
	"Leaf_1258:AL" -> "1278:AS";
	"Leaf_1258:AL" -> "1270:AS";
	"Leaf_1258:AL" -> "1280:AS";
	"Leaf_1258:AL" -> "1277:AS";
	"Leaf_1258:AL" -> "1264:AS";
	"Leaf_1258:AL" -> "1274:AS";
	"1266:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c896d0>",
		def_var="['pid_OUT']",
		fillcolor=deepskyblue,
		label="1266:AS
pid_OUT = pid[3:0] == 4'b0001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1258:AL" -> "1266:AS";
	"1282:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c99f50>",
		def_var="['pid_RES']",
		fillcolor=deepskyblue,
		label="1282:AS
pid_RES = pid[3:0] == 4'b0000;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1258:AL" -> "1282:AS";
	"1267:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f0626c89950>",
		def_var="['pid_IN']",
		fillcolor=deepskyblue,
		label="1267:AS
pid_IN = pid[3:0] == 4'b1001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1258:AL" -> "1267:AS";
	"Leaf_1346:AL" -> "1354:AL";
	"Leaf_1288:AL" -> "1325:AS";
	"Leaf_1288:AL" -> "1327:AS";
	"1326:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f06269eca10>",
		def_var="['token_fadr']",
		fillcolor=deepskyblue,
		label="1326:AS
token_fadr = token0[6:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token0']"];
	"Leaf_1288:AL" -> "1326:AS";
	"1285:AS" -> "1403:AL";
	"1341:IF" -> "1341:NS"	 [cond="['data_done']",
		label=data_done,
		lineno=1341];
	"Leaf_1357:AL" -> "1357:AL";
	"Leaf_1357:AL" -> "1364:AS";
	"1452:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269f3790>",
		fillcolor=springgreen,
		label="1452:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1452:IF" -> "1453:BL"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="(rx_valid && rx_active && !rx_err)",
		lineno=1452];
	"1452:IF" -> "1458:IF"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="!((rx_valid && rx_active && !rx_err))",
		lineno=1452];
	"1379:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269f26d0>",
		fillcolor=springgreen,
		label="1379:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1379:IF" -> "1379:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1379];
	"1337:IF" -> "1339:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1337];
	"1337:IF" -> "1337:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1337];
	"Leaf_1291:AL" -> "1328:AS";
	"Leaf_1291:AL" -> "1325:AS";
	"Leaf_1291:AL" -> "1327:AS";
	"1297:AL" -> "1298:NS"	 [cond="[]",
		lineno=None];
	"1447:IF" -> "1447:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1447];
	"1266:AS" -> "1284:AS";
	"1377:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f06269f2550>",
		fillcolor=springgreen,
		label="1377:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1376:AL" -> "1377:IF"	 [cond="[]",
		lineno=None];
	"1260:NS" -> "Leaf_1258:AL"	 [cond="[]",
		lineno=None];
	"1291:AL" -> "1292:IF"	 [cond="[]",
		lineno=None];
	"1401:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a0e690>",
		fillcolor=firebrick,
		label="1401:NS
state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0626a0e690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1401:NS" -> "Leaf_1398:AL"	 [cond="[]",
		lineno=None];
	"1403:AL" -> "1405:BL"	 [cond="[]",
		lineno=None];
	"1359:IF" -> "1359:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1359];
	"1466:IF" -> "1466:BS"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="(rx_valid && rx_active && !rx_err)",
		lineno=1466];
	"1430:IF" -> "1437:IF"	 [cond="['pid_TOKEN', 'rx_valid', 'rx_active', 'rx_err']",
		label="!((pid_TOKEN && rx_valid && rx_active && !rx_err))",
		lineno=1430];
	"1431:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f06269f7550>",
		fillcolor=turquoise,
		label="1431:BL
token_le_1 = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f7590>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f06269f76d0>]",
		style=filled,
		typ=Block];
	"1430:IF" -> "1431:BL"	 [cond="['pid_TOKEN', 'rx_valid', 'rx_active', 'rx_err']",
		label="(pid_TOKEN && rx_valid && rx_active && !rx_err)",
		lineno=1430];
	"1262:NS" -> "Leaf_1258:AL"	 [cond="[]",
		lineno=None];
	"1451:BL" -> "1452:IF"	 [cond="[]",
		lineno=None];
	"1267:AS" -> "1284:AS";
	"1377:IF" -> "1377:NS"	 [cond="['crc16_clr']",
		label=crc16_clr,
		lineno=1377];
	"1377:IF" -> "1379:IF"	 [cond="['crc16_clr']",
		label="!(crc16_clr)",
		lineno=1377];
	"1464:CA" -> "1465:BL"	 [cond="[]",
		lineno=None];
	"1289:IF" -> "1289:NS"	 [cond="['token_le_1']",
		label=token_le_1,
		lineno=1289];
	"1418:IF" -> "1418:BS"	 [cond="['rx_valid', 'rx_active']",
		label="(rx_valid && rx_active)",
		lineno=1418];
	"1355:NS" -> "Leaf_1354:AL"	 [cond="[]",
		lineno=None];
	"1431:BL" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1400:IF" -> "1400:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1400];
	"1400:IF" -> "1401:NS"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1400];
}
