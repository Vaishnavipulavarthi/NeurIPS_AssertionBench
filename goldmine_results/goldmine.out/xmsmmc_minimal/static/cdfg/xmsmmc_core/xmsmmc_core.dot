strict digraph "compose( ,  )" {
	node [label="\N"];
	"508:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708f10>",
		fillcolor=cadetblue,
		label="508:BS
cmd_state_next = 4'b0111;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_466:AL"	 [def_var="['cmd_state_next']",
		label="Leaf_466:AL"];
	"508:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"503:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708bd0>",
		fillcolor=cadetblue,
		label="503:BS
cmd_state_next = 4'b0011;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708bd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"503:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"541:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156f2cd0>",
		fillcolor=lightcyan,
		label="541:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"542:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156f2c50>",
		fillcolor=turquoise,
		label="542:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"541:CA" -> "542:BL"	 [cond="[]",
		lineno=None];
	"518:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156f24d0>",
		fillcolor=springgreen,
		label="518:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"518:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f25d0>",
		fillcolor=cadetblue,
		label="518:BS
cmd_state_next = 4'b1100;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f25d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"518:IF" -> "518:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=518];
	"498:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708890>",
		fillcolor=cadetblue,
		label="498:BS
cmd_state_next = 4'b0010;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708890>]",
		style=filled,
		typ=BlockingSubstitution];
	"498:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"535:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156f2b50>",
		fillcolor=lightcyan,
		label="535:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"536:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156f2650>",
		fillcolor=turquoise,
		label="536:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"535:CA" -> "536:BL"	 [cond="[]",
		lineno=None];
	"508:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515708e10>",
		fillcolor=springgreen,
		label="508:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"508:IF" -> "508:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=508];
	"501:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe515708990>",
		fillcolor=lightcyan,
		label="501:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"502:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5157088d0>",
		fillcolor=turquoise,
		label="502:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"501:CA" -> "502:BL"	 [cond="[]",
		lineno=None];
	"432:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156c9dd0>",
		fillcolor=firebrick,
		label="432:NS
counter_command_bits <= counter_command_bits + 8'b00000001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156c9dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_428:AL"	 [def_var="['counter_command_bits']",
		label="Leaf_428:AL"];
	"432:NS" -> "Leaf_428:AL"	 [cond="[]",
		lineno=None];
	"576:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5157079d0>",
		def_var="['mmc_clk']",
		fillcolor=deepskyblue,
		label="576:AS
mmc_clk = (!dis)? (int_reset)? 1'b0 : clk_mmc : 1'bz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dis', 'int_reset', 'clk_mmc']"];
	"479:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156e8cd0>",
		fillcolor=cadetblue,
		label="479:BS
cmd_state_next = 4'b0001;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156e8cd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"479:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"474:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156e8950>",
		fillcolor=cadetblue,
		label="474:BS
cmd_state_next = 4'b0000;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156e8950>]",
		style=filled,
		typ=BlockingSubstitution];
	"474:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"503:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515708ad0>",
		fillcolor=springgreen,
		label="503:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"503:IF" -> "503:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=503];
	"506:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe515708cd0>",
		fillcolor=lightcyan,
		label="506:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"507:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe515708c10>",
		fillcolor=turquoise,
		label="507:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"506:CA" -> "507:BL"	 [cond="[]",
		lineno=None];
	"482:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156e8d10>",
		fillcolor=lightcyan,
		label="482:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe515708250>",
		fillcolor=turquoise,
		label="483:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"482:CA" -> "483:BL"	 [cond="[]",
		lineno=None];
	"479:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156e8bd0>",
		fillcolor=springgreen,
		label="479:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"479:IF" -> "479:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=479];
	"474:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156e8850>",
		fillcolor=springgreen,
		label="474:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"474:IF" -> "474:BS"	 [cond="['cmd_done', 'init']",
		label="(cmd_done & init)",
		lineno=474];
	"496:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe515708590>",
		fillcolor=lightcyan,
		label="496:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"497:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5157080d0>",
		fillcolor=turquoise,
		label="497:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"496:CA" -> "497:BL"	 [cond="[]",
		lineno=None];
	"516:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156f2390>",
		fillcolor=lightcyan,
		label="516:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"517:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156f22d0>",
		fillcolor=turquoise,
		label="517:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"516:CA" -> "517:BL"	 [cond="[]",
		lineno=None];
	"542:BL" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"513:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156f2190>",
		fillcolor=springgreen,
		label="513:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"513:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2290>",
		fillcolor=cadetblue,
		label="513:BS
cmd_state_next = 4'b1011;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2290>]",
		style=filled,
		typ=BlockingSubstitution];
	"513:IF" -> "513:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=513];
	"448:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5156e7990>",
		def_var="['cmd1_resp_busy_bit']",
		fillcolor=deepskyblue,
		label="448:AS
cmd1_resp_busy_bit = counter_command_bits[7:0] == 8'b00111101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['counter_command_bits']"];
	"466:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe5156e83d0>",
		clk_sens=False,
		fillcolor=gold,
		label="466:AL",
		sens="['cmd_state', 'done', 'cmd_done', 'init', 'mmc_cmd', 'cmd1_resp_start_bit', 'cmd1_resp_busy_bit']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cmd_done', 'cmd1_resp_busy_bit', 'cmd_state', 'init', 'cmd1_resp_start_bit', 'mmc_cmd', 'done']"];
	"448:AS" -> "466:AL";
	"478:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156e8a10>",
		fillcolor=turquoise,
		label="478:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"478:BL" -> "479:IF"	 [cond="[]",
		lineno=None];
	"443:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5156e7390>",
		def_var="['cmd_done']",
		fillcolor=deepskyblue,
		label="443:AS
cmd_done = counter_command_bits == 8'b11111111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['counter_command_bits']"];
	"443:AS" -> "466:AL";
	"467:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156e8510>",
		fillcolor=turquoise,
		label="467:BL
cmd_state_next = cmd_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156e8490>]",
		style=filled,
		typ=Block];
	"470:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fe5156f2750>",
		fillcolor=linen,
		label="470:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"467:BL" -> "470:CS"	 [cond="[]",
		lineno=None];
	"492:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515708490>",
		fillcolor=springgreen,
		label="492:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"483:BL" -> "492:IF"	 [cond="[]",
		lineno=None];
	"486:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515708090>",
		fillcolor=springgreen,
		label="486:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"483:BL" -> "486:IF"	 [cond="[]",
		lineno=None];
	"470:CS" -> "541:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"470:CS" -> "535:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"470:CS" -> "501:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"470:CS" -> "506:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"470:CS" -> "482:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"470:CS" -> "496:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"470:CS" -> "516:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"525:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156f2690>",
		fillcolor=lightcyan,
		label="525:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"470:CS" -> "525:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"472:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156e8650>",
		fillcolor=lightcyan,
		label="472:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"470:CS" -> "472:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"511:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156f2050>",
		fillcolor=lightcyan,
		label="511:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"470:CS" -> "511:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"477:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156e8a50>",
		fillcolor=lightcyan,
		label="477:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"470:CS" -> "477:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"466:AL" -> "467:BL"	 [cond="[]",
		lineno=None];
	"518:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"493:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5157085d0>",
		fillcolor=cadetblue,
		label="493:BS
cmd_state_next = 4'b1001;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5157085d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"493:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"517:BL" -> "518:IF"	 [cond="[]",
		lineno=None];
	"526:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156f2990>",
		fillcolor=turquoise,
		label="526:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"525:CA" -> "526:BL"	 [cond="[]",
		lineno=None];
	"Leaf_428:AL" -> "448:AS";
	"Leaf_428:AL" -> "443:AS";
	"446:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5156e7690>",
		def_var="['cmd1_resp_start_bit']",
		fillcolor=deepskyblue,
		label="446:AS
cmd1_resp_start_bit = counter_command_bits[7:0] == 8'b00110101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['counter_command_bits']"];
	"Leaf_428:AL" -> "446:AS";
	"428:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe5156c99d0>",
		clk_sens=False,
		fillcolor=gold,
		label="428:AL",
		sens="['clk_mmc', 'int_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['counter_command_bits', 'int_reset']"];
	"Leaf_428:AL" -> "428:AL";
	"453:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe5156e7bd0>",
		clk_sens=False,
		fillcolor=gold,
		label="453:AL",
		sens="['clk_mmc', 'int_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cmd_state_next', 'int_reset']"];
	"454:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156e7cd0>",
		fillcolor=springgreen,
		label="454:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"453:AL" -> "454:IF"	 [cond="[]",
		lineno=None];
	"502:BL" -> "503:IF"	 [cond="[]",
		lineno=None];
	"429:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156c9c10>",
		fillcolor=springgreen,
		label="429:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"429:IF" -> "432:NS"	 [cond="['int_reset']",
		label="!(int_reset)",
		lineno=429];
	"430:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156c9b50>",
		fillcolor=firebrick,
		label="430:NS
counter_command_bits <= 8'b00000000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156c9b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"429:IF" -> "430:NS"	 [cond="['int_reset']",
		label=int_reset,
		lineno=429];
	"446:AS" -> "466:AL";
	"487:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5157081d0>",
		fillcolor=cadetblue,
		label="487:BS
cmd_state_next = 4'b1110;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5157081d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"487:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"455:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156e7d10>",
		fillcolor=firebrick,
		label="455:NS
cmd_state <= 4'b1111;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156e7d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_453:AL"	 [def_var="['cmd_state']",
		label="Leaf_453:AL"];
	"455:NS" -> "Leaf_453:AL"	 [cond="[]",
		lineno=None];
	"Leaf_453:AL" -> "466:AL";
	"552:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5156f2e90>",
		def_var="['mode_transfer']",
		fillcolor=deepskyblue,
		label="552:AS
mode_transfer = cmd_state == 4'b1100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cmd_state']"];
	"Leaf_453:AL" -> "552:AS";
	"579:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515707b10>",
		def_var="['error']",
		fillcolor=deepskyblue,
		label="579:AS
error = cmd_state == 4'b1110;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cmd_state']"];
	"Leaf_453:AL" -> "579:AS";
	"392:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515b19e50>",
		def_var="['config_request']",
		fillcolor=deepskyblue,
		label="392:AS
config_request = !init & !done;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['init', 'done']"];
	"407:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5156c9190>",
		def_var="['int_reset']",
		fillcolor=deepskyblue,
		label="407:AS
int_reset = config_request;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['config_request']"];
	"392:AS" -> "407:AS";
	"428:AL" -> "429:IF"	 [cond="[]",
		lineno=None];
	"Leaf_466:AL" -> "453:AL";
	"512:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe515708f50>",
		fillcolor=turquoise,
		label="512:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"512:BL" -> "513:IF"	 [cond="[]",
		lineno=None];
	"536:BL" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"454:IF" -> "455:NS"	 [cond="['int_reset']",
		label=int_reset,
		lineno=454];
	"457:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156e7ed0>",
		fillcolor=firebrick,
		label="457:NS
cmd_state <= cmd_state_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156e7ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"454:IF" -> "457:NS"	 [cond="['int_reset']",
		label="!(int_reset)",
		lineno=454];
	"473:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156e8610>",
		fillcolor=turquoise,
		label="473:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"472:CA" -> "473:BL"	 [cond="[]",
		lineno=None];
	"513:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"528:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2910>",
		fillcolor=cadetblue,
		label="528:BS
cmd_state_next = 4'b1101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2910>]",
		style=filled,
		typ=BlockingSubstitution];
	"528:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"575:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515707650>",
		def_var="['mmc_cmd']",
		fillcolor=deepskyblue,
		label="575:AS
mmc_cmd = (!dis & cmd_bits)? cmd_data_out : 1'bz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dis', 'cmd_bits', 'cmd_data_out']"];
	"575:AS" -> "466:AL";
	"527:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156f2810>",
		fillcolor=springgreen,
		label="527:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"526:BL" -> "527:IF"	 [cond="[]",
		lineno=None];
	"530:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156f2a90>",
		fillcolor=springgreen,
		label="530:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"526:BL" -> "530:IF"	 [cond="[]",
		lineno=None];
	"527:IF" -> "528:BS"	 [cond="['done']",
		label=done,
		lineno=527];
	"407:AS" -> "576:AS";
	"407:AS" -> "453:AL";
	"407:AS" -> "428:AL";
	"507:BL" -> "508:IF"	 [cond="[]",
		lineno=None];
	"511:CA" -> "512:BL"	 [cond="[]",
		lineno=None];
	"531:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2b90>",
		fillcolor=cadetblue,
		label="531:BS
cmd_state_next = 4'b1110;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2b90>]",
		style=filled,
		typ=BlockingSubstitution];
	"531:BS" -> "Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"473:BL" -> "474:IF"	 [cond="[]",
		lineno=None];
	"498:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515708790>",
		fillcolor=springgreen,
		label="498:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"498:IF" -> "498:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=498];
	"477:CA" -> "478:BL"	 [cond="[]",
		lineno=None];
	"457:NS" -> "Leaf_453:AL"	 [cond="[]",
		lineno=None];
	"492:IF" -> "493:BS"	 [cond="['cmd1_resp_busy_bit', 'mmc_cmd']",
		label="((cmd1_resp_busy_bit == 1'b1) & (mmc_cmd == 1'b1))",
		lineno=492];
	"430:NS" -> "Leaf_428:AL"	 [cond="[]",
		lineno=None];
	"530:IF" -> "531:BS"	 [cond="['init']",
		label="(!init)",
		lineno=530];
	"497:BL" -> "498:IF"	 [cond="[]",
		lineno=None];
	"486:IF" -> "487:BS"	 [cond="['cmd1_resp_start_bit', 'mmc_cmd']",
		label="((cmd1_resp_start_bit == 1'b1) & (mmc_cmd == 1'b1))",
		lineno=486];
}
