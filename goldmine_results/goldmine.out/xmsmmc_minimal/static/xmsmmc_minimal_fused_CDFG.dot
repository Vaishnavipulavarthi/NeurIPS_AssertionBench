strict digraph "compose( ,  )" {
	node [label="\N"];
	"boot_i.502:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5157088d0>",
		fillcolor=turquoise,
		label="boot_i.502:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.503:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515708ad0>",
		fillcolor=springgreen,
		label="boot_i.503:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.502:BL" -> "boot_i.503:IF"	 [cond="[]",
		lineno=None];
	"boot_i.443:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5156e7390>",
		def_var="['cmd_done']",
		fillcolor=deepskyblue,
		label="boot_i.443:AS
cmd_done = counter_command_bits == 8'b11111111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['counter_command_bits']"];
	"boot_i.466:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe5156e83d0>",
		clk_sens=False,
		fillcolor=gold,
		label="boot_i.466:AL",
		sens="['cmd_state', 'done', 'cmd_done', 'init', 'mmc_cmd', 'cmd1_resp_start_bit', 'cmd1_resp_busy_bit']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cmd_done', 'cmd1_resp_busy_bit', 'cmd_state', 'init', 'cmd1_resp_start_bit', 'mmc_cmd', 'done']"];
	"boot_i.443:AS" -> "boot_i.466:AL";
	"boot_i.mmc_cmd_select_i.181:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515e7ddd0>",
		def_var="['start_bit']",
		fillcolor=deepskyblue,
		label="boot_i.mmc_cmd_select_i.181:AS
start_bit = bit[7:0] == 8'b00000001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bit']"];
	"boot_i.mmc_cmd_select_i.268:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe51573ef10>",
		def_var="['data']",
		fillcolor=deepskyblue,
		label="boot_i.mmc_cmd_select_i.268:AS
data = start_bit | cmd[0] & (bit[5:0] == 6'b000111) | cmd[1] & (bit[5:0] == 6'b000110) | cmd[2] & (\
bit[5:0] == 6'b000101) | cmd[3] & (bit[5:0] == 6'b000100) | CMD1_dat | arg16_bit & ((cmd == 4'b0011) | (cmd == 4'b0111)) | crc_bit | \
stop_bit;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['start_bit', 'cmd', 'bit', 'cmd', 'bit', 'cmd', 'bit', 'cmd', 'bit', 'CMD1_dat', 'arg16_bit', 'cmd', 'cmd', 'crc_bit', 'stop_bit']"];
	"boot_i.mmc_cmd_select_i.181:AS" -> "boot_i.mmc_cmd_select_i.268:AS";
	"boot_i.503:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708bd0>",
		fillcolor=cadetblue,
		label="boot_i.503:BS
cmd_state_next = 4'b0011;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708bd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.503:IF" -> "boot_i.503:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=503];
	"boot_i.498:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708890>",
		fillcolor=cadetblue,
		label="boot_i.498:BS
cmd_state_next = 4'b0010;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708890>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.Leaf_466:AL"	 [def_var="['cmd_state_next']",
		label="boot_i.Leaf_466:AL"];
	"boot_i.498:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.precaler_i.Leaf_307:AL"	 [def_var="['prescaler']",
		label="boot_i.precaler_i.Leaf_307:AL"];
	"boot_i.precaler_i.317:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515b20e90>",
		def_var="['mmc_clk']",
		fillcolor=deepskyblue,
		label="boot_i.precaler_i.317:AS
mmc_clk = (mode_transfer)? sys_clk : prescaler[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_transfer', 'sys_clk', 'prescaler']"];
	"boot_i.precaler_i.Leaf_307:AL" -> "boot_i.precaler_i.317:AS";
	"boot_i.precaler_i.307:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe515b209d0>",
		clk_sens=False,
		fillcolor=gold,
		label="boot_i.precaler_i.307:AL",
		sens="['sys_clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'prescaler']"];
	"boot_i.precaler_i.Leaf_307:AL" -> "boot_i.precaler_i.307:AL";
	"boot_i.mmc_cmd_select_i.177:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515b30890>",
		def_var="['cmd_bits']",
		fillcolor=deepskyblue,
		label="boot_i.mmc_cmd_select_i.177:AS
cmd_bits = (bit[7:6] == 2'b00) & (bit[5:4] != 2'b11) & (cmd[3:2] != 2'b11);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bit', 'bit', 'cmd']"];
	"boot_i.mmc_cmd_select_i.280:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515b20110>",
		def_var="['cmd_active']",
		fillcolor=deepskyblue,
		label="boot_i.mmc_cmd_select_i.280:AS
cmd_active = cmd_bits;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cmd_bits']"];
	"boot_i.mmc_cmd_select_i.177:AS" -> "boot_i.mmc_cmd_select_i.280:AS";
	"boot_i.525:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156f2690>",
		fillcolor=lightcyan,
		label="boot_i.525:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.526:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156f2990>",
		fillcolor=turquoise,
		label="boot_i.526:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.525:CA" -> "boot_i.526:BL"	 [cond="[]",
		lineno=None];
	"boot_i.493:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5157085d0>",
		fillcolor=cadetblue,
		label="boot_i.493:BS
cmd_state_next = 4'b1001;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5157085d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.493:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.518:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f25d0>",
		fillcolor=cadetblue,
		label="boot_i.518:BS
cmd_state_next = 4'b1100;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f25d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.518:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.579:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515707b10>",
		def_var="['error']",
		fillcolor=deepskyblue,
		label="boot_i.579:AS
error = cmd_state == 4'b1110;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cmd_state']"];
	"boot_i.507:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe515708c10>",
		fillcolor=turquoise,
		label="boot_i.507:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.508:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515708e10>",
		fillcolor=springgreen,
		label="boot_i.508:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.507:BL" -> "boot_i.508:IF"	 [cond="[]",
		lineno=None];
	"boot_i.513:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2290>",
		fillcolor=cadetblue,
		label="boot_i.513:BS
cmd_state_next = 4'b1011;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2290>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.513:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.467:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156e8510>",
		fillcolor=turquoise,
		label="boot_i.467:BL
cmd_state_next = cmd_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156e8490>]",
		style=filled,
		typ=Block];
	"boot_i.466:AL" -> "boot_i.467:BL"	 [cond="[]",
		lineno=None];
	"boot_i.508:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708f10>",
		fillcolor=cadetblue,
		label="boot_i.508:BS
cmd_state_next = 4'b0111;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe515708f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.508:IF" -> "boot_i.508:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=508];
	"boot_i.542:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156f2c50>",
		fillcolor=turquoise,
		label="boot_i.542:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.542:BL" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.575:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515707650>",
		def_var="['mmc_cmd']",
		fillcolor=deepskyblue,
		label="boot_i.575:AS
mmc_cmd = (!dis & cmd_bits)? cmd_data_out : 1'bz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dis', 'cmd_bits', 'cmd_data_out']"];
	"boot_i.mmc_cmd_select_i.268:AS" -> "boot_i.575:AS";
	"boot_i.486:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515708090>",
		fillcolor=springgreen,
		label="boot_i.486:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.487:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5157081d0>",
		fillcolor=cadetblue,
		label="boot_i.487:BS
cmd_state_next = 4'b1110;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5157081d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.486:IF" -> "boot_i.487:BS"	 [cond="['cmd1_resp_start_bit', 'mmc_cmd']",
		label="((cmd1_resp_start_bit == 1'b1) & (mmc_cmd == 1'b1))",
		lineno=486];
	"boot_i.Leaf_453:AL"	 [def_var="['cmd_state']",
		label="boot_i.Leaf_453:AL"];
	"boot_i.Leaf_453:AL" -> "boot_i.579:AS";
	"boot_i.Leaf_453:AL" -> "boot_i.466:AL";
	"boot_i.552:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5156f2e90>",
		def_var="['mode_transfer']",
		fillcolor=deepskyblue,
		label="boot_i.552:AS
mode_transfer = cmd_state == 4'b1100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cmd_state']"];
	"boot_i.Leaf_453:AL" -> "boot_i.552:AS";
	"boot_i.Leaf_428:AL"	 [def_var="['counter_command_bits']",
		label="boot_i.Leaf_428:AL"];
	"boot_i.Leaf_428:AL" -> "boot_i.443:AS";
	"boot_i.428:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe5156c99d0>",
		clk_sens=False,
		fillcolor=gold,
		label="boot_i.428:AL",
		sens="['clk_mmc', 'int_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['counter_command_bits', 'int_reset']"];
	"boot_i.Leaf_428:AL" -> "boot_i.428:AL";
	"boot_i.446:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5156e7690>",
		def_var="['cmd1_resp_start_bit']",
		fillcolor=deepskyblue,
		label="boot_i.446:AS
cmd1_resp_start_bit = counter_command_bits[7:0] == 8'b00110101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['counter_command_bits']"];
	"boot_i.Leaf_428:AL" -> "boot_i.446:AS";
	"boot_i.448:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5156e7990>",
		def_var="['cmd1_resp_busy_bit']",
		fillcolor=deepskyblue,
		label="boot_i.448:AS
cmd1_resp_busy_bit = counter_command_bits[7:0] == 8'b00111101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['counter_command_bits']"];
	"boot_i.Leaf_428:AL" -> "boot_i.448:AS";
	"boot_i.576:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5157079d0>",
		def_var="['mmc_clk']",
		fillcolor=deepskyblue,
		label="boot_i.576:AS
mmc_clk = (!dis)? (int_reset)? 1'b0 : clk_mmc : 1'bz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dis', 'int_reset', 'clk_mmc']"];
	"boot_i.precaler_i.317:AS" -> "boot_i.576:AS";
	"boot_i.473:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156e8610>",
		fillcolor=turquoise,
		label="boot_i.473:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.474:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156e8850>",
		fillcolor=springgreen,
		label="boot_i.474:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.473:BL" -> "boot_i.474:IF"	 [cond="[]",
		lineno=None];
	"boot_i.429:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156c9c10>",
		fillcolor=springgreen,
		label="boot_i.429:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.428:AL" -> "boot_i.429:IF"	 [cond="[]",
		lineno=None];
	"boot_i.392:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515b19e50>",
		def_var="['config_request']",
		fillcolor=deepskyblue,
		label="boot_i.392:AS
config_request = !init & !done;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['init', 'done']"];
	"boot_i.407:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5156c9190>",
		def_var="['int_reset']",
		fillcolor=deepskyblue,
		label="boot_i.407:AS
int_reset = config_request;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['config_request']"];
	"boot_i.392:AS" -> "boot_i.407:AS";
	"boot_i.536:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156f2650>",
		fillcolor=turquoise,
		label="boot_i.536:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.536:BL" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.508:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.precaler_i.308:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515b20b10>",
		fillcolor=springgreen,
		label="boot_i.precaler_i.308:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.precaler_i.307:AL" -> "boot_i.precaler_i.308:IF"	 [cond="[]",
		lineno=None];
	"boot_i.506:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe515708cd0>",
		fillcolor=lightcyan,
		label="boot_i.506:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.506:CA" -> "boot_i.507:BL"	 [cond="[]",
		lineno=None];
	"boot_i.precaler_i.309:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe515b20b50>",
		fillcolor=firebrick,
		label="boot_i.precaler_i.309:NS
prescaler <= 4'b0000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe515b20b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"boot_i.precaler_i.309:NS" -> "boot_i.precaler_i.Leaf_307:AL"	 [cond="[]",
		lineno=None];
	"boot_i.mmc_cmd_select_i.183:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe515b64650>",
		def_var="['arg16_bit']",
		fillcolor=deepskyblue,
		label="boot_i.mmc_cmd_select_i.183:AS
arg16_bit = bit[7:0] == 8'b00010111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bit']"];
	"boot_i.mmc_cmd_select_i.183:AS" -> "boot_i.mmc_cmd_select_i.268:AS";
	"boot_i.474:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156e8950>",
		fillcolor=cadetblue,
		label="boot_i.474:BS
cmd_state_next = 4'b0000;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156e8950>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.474:IF" -> "boot_i.474:BS"	 [cond="['cmd_done', 'init']",
		label="(cmd_done & init)",
		lineno=474];
	"boot_i.precaler_i.311:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe515b20d50>",
		fillcolor=firebrick,
		label="boot_i.precaler_i.311:NS
prescaler <= prescaler + 4'b0001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe515b20d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"boot_i.precaler_i.311:NS" -> "boot_i.precaler_i.Leaf_307:AL"	 [cond="[]",
		lineno=None];
	"boot_i.479:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156e8bd0>",
		fillcolor=springgreen,
		label="boot_i.479:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.479:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156e8cd0>",
		fillcolor=cadetblue,
		label="boot_i.479:BS
cmd_state_next = 4'b0001;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156e8cd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.479:IF" -> "boot_i.479:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=479];
	"boot_i.516:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156f2390>",
		fillcolor=lightcyan,
		label="boot_i.516:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.517:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156f22d0>",
		fillcolor=turquoise,
		label="boot_i.517:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.516:CA" -> "boot_i.517:BL"	 [cond="[]",
		lineno=None];
	"boot_i.precaler_i.308:IF" -> "boot_i.precaler_i.309:NS"	 [cond="['rst']",
		label=rst,
		lineno=308];
	"boot_i.precaler_i.308:IF" -> "boot_i.precaler_i.311:NS"	 [cond="['rst']",
		label="!(rst)",
		lineno=308];
	"boot_i.492:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515708490>",
		fillcolor=springgreen,
		label="boot_i.492:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.492:IF" -> "boot_i.493:BS"	 [cond="['cmd1_resp_busy_bit', 'mmc_cmd']",
		label="((cmd1_resp_busy_bit == 1'b1) & (mmc_cmd == 1'b1))",
		lineno=492];
	"boot_i.482:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156e8d10>",
		fillcolor=lightcyan,
		label="boot_i.482:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.483:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe515708250>",
		fillcolor=turquoise,
		label="boot_i.483:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.482:CA" -> "boot_i.483:BL"	 [cond="[]",
		lineno=None];
	"boot_i.407:AS" -> "boot_i.428:AL";
	"boot_i.407:AS" -> "boot_i.576:AS";
	"boot_i.453:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fe5156e7bd0>",
		clk_sens=False,
		fillcolor=gold,
		label="boot_i.453:AL",
		sens="['clk_mmc', 'int_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cmd_state_next', 'int_reset']"];
	"boot_i.407:AS" -> "boot_i.453:AL";
	"boot_i.498:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe515708790>",
		fillcolor=springgreen,
		label="boot_i.498:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.498:IF" -> "boot_i.498:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=498];
	"boot_i.531:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2b90>",
		fillcolor=cadetblue,
		label="boot_i.531:BS
cmd_state_next = 4'b1110;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2b90>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.531:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.530:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156f2a90>",
		fillcolor=springgreen,
		label="boot_i.530:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.526:BL" -> "boot_i.530:IF"	 [cond="[]",
		lineno=None];
	"boot_i.527:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156f2810>",
		fillcolor=springgreen,
		label="boot_i.527:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.526:BL" -> "boot_i.527:IF"	 [cond="[]",
		lineno=None];
	"boot_i.479:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.575:AS" -> "boot_i.466:AL";
	"boot_i.472:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156e8650>",
		fillcolor=lightcyan,
		label="boot_i.472:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.472:CA" -> "boot_i.473:BL"	 [cond="[]",
		lineno=None];
	"boot_i.552:AS" -> "boot_i.precaler_i.317:AS";
	"boot_i.mmc_cmd_select_i.280:AS" -> "boot_i.575:AS";
	"boot_i.496:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe515708590>",
		fillcolor=lightcyan,
		label="boot_i.496:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.497:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5157080d0>",
		fillcolor=turquoise,
		label="boot_i.497:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.496:CA" -> "boot_i.497:BL"	 [cond="[]",
		lineno=None];
	"boot_i.518:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156f24d0>",
		fillcolor=springgreen,
		label="boot_i.518:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.518:IF" -> "boot_i.518:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=518];
	"boot_i.477:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156e8a50>",
		fillcolor=lightcyan,
		label="boot_i.477:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.478:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe5156e8a10>",
		fillcolor=turquoise,
		label="boot_i.478:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.477:CA" -> "boot_i.478:BL"	 [cond="[]",
		lineno=None];
	"boot_i.455:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156e7d10>",
		fillcolor=firebrick,
		label="boot_i.455:NS
cmd_state <= 4'b1111;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156e7d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"boot_i.455:NS" -> "boot_i.Leaf_453:AL"	 [cond="[]",
		lineno=None];
	"boot_i.446:AS" -> "boot_i.466:AL";
	"boot_i.470:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fe5156f2750>",
		fillcolor=linen,
		label="boot_i.470:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"boot_i.467:BL" -> "boot_i.470:CS"	 [cond="[]",
		lineno=None];
	"boot_i.541:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156f2cd0>",
		fillcolor=lightcyan,
		label="boot_i.541:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.541:CA" -> "boot_i.542:BL"	 [cond="[]",
		lineno=None];
	"boot_i.530:IF" -> "boot_i.531:BS"	 [cond="['init']",
		label="(!init)",
		lineno=530];
	"boot_i.528:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2910>",
		fillcolor=cadetblue,
		label="boot_i.528:BS
cmd_state_next = 4'b1101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5156f2910>]",
		style=filled,
		typ=BlockingSubstitution];
	"boot_i.527:IF" -> "boot_i.528:BS"	 [cond="['done']",
		label=done,
		lineno=527];
	"boot_i.mmc_cmd_select_i.203:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe51573fb90>",
		def_var="['crc_bit']",
		fillcolor=deepskyblue,
		label="boot_i.mmc_cmd_select_i.203:AS
crc_bit = (bit[5:0] == 6'b101000) & ((cmd == 4'b0000) | (cmd == 4'b0001) | (cmd == 4'b0111)) | (bit[\
5:0] == 6'b101001) & ((cmd == 4'b0010) | (cmd == 4'b0011) | (cmd == 4'b0111) | (cmd == 4'b1011)) | (bit[5:0] == 6'b101010) & ((cmd == \
4'b0001) | (cmd == 4'b0011) | (cmd == 4'b1011)) | (bit[5:0] == 6'b101011) & ((cmd == 4'b0000) | (cmd == 4'b0011) | (cmd == 4'b0111) | (\
cmd == 4'b1011)) | (bit[5:0] == 6'b101100) & ((cmd == 4'b0001) | (cmd == 4'b0010) | (cmd == 4'b0011) | (cmd == 4'b0111)) | (bit[\
5:0] == 6'b101101) & ((cmd == 4'b0000) | (cmd == 4'b0001) | (cmd == 4'b0010) | (cmd == 4'b0011) | (cmd == 4'b0111) | (cmd == 4'b1011)) | (\
bit[5:0] == 6'b101110) & ((cmd == 4'b0001) | (cmd == 4'b0011) | (cmd == 4'b1011));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bit', 'cmd', 'cmd', 'cmd', 'bit', 'cmd', 'cmd', 'cmd', 'cmd', 'bit', 'cmd', 'cmd', 'cmd', 'bit', 'cmd', 'cmd', 'cmd', 'cmd', '\
bit', 'cmd', 'cmd', 'cmd', 'cmd', 'bit', 'cmd', 'cmd', 'cmd', 'cmd', 'cmd', 'cmd', 'bit', 'cmd', 'cmd', 'cmd']"];
	"boot_i.mmc_cmd_select_i.203:AS" -> "boot_i.mmc_cmd_select_i.268:AS";
	"boot_i.454:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156e7cd0>",
		fillcolor=springgreen,
		label="boot_i.454:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.454:IF" -> "boot_i.455:NS"	 [cond="['int_reset']",
		label=int_reset,
		lineno=454];
	"boot_i.457:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156e7ed0>",
		fillcolor=firebrick,
		label="boot_i.457:NS
cmd_state <= cmd_state_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156e7ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"boot_i.454:IF" -> "boot_i.457:NS"	 [cond="['int_reset']",
		label="!(int_reset)",
		lineno=454];
	"boot_i.483:BL" -> "boot_i.486:IF"	 [cond="[]",
		lineno=None];
	"boot_i.483:BL" -> "boot_i.492:IF"	 [cond="[]",
		lineno=None];
	"boot_i.432:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156c9dd0>",
		fillcolor=firebrick,
		label="boot_i.432:NS
counter_command_bits <= counter_command_bits + 8'b00000001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156c9dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"boot_i.429:IF" -> "boot_i.432:NS"	 [cond="['int_reset']",
		label="!(int_reset)",
		lineno=429];
	"boot_i.430:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156c9b50>",
		fillcolor=firebrick,
		label="boot_i.430:NS
counter_command_bits <= 8'b00000000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5156c9b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"boot_i.429:IF" -> "boot_i.430:NS"	 [cond="['int_reset']",
		label=int_reset,
		lineno=429];
	"boot_i.501:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe515708990>",
		fillcolor=lightcyan,
		label="boot_i.501:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.501:CA" -> "boot_i.502:BL"	 [cond="[]",
		lineno=None];
	"boot_i.470:CS" -> "boot_i.525:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.470:CS" -> "boot_i.506:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.470:CS" -> "boot_i.516:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.470:CS" -> "boot_i.482:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.470:CS" -> "boot_i.472:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.470:CS" -> "boot_i.496:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.470:CS" -> "boot_i.477:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.470:CS" -> "boot_i.541:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.470:CS" -> "boot_i.501:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.511:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156f2050>",
		fillcolor=lightcyan,
		label="boot_i.511:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.470:CS" -> "boot_i.511:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.535:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fe5156f2b50>",
		fillcolor=lightcyan,
		label="boot_i.535:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"boot_i.470:CS" -> "boot_i.535:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=470];
	"boot_i.478:BL" -> "boot_i.479:IF"	 [cond="[]",
		lineno=None];
	"boot_i.432:NS" -> "boot_i.Leaf_428:AL"	 [cond="[]",
		lineno=None];
	"boot_i.mmc_cmd_select_i.250:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe51573ce50>",
		def_var="['CMD1_dat']",
		fillcolor=deepskyblue,
		label="boot_i.mmc_cmd_select_i.250:AS
CMD1_dat = (cmd == 4'b0001) & ((bit[5:0] == 6'b001000) | (bit[5:0] == 6'b010000) | (bit[5:0] == 6'\
b010001) | (bit[5:0] == 6'b010010) | (bit[5:0] == 6'b010011) | (bit[5:0] == 6'b010100) | (bit[5:0] == 6'b010101) | (bit[5:0] == \
6'b010110) | (bit[5:0] == 6'b010111) | (bit[5:0] == 6'b011000));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cmd', 'bit', 'bit', 'bit', 'bit', 'bit', 'bit', 'bit', 'bit', 'bit', 'bit']"];
	"boot_i.mmc_cmd_select_i.250:AS" -> "boot_i.mmc_cmd_select_i.268:AS";
	"boot_i.497:BL" -> "boot_i.498:IF"	 [cond="[]",
		lineno=None];
	"boot_i.517:BL" -> "boot_i.518:IF"	 [cond="[]",
		lineno=None];
	"boot_i.512:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fe515708f50>",
		fillcolor=turquoise,
		label="boot_i.512:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"boot_i.511:CA" -> "boot_i.512:BL"	 [cond="[]",
		lineno=None];
	"boot_i.528:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.mmc_cmd_select_i.187:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fe5159e73d0>",
		def_var="['stop_bit']",
		fillcolor=deepskyblue,
		label="boot_i.mmc_cmd_select_i.187:AS
stop_bit = bit[7:0] == 8'b00101111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bit']"];
	"boot_i.mmc_cmd_select_i.187:AS" -> "boot_i.mmc_cmd_select_i.268:AS";
	"boot_i.448:AS" -> "boot_i.466:AL";
	"boot_i.513:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5156f2190>",
		fillcolor=springgreen,
		label="boot_i.513:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"boot_i.512:BL" -> "boot_i.513:IF"	 [cond="[]",
		lineno=None];
	"boot_i.487:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.503:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.513:IF" -> "boot_i.513:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=513];
	"boot_i.535:CA" -> "boot_i.536:BL"	 [cond="[]",
		lineno=None];
	"boot_i.430:NS" -> "boot_i.Leaf_428:AL"	 [cond="[]",
		lineno=None];
	"boot_i.453:AL" -> "boot_i.454:IF"	 [cond="[]",
		lineno=None];
	"boot_i.Leaf_466:AL" -> "boot_i.453:AL";
	"boot_i.474:BS" -> "boot_i.Leaf_466:AL"	 [cond="[]",
		lineno=None];
	"boot_i.457:NS" -> "boot_i.Leaf_453:AL"	 [cond="[]",
		lineno=None];
}
