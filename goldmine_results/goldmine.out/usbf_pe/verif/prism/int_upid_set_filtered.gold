property a16;
@(posedge clk) (CTRL_ep == 1 & csr[29] == 0 & csr[7] == 0 & csr[30] == 1 & csr[28] == 0 & pid_IN_r == 0) |=> (int_upid_set == 1);
endproperty
assert_a16: assert property(a16);

property a5;
@(posedge clk) (csr[4] == 1 & OUT_ep == 0) |=> (int_upid_set == 0);
endproperty
assert_a5: assert property(a5);

property a4;
@(posedge clk) (csr[27] == 1 & CTRL_ep == 1) |=> (int_upid_set == 0);
endproperty
assert_a4: assert property(a4);

property a1;
@(posedge clk) (match_r == 0) |=> (int_upid_set == 0);
endproperty
assert_a1: assert property(a1);

property a15;
@(posedge clk) (CTRL_ep == 1 & pid_IN_r == 0 & pid_SETUP_r == 0 & pid_SOF == 0 & csr[7] == 1 & pid_PING_r == 0 & pid_OUT_r == 0) |=> (int_upid_set == 1);
endproperty
assert_a15: assert property(a15);

property a14;
@(posedge clk) (CTRL_ep == 1 & pid_IN_r == 0 & pid_SETUP_r == 0 & pid_SOF == 0 & pid_OUT_r == 0 & pid_PING_r == 0 & csr[5] == 1) |=> (int_upid_set == 1);
endproperty
assert_a14: assert property(a14);

property a13;
@(posedge clk) (CTRL_ep == 1 & pid_IN_r == 0 & pid_SETUP_r == 0 & pid_SOF == 0 & pid_OUT_r == 0 & pid_PING_r == 0 & csr[0] == 0) |=> (int_upid_set == 1);
endproperty
assert_a13: assert property(a13);

property a12;
@(posedge clk) (OUT_ep == 1 & pid_OUT_r == 0 & pid_PING_r == 0 & match_r == 1 & pid_SOF == 0) |=> (int_upid_set == 1);
endproperty
assert_a12: assert property(a12);

property a11;
@(posedge clk) (IN_ep == 1 & pid_IN_r == 0 & match_r == 1 & pid_SOF == 0) |=> (int_upid_set == 1);
endproperty
assert_a11: assert property(a11);

property a10;
@(posedge clk) (CTRL_ep == 1 & pid_PING_r == 1) |=> (int_upid_set == 0);
endproperty
assert_a10: assert property(a10);

property a3;
@(posedge clk) (pid_IN_r == 1 & OUT_ep == 0) |=> (int_upid_set == 0);
endproperty
assert_a3: assert property(a3);

property a2;
@(posedge clk) (pid_IN_r == 1 & CTRL_ep == 1) |=> (int_upid_set == 0);
endproperty
assert_a2: assert property(a2);

property a7;
@(posedge clk) (CTRL_ep == 1 & pid_SETUP_r == 1) |=> (int_upid_set == 0);
endproperty
assert_a7: assert property(a7);

property a6;
@(posedge clk) (OUT_ep == 1 & pid_PING_r == 1) |=> (int_upid_set == 0);
endproperty
assert_a6: assert property(a6);

property a9;
@(posedge clk) (pid_OUT_r == 1 & OUT_ep == 1) |=> (int_upid_set == 0);
endproperty
assert_a9: assert property(a9);

property a8;
@(posedge clk) (pid_OUT_r == 1 & CTRL_ep == 1) |=> (int_upid_set == 0);
endproperty
assert_a8: assert property(a8);

property a0;
@(posedge clk) (pid_SOF == 1) |=> (int_upid_set == 0);
endproperty
assert_a0: assert property(a0);

