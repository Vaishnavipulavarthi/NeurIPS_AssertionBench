strict digraph "compose( ,  )" {
	node [label="\N"];
	"1094:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca5b6d0>",
		fillcolor=springgreen,
		label="1094:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1096:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca5b950>",
		fillcolor=springgreen,
		label="1096:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1094:IF" -> "1096:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1094];
	"1094:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca5b690>",
		fillcolor=firebrick,
		label="1094:NS
state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca5b690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1094:IF" -> "1094:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1094];
	"1291:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4bebd0>",
		fillcolor=aquamarine,
		label="1291:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"Leaf_1099:AL"	 [def_var="['int_seqerr_set_d', 'buf0_rl_d', 'rx_dma_en', 'int_set_en', 'send_zero_length', 'uc_stat_set_d', 'rx_ack_to_clr_d', 'send_token_\
d', 'token_pid_sel_d', 'tx_dma_en', 'buf_set_d', 'next_state']",
		label="Leaf_1099:AL"];
	"1291:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1293:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4c3050>",
		fillcolor=aquamarine,
		label="1293:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1293:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"749:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1df8d0>",
		fillcolor=lightcyan,
		label="749:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"750:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1dfcd0>",
		fillcolor=firebrick,
		label="750:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1dfcd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"749:CA" -> "750:NS"	 [cond="[]",
		lineno=None];
	"975:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf6d450>",
		def_var="['next_bsel']",
		fillcolor=deepskyblue,
		label="975:AS
next_bsel = (dma_en)? 2'h0 : 
(buffer_done)? uc_bsel + 2'h1 : uc_bsel;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dma_en', 'buffer_done', 'uc_bsel', 'uc_bsel']"];
	"984:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf5d490>",
		clk_sens=True,
		fillcolor=gold,
		label="984:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['new_adr', 'buf0_adr', 'next_dpid', 'out_to_small_r', 'next_bsel', 'buf_set_d']"];
	"975:AS" -> "984:AL";
	"864:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59cd0>",
		fillcolor=firebrick,
		label="864:NS
setup_token <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_860:AL"	 [def_var="['setup_token']",
		label="Leaf_860:AL"];
	"864:NS" -> "Leaf_860:AL"	 [cond="[]",
		lineno=None];
	"720:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fae3d1d43d0>",
		fillcolor=linen,
		label="720:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"722:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d44d0>",
		fillcolor=lightcyan,
		label="722:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"720:CS" -> "722:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=720];
	"721:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d4290>",
		fillcolor=lightcyan,
		label="721:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"720:CS" -> "721:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=720];
	"Leaf_935:AL"	 [def_var="['adr_r']",
		label="Leaf_935:AL"];
	"941:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf47fd0>",
		def_var="['new_adr']",
		fillcolor=deepskyblue,
		label="941:AS
new_adr = adr_r[SSRAM_HADR+2:0] + ((out_op && dma_en)? { { SSRAM_HADR + 2 - 10{ 1'b0 } }, max_pl_sz[10:0] } : 
(in_op)? { { \
SSRAM_HADR + 2 - 13{ 1'b0 } }, size_next_r[13:0] } : { { SSRAM_HADR + 2 - 10{ 1'b0 } }, sizu_c[10:0] });",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['adr_r', 'out_op', 'dma_en', 'max_pl_sz', 'in_op', 'size_next_r', 'sizu_c']"];
	"Leaf_935:AL" -> "941:AS";
	"1062:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca59b10>",
		fillcolor=firebrick,
		label="1062:NS
pid_IN_r <= pid_IN;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca59b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1061:AL"	 [def_var="['pid_IN_r']",
		label="Leaf_1061:AL"];
	"1062:NS" -> "Leaf_1061:AL"	 [cond="[]",
		lineno=None];
	"965:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5ee90>",
		fillcolor=firebrick,
		label="965:NS
to_small <= !sml_ok & (sizu_c < max_pl_sz);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5ee90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_964:AL"	 [def_var="['to_small']",
		label="Leaf_964:AL"];
	"965:NS" -> "Leaf_964:AL"	 [cond="[]",
		lineno=None];
	"999:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf506d0>",
		clk_sens=True,
		fillcolor=gold,
		label="999:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['uc_stat_set_d']"];
	"1000:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf50910>",
		fillcolor=firebrick,
		label="1000:NS
uc_dpd_set <= uc_stat_set_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf50910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"999:AL" -> "1000:NS"	 [cond="[]",
		lineno=None];
	"758:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d88d0>",
		fillcolor=lightcyan,
		label="758:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"758:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d89d0>",
		fillcolor=firebrick,
		label="758:NS
next_dpid <= 2'b10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d89d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"758:CA" -> "758:NS"	 [cond="[]",
		lineno=None];
	"1157:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca6e110>",
		fillcolor=springgreen,
		label="1157:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1167:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca6e750>",
		fillcolor=springgreen,
		label="1167:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1157:IF" -> "1167:IF"	 [cond="['buf0_na', 'buf1_na', 'no_buf0_dma', 'CTRL_ep', 'pid_IN', 'buf1_na', 'CTRL_ep', 'pid_OUT', 'buf0_na']",
		label="!((buf0_na && buf1_na || no_buf0_dma || CTRL_ep && pid_IN && buf1_na || CTRL_ep && pid_OUT && buf0_na))",
		lineno=1157];
	"1161:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca58f90>",
		fillcolor=turquoise,
		label="1161:BL
token_pid_sel_d = NACK;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca58e50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca58fd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca6e150>]",
		style=filled,
		typ=Block];
	"1157:IF" -> "1161:BL"	 [cond="['buf0_na', 'buf1_na', 'no_buf0_dma', 'CTRL_ep', 'pid_IN', 'buf1_na', 'CTRL_ep', 'pid_OUT', 'buf0_na']",
		label="(buf0_na && buf1_na || no_buf0_dma || CTRL_ep && pid_IN && buf1_na || CTRL_ep && pid_OUT && buf0_na)",
		lineno=1157];
	"708:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ceeb710>",
		fillcolor=lightcyan,
		label="708:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"708:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceeb810>",
		fillcolor=firebrick,
		label="708:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceeb810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"708:CA" -> "708:NS"	 [cond="[]",
		lineno=None];
	"699:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3cec5950>",
		fillcolor=lightcyan,
		label="699:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"699:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec5a50>",
		fillcolor=firebrick,
		label="699:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec5a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"699:CA" -> "699:NS"	 [cond="[]",
		lineno=None];
	"889:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf5f0d0>",
		def_var="['size_next']",
		fillcolor=deepskyblue,
		label="889:AS
size_next = (buf_smaller)? buf_size : max_pl_sz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf_smaller', 'buf_size', 'max_pl_sz']"];
	"938:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf42d10>",
		clk_sens=True,
		fillcolor=gold,
		label="938:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['size_next']"];
	"889:AS" -> "938:AL";
	"927:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf42290>",
		clk_sens=True,
		fillcolor=gold,
		label="927:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['dma_en', 'max_pl_sz', 'size_next', 'in_op', 'out_op', 'sizu_c']"];
	"889:AS" -> "927:AL";
	"890:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf5f290>",
		def_var="['size']",
		fillcolor=deepskyblue,
		label="890:AS
size = size_next;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['size_next']"];
	"889:AS" -> "890:AS";
	"939:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf42f10>",
		fillcolor=firebrick,
		label="939:NS
size_next_r <= size_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf42f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"938:AL" -> "939:NS"	 [cond="[]",
		lineno=None];
	"1314:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c9610>",
		fillcolor=cadetblue,
		label="1314:BS
token_pid_sel_d = NYET;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c9610>]",
		style=filled,
		typ=BlockingSubstitution];
	"1314:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1082:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca5b2d0>",
		fillcolor=firebrick,
		label="1082:NS
int_seqerr_set <= int_seqerr_set_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca5b2d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1081:AL"	 [def_var="['int_seqerr_set']",
		label="Leaf_1081:AL"];
	"1082:NS" -> "Leaf_1081:AL"	 [cond="[]",
		lineno=None];
	"743:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1df3d0>",
		fillcolor=lightcyan,
		label="743:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"744:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1df7d0>",
		fillcolor=firebrick,
		label="744:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1df7d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"743:CA" -> "744:NS"	 [cond="[]",
		lineno=None];
	"1226:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b4450>",
		fillcolor=springgreen,
		label="1226:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1226:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4b41d0>",
		fillcolor=aquamarine,
		label="1226:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1226:IF" -> "1226:SS"	 [cond="['token_valid']",
		label="(token_valid === 1'bx)",
		lineno=1226];
	"853:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf59650>",
		fillcolor=springgreen,
		label="853:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"855:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf59790>",
		fillcolor=springgreen,
		label="855:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"853:IF" -> "855:IF"	 [cond="['pid_OUT', 'pid_SETUP']",
		label="!((pid_OUT || pid_SETUP))",
		lineno=853];
	"853:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59610>",
		fillcolor=firebrick,
		label="853:NS
out_token <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"853:IF" -> "853:NS"	 [cond="['pid_OUT', 'pid_SETUP']",
		label="(pid_OUT || pid_SETUP)",
		lineno=853];
	"866:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59fd0>",
		fillcolor=firebrick,
		label="866:NS
setup_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"866:NS" -> "Leaf_860:AL"	 [cond="[]",
		lineno=None];
	"726:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3d1d4690>",
		fillcolor=turquoise,
		label="726:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"727:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fae3d1d4a50>",
		fillcolor=linen,
		label="727:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"726:BL" -> "727:CS"	 [cond="[]",
		lineno=None];
	"793:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d9690>",
		fillcolor=lightcyan,
		label="793:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"793:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9790>",
		fillcolor=firebrick,
		label="793:NS
this_dpid <= 2'b10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"793:CA" -> "793:NS"	 [cond="[]",
		lineno=None];
	"Leaf_1044:AL"	 [def_var="['tx_data_to']",
		label="Leaf_1044:AL"];
	"1099:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca38b50>",
		clk_sens=False,
		fillcolor=gold,
		label="1099:AL",
		sens="['state', 'ep_stall', 'buf0_na', 'buf1_na', 'pid_seq_err', 'idma_done', 'token_valid', 'pid_ACK', 'rx_data_done', 'tx_data_to', '\
crc16_err', 'ep_disabled', 'no_bufs', 'mode_hs', 'dma_en', 'rx_ack_to', 'pid_PING', 'txfr_iso', 'to_small', 'to_large', 'CTRL_ep', '\
pid_IN', 'pid_OUT', 'IN_ep', 'OUT_ep', 'pid_SETUP', 'pid_SOF', 'match_r', 'abort', 'buffer_done', 'no_buf0_dma', 'max_pl_sz']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SOF', 'dma_en', 'tx_data_to', 'pid_OUT', 'pid_PING', 'abort', 'pid_IN', 'pid_seq_err', 'no_bufs', 'rx_ack_to', 'ep_disabled', '\
crc16_err', 'state', 'ep_stall', 'CTRL_ep', 'to_small', 'rx_data_done', 'idma_done', 'to_large', 'mode_hs', 'buf0_na', 'rst', 'OUT_\
ep', 'buf1_na', 'pid_ACK', 'no_buf0_dma', 'max_pl_sz', 'token_valid', 'buffer_done', 'txfr_iso', 'pid_SETUP', 'IN_ep', 'match_r']"];
	"Leaf_1044:AL" -> "1099:AL";
	"1077:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3ca55e10>",
		def_var="['int_to_set']",
		fillcolor=deepskyblue,
		label="1077:AS
int_to_set = (state == IN2) & rx_ack_to | (state == OUT) & tx_data_to;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['state', 'rx_ack_to', 'state', 'tx_data_to']"];
	"Leaf_1044:AL" -> "1077:AS";
	"702:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec5ed0>",
		fillcolor=firebrick,
		label="702:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec5ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_697:AL"	 [def_var="['next_dpid']",
		label="Leaf_697:AL"];
	"702:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"844:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59150>",
		fillcolor=firebrick,
		label="844:NS
in_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_838:AL"	 [def_var="['in_token']",
		label="Leaf_838:AL"];
	"844:NS" -> "Leaf_838:AL"	 [cond="[]",
		lineno=None];
	"1315:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c97d0>",
		fillcolor=cadetblue,
		label="1315:BS
token_pid_sel_d = ACK;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c97d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1315:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"642:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d2fea90>",
		def_var="['txfr_bulk']",
		fillcolor=deepskyblue,
		label="642:AS
txfr_bulk = csr[25:24] == 2'b10;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"Leaf_1092:AL"	 [def_var="['state']",
		label="Leaf_1092:AL"];
	"Leaf_1092:AL" -> "1099:AL";
	"Leaf_1092:AL" -> "1077:AS";
	"1006:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf50bd0>",
		clk_sens=True,
		fillcolor=gold,
		label="1006:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buffer_overflow', 'state', 'to_large', 'match', 'match_r']"];
	"Leaf_1092:AL" -> "1006:AL";
	"778:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ebe90>",
		fillcolor=firebrick,
		label="778:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ebe90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_774:AL"	 [def_var="['this_dpid']",
		label="Leaf_774:AL"];
	"778:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"1131:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca435d0>",
		fillcolor=aquamarine,
		label="1131:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1131:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1240:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e4b4990>",
		fillcolor=lightcyan,
		label="1240:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1241:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4b9ad0>",
		fillcolor=turquoise,
		label="1241:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1240:CA" -> "1241:BL"	 [cond="[]",
		lineno=None];
	"Leaf_878:AL"	 [def_var="['adr']",
		label="Leaf_878:AL"];
	"935:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf42a90>",
		clk_sens=True,
		fillcolor=gold,
		label="935:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['adr']"];
	"Leaf_878:AL" -> "935:AL";
	"1127:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca43090>",
		fillcolor=springgreen,
		label="1127:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1128:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca4df10>",
		fillcolor=turquoise,
		label="1128:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1127:IF" -> "1128:BL"	 [cond="['rst', 'match_r', 'ep_disabled', 'pid_SOF']",
		label="(rst && match_r && !ep_disabled && !pid_SOF)",
		lineno=1127];
	"712:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fae3ceebd10>",
		fillcolor=linen,
		label="712:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"713:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ceebbd0>",
		fillcolor=lightcyan,
		label="713:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"712:CS" -> "713:CA"	 [cond="['pid_MDATA', 'pid_DATA1']",
		label="{ pid_MDATA, pid_DATA1 }",
		lineno=712];
	"714:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ceebe10>",
		fillcolor=lightcyan,
		label="714:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"712:CS" -> "714:CA"	 [cond="['pid_MDATA', 'pid_DATA1']",
		label="{ pid_MDATA, pid_DATA1 }",
		lineno=712];
	"1168:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca6e610>",
		fillcolor=turquoise,
		label="1168:BL
token_pid_sel_d = ACK;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca6e4d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca6e650>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca6e790>]",
		style=filled,
		typ=Block];
	"1167:IF" -> "1168:BL"	 [cond="['pid_PING', 'mode_hs']",
		label="(pid_PING && mode_hs)",
		lineno=1167];
	"1174:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca6eed0>",
		fillcolor=springgreen,
		label="1174:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1167:IF" -> "1174:IF"	 [cond="['pid_PING', 'mode_hs']",
		label="!((pid_PING && mode_hs))",
		lineno=1167];
	"789:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d90d0>",
		fillcolor=firebrick,
		label="789:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d90d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"789:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"908:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf411d0>",
		def_var="['no_buf0_dma']",
		fillcolor=deepskyblue,
		label="908:AS
no_buf0_dma = dma_en & (IN_ep & !dma_in_buf_sz1 | OUT_ep & !dma_out_buf_avail);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dma_en', 'IN_ep', 'dma_in_buf_sz1', 'OUT_ep', 'dma_out_buf_avail']"];
	"917:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf41850>",
		clk_sens=True,
		fillcolor=gold,
		label="917:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['no_buf0_dma', 'dma_en', 'buf_sel', 'buf0_st_max', 'buf0_na', 'buffer_full']"];
	"908:AS" -> "917:AL";
	"908:AS" -> "1099:AL";
	"713:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceebcd0>",
		fillcolor=firebrick,
		label="713:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceebcd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"713:CA" -> "713:NS"	 [cond="[]",
		lineno=None];
	"661:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cec26d0>",
		def_var="['buf1_sz']",
		fillcolor=deepskyblue,
		label="661:AS
buf1_sz = buf1[30:17];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf1']"];
	"882:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf5cc10>",
		def_var="['buf_size']",
		fillcolor=deepskyblue,
		label="882:AS
buf_size = (buf_sel)? buf1_sz : buf0_sz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf_sel', 'buf1_sz', 'buf0_sz']"];
	"661:AS" -> "882:AS";
	"914:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf414d0>",
		clk_sens=True,
		fillcolor=gold,
		label="914:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['max_pl_sz', 'buf1_sz']"];
	"661:AS" -> "914:AL";
	"1259:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4b9e50>",
		fillcolor=turquoise,
		label="1259:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1260:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4be210>",
		fillcolor=springgreen,
		label="1260:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1259:BL" -> "1260:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1067:AL"	 [def_var="['pid_SETUP_r']",
		label="Leaf_1067:AL"];
	"1070:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca550d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1070:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SOF', 'CTRL_ep', 'pid_OUT_r', 'pid_IN_r', 'pid_PING_r', 'pid_SETUP_r', 'OUT_ep', 'IN_ep', 'match_r']"];
	"Leaf_1067:AL" -> "1070:AL";
	"706:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ceeb4d0>",
		fillcolor=lightcyan,
		label="706:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"706:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceeb5d0>",
		fillcolor=firebrick,
		label="706:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceeb5d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"706:CA" -> "706:NS"	 [cond="[]",
		lineno=None];
	"879:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5c9d0>",
		fillcolor=firebrick,
		label="879:NS
adr <= (buf_sel)? buf1_adr : buf0_adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5c9d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"879:NS" -> "Leaf_878:AL"	 [cond="[]",
		lineno=None];
	"1269:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e4b9c90>",
		fillcolor=lightcyan,
		label="1269:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1270:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4b9d50>",
		fillcolor=turquoise,
		label="1270:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1269:CA" -> "1270:BL"	 [cond="[]",
		lineno=None];
	"1047:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3ca6ad10>",
		def_var="['tx_data_to_val']",
		fillcolor=deepskyblue,
		label="1047:AS
tx_data_to_val = (mode_hs)? 8'd22 : 8'd36;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_hs']"];
	"1044:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca6a4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1044:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['tx_data_to_val', 'tx_data_to_cnt']"];
	"1047:AS" -> "1044:AL";
	"1024:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca4a890>",
		fillcolor=firebrick,
		label="1024:NS
rx_ack_to_cnt <= 8'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca4a890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1023:AL"	 [def_var="['rx_ack_to_cnt']",
		label="Leaf_1023:AL"];
	"1024:NS" -> "Leaf_1023:AL"	 [cond="[]",
		lineno=None];
	"1248:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4b4ed0>",
		fillcolor=aquamarine,
		label="1248:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1248:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1097:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca5ba90>",
		fillcolor=firebrick,
		label="1097:NS
state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca5ba90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1096:IF" -> "1097:NS"	 [cond="['match']",
		label="!(match)",
		lineno=1096];
	"1096:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca5b910>",
		fillcolor=firebrick,
		label="1096:NS
state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca5b910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1096:IF" -> "1096:NS"	 [cond="['match']",
		label=match,
		lineno=1096];
	"1130:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca43390>",
		fillcolor=aquamarine,
		label="1130:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1130:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"722:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d45d0>",
		fillcolor=firebrick,
		label="722:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d45d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"722:CA" -> "722:NS"	 [cond="[]",
		lineno=None];
	"638:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d2fe310>",
		def_var="['OUT_ep']",
		fillcolor=deepskyblue,
		label="638:AS
OUT_ep = csr[27:26] == 2'b10;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"638:AS" -> "908:AS";
	"638:AS" -> "1099:AL";
	"638:AS" -> "1070:AL";
	"872:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf5c2d0>",
		def_var="['out_op']",
		fillcolor=deepskyblue,
		label="872:AS
out_op = OUT_ep | CTRL_ep & out_token;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['OUT_ep', 'CTRL_ep', 'out_token']"];
	"638:AS" -> "872:AS";
	"736:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1df310>",
		fillcolor=firebrick,
		label="736:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1df310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"736:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1206:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca3a750>",
		fillcolor=springgreen,
		label="1206:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1206:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca3a590>",
		fillcolor=aquamarine,
		label="1206:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1206:IF" -> "1206:SS"	 [cond="['idma_done']",
		label="(idma_done === 1'bx)",
		lineno=1206];
	"1345:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4ce210>",
		fillcolor=turquoise,
		label="1345:BL
buf0_rl_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4ce390>]",
		style=filled,
		typ=Block];
	"1345:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"987:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf5dd90>",
		fillcolor=springgreen,
		label="987:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"988:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5ded0>",
		fillcolor=firebrick,
		label="988:NS
idin[3:0] <= { next_dpid, next_bsel };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5ded0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"987:IF" -> "988:NS"	 [cond="['out_to_small_r']",
		label="!(out_to_small_r)",
		lineno=987];
	"987:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5db90>",
		fillcolor=firebrick,
		label="987:NS
idin[3:0] <= buf0_adr[3:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5db90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"987:IF" -> "987:NS"	 [cond="['out_to_small_r']",
		label=out_to_small_r,
		lineno=987];
	"771:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1eb490>",
		fillcolor=lightcyan,
		label="771:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"771:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3d1eb590>",
		fillcolor=cadetblue,
		label="771:BS
allow_pid = 2'b11;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3d1eb590>]",
		style=filled,
		typ=BlockingSubstitution];
	"771:CA" -> "771:BS"	 [cond="[]",
		lineno=None];
	"1338:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4c9d90>",
		fillcolor=aquamarine,
		label="1338:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1338:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"Leaf_667:AL"	 [def_var="['buf1_na']",
		label="Leaf_667:AL"];
	"Leaf_667:AL" -> "1099:AL";
	"875:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf5c450>",
		def_var="['buf_sel']",
		fillcolor=deepskyblue,
		label="875:AS
buf_sel = (dma_en)? 1'b0 : 
(CTRL_ep)? in_token : (uc_bsel[0] | buf0_na) & !buf1_na;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dma_en', 'CTRL_ep', 'in_token', 'uc_bsel', 'buf0_na', 'buf1_na']"];
	"Leaf_667:AL" -> "875:AS";
	"921:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf41bd0>",
		clk_sens=True,
		fillcolor=gold,
		label="921:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf1_st_max', 'buf1_na', 'buf_sel', 'buffer_full']"];
	"Leaf_667:AL" -> "921:AL";
	"1252:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4b9790>",
		fillcolor=aquamarine,
		label="1252:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1252:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"Leaf_697:AL" -> "984:AL";
	"733:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3d1d4d10>",
		fillcolor=turquoise,
		label="733:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"734:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fae3d1df110>",
		fillcolor=linen,
		label="734:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"733:BL" -> "734:CS"	 [cond="[]",
		lineno=None];
	"967:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf5eed0>",
		clk_sens=True,
		fillcolor=gold,
		label="967:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['lrg_ok', 'max_pl_sz', 'sizu_c']"];
	"968:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf6d290>",
		fillcolor=firebrick,
		label="968:NS
to_large <= !lrg_ok & (sizu_c > max_pl_sz);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf6d290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"967:AL" -> "968:NS"	 [cond="[]",
		lineno=None];
	"980:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf6ddd0>",
		clk_sens=True,
		fillcolor=gold,
		label="980:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['new_adr', 'out_to_small_r', 'buf0_adr']"];
	"981:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5d0d0>",
		fillcolor=firebrick,
		label="981:NS
idin[SSRAM_HADR+2:4] <= (out_to_small_r)? buf0_adr[SSRAM_HADR+2:4] : new_adr[SSRAM_HADR+2:4];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5d0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"980:AL" -> "981:NS"	 [cond="[]",
		lineno=None];
	"Leaf_980:AL"	 [def_var="['idin']",
		label="Leaf_980:AL"];
	"981:NS" -> "Leaf_980:AL"	 [cond="[]",
		lineno=None];
	"1226:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"770:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3d1eb390>",
		fillcolor=cadetblue,
		label="770:BS
allow_pid = 2'b10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3d1eb390>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_766:AL"	 [def_var="['allow_pid']",
		label="Leaf_766:AL"];
	"770:BS" -> "Leaf_766:AL"	 [cond="[]",
		lineno=None];
	"1298:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4c3810>",
		fillcolor=springgreen,
		label="1298:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1298:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c37d0>",
		fillcolor=cadetblue,
		label="1298:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c37d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1298:IF" -> "1298:BS"	 [cond="['abort']",
		label=abort,
		lineno=1298];
	"1300:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4c3c50>",
		fillcolor=springgreen,
		label="1300:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1298:IF" -> "1300:IF"	 [cond="['abort']",
		label="!(abort)",
		lineno=1298];
	"918:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf41dd0>",
		fillcolor=firebrick,
		label="918:NS
no_bufs0 <= buf0_na | no_buf0_dma | ((buf_sel)? buf0_st_max : buffer_full & !dma_en);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf41dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_917:AL"	 [def_var="['no_bufs0']",
		label="Leaf_917:AL"];
	"918:NS" -> "Leaf_917:AL"	 [cond="[]",
		lineno=None];
	"1079:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3ca55fd0>",
		def_var="['int_crc16_set']",
		fillcolor=deepskyblue,
		label="1079:AS
int_crc16_set = rx_data_done & crc16_err;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_data_done', 'crc16_err']"];
	"Leaf_1002:AL"	 [def_var="['buf0_rl']",
		label="Leaf_1002:AL"];
	"687:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cecee90>",
		clk_sens=True,
		fillcolor=gold,
		label="687:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_pid_sel_d']"];
	"688:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec5150>",
		fillcolor=firebrick,
		label="688:NS
token_pid_sel <= token_pid_sel_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec5150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"687:AL" -> "688:NS"	 [cond="[]",
		lineno=None];
	"1250:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b95d0>",
		fillcolor=springgreen,
		label="1250:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1250:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4b9410>",
		fillcolor=aquamarine,
		label="1250:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1250:IF" -> "1250:SS"	 [cond="['rx_data_done']",
		label="(rx_data_done === 1'bx)",
		lineno=1250];
	"1056:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3ca59550>",
		def_var="['int_buf0_set']",
		fillcolor=deepskyblue,
		label="1056:AS
int_buf0_set = buf_sel & buffer_done & int_set_en & !buf0_not_aloc;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf_sel', 'buffer_done', 'int_set_en', 'buf0_not_aloc']"];
	"840:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf63b90>",
		fillcolor=firebrick,
		label="840:NS
in_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf63b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"840:NS" -> "Leaf_838:AL"	 [cond="[]",
		lineno=None];
	"1028:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca4add0>",
		fillcolor=firebrick,
		label="1028:NS
rx_ack_to <= rx_ack_to_cnt == rx_ack_to_val;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca4add0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1027:AL"	 [def_var="['rx_ack_to']",
		label="Leaf_1027:AL"];
	"1028:NS" -> "Leaf_1027:AL"	 [cond="[]",
		lineno=None];
	"Leaf_838:AL" -> "875:AS";
	"869:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf59e50>",
		def_var="['in_op']",
		fillcolor=deepskyblue,
		label="869:AS
in_op = IN_ep | CTRL_ep & in_token;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['IN_ep', 'CTRL_ep', 'in_token']"];
	"Leaf_838:AL" -> "869:AS";
	"811:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3cf69dd0>",
		fillcolor=lightcyan,
		label="811:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"811:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf69ed0>",
		fillcolor=firebrick,
		label="811:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf69ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"811:CA" -> "811:NS"	 [cond="[]",
		lineno=None];
	"851:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59310>",
		fillcolor=firebrick,
		label="851:NS
out_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_849:AL"	 [def_var="['out_token']",
		label="Leaf_849:AL"];
	"851:NS" -> "Leaf_849:AL"	 [cond="[]",
		lineno=None];
	"1138:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca4d410>",
		fillcolor=aquamarine,
		label="1138:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1138:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"Leaf_895:AL"	 [def_var="['buffer_full']",
		label="Leaf_895:AL"];
	"Leaf_895:AL" -> "917:AL";
	"904:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf5f850>",
		clk_sens=True,
		fillcolor=gold,
		label="904:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['in_op', 'buffer_empty', 'buffer_full']"];
	"Leaf_895:AL" -> "904:AL";
	"Leaf_895:AL" -> "921:AL";
	"788:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1eee50>",
		fillcolor=firebrick,
		label="788:NS
this_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1eee50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"788:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"1225:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4b4050>",
		fillcolor=aquamarine,
		label="1225:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1225:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1130:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca43610>",
		fillcolor=springgreen,
		label="1130:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1130:IF" -> "1130:SS"	 [cond="['ep_disabled']",
		label="(ep_disabled === 1'bx)",
		lineno=1130];
	"1131:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca43810>",
		fillcolor=springgreen,
		label="1131:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1131:IF" -> "1131:SS"	 [cond="['pid_SOF']",
		label="(pid_SOF === 1'bx)",
		lineno=1131];
	"1119:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fae5e4ce650>",
		fillcolor=linen,
		label="1119:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1119:CS" -> "1240:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1119:CS" -> "1269:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1330:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e4c9a90>",
		fillcolor=lightcyan,
		label="1330:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1119:CS" -> "1330:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1283:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e4be7d0>",
		fillcolor=lightcyan,
		label="1283:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1119:CS" -> "1283:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1120:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ca53d10>",
		fillcolor=lightcyan,
		label="1120:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1119:CS" -> "1120:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1321:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e4c3710>",
		fillcolor=lightcyan,
		label="1321:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1119:CS" -> "1321:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1199:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ca6ef50>",
		fillcolor=lightcyan,
		label="1199:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1119:CS" -> "1199:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1354:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e4ce6d0>",
		fillcolor=lightcyan,
		label="1354:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1119:CS" -> "1354:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1189:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ca58790>",
		fillcolor=lightcyan,
		label="1189:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1119:CS" -> "1189:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1218:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ca3af90>",
		fillcolor=lightcyan,
		label="1218:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1119:CS" -> "1218:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1301:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4c3b10>",
		fillcolor=turquoise,
		label="1301:BL
token_pid_sel_d = NACK;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c3b50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c3c90>]",
		style=filled,
		typ=Block];
	"1301:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"682:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cecead0>",
		fillcolor=firebrick,
		label="682:NS
nse_err <= token_valid & (pid_OUT | pid_IN | pid_SETUP) & !match;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cecead0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_681:AL"	 [def_var="['nse_err']",
		label="Leaf_681:AL"];
	"682:NS" -> "Leaf_681:AL"	 [cond="[]",
		lineno=None];
	"1207:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca3a710>",
		fillcolor=aquamarine,
		label="1207:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1207:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"677:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cece490>",
		clk_sens=True,
		fillcolor=gold,
		label="677:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['match']"];
	"678:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cece690>",
		fillcolor=firebrick,
		label="678:NS
match_r <= match;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cece690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"677:AL" -> "678:NS"	 [cond="[]",
		lineno=None];
	"769:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1eb0d0>",
		fillcolor=lightcyan,
		label="769:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"769:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3d1eb1d0>",
		fillcolor=cadetblue,
		label="769:BS
allow_pid = 2'b01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3d1eb1d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"769:CA" -> "769:BS"	 [cond="[]",
		lineno=None];
	"Leaf_967:AL"	 [def_var="['to_large']",
		label="Leaf_967:AL"];
	"Leaf_967:AL" -> "1099:AL";
	"Leaf_967:AL" -> "1006:AL";
	"1020:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca4a090>",
		clk_sens=True,
		fillcolor=gold,
		label="1020:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_ack_to_clr_d', 'tx_valid']"];
	"1021:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca4a490>",
		fillcolor=firebrick,
		label="1021:NS
rx_ack_to_clr <= tx_valid | rx_ack_to_clr_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca4a490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1020:AL" -> "1021:NS"	 [cond="[]",
		lineno=None];
	"1041:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca6a5d0>",
		fillcolor=firebrick,
		label="1041:NS
tx_data_to_cnt <= 8'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca6a5d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1040:AL"	 [def_var="['tx_data_to_cnt']",
		label="Leaf_1040:AL"];
	"1041:NS" -> "Leaf_1040:AL"	 [cond="[]",
		lineno=None];
	"Leaf_921:AL"	 [def_var="['no_bufs1']",
		label="Leaf_921:AL"];
	"924:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf422d0>",
		def_var="['no_bufs']",
		fillcolor=deepskyblue,
		label="924:AS
no_bufs = no_bufs0 & no_bufs1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['no_bufs0', 'no_bufs1']"];
	"Leaf_921:AL" -> "924:AS";
	"1235:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4b4ad0>",
		fillcolor=turquoise,
		label="1235:BL
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4b4c50>]",
		style=filled,
		typ=Block];
	"1235:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1265:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4be410>",
		fillcolor=cadetblue,
		label="1265:BS
next_state = OUT2A;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4be410>]",
		style=filled,
		typ=BlockingSubstitution];
	"1265:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"786:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1eeb10>",
		fillcolor=lightcyan,
		label="786:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"786:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1eec10>",
		fillcolor=firebrick,
		label="786:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1eec10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"786:CA" -> "786:NS"	 [cond="[]",
		lineno=None];
	"641:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d2fe810>",
		def_var="['txfr_iso']",
		fillcolor=deepskyblue,
		label="641:AS
txfr_iso = csr[25:24] == 2'b01;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"641:AS" -> "1099:AL";
	"729:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d4b50>",
		fillcolor=lightcyan,
		label="729:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"729:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d4c50>",
		fillcolor=firebrick,
		label="729:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d4c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"729:CA" -> "729:NS"	 [cond="[]",
		lineno=None];
	"651:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d304790>",
		def_var="['tr_fr']",
		fillcolor=deepskyblue,
		label="651:AS
tr_fr = csr[12:11];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"695:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cec5310>",
		def_var="['tr_fr_d']",
		fillcolor=deepskyblue,
		label="695:AS
tr_fr_d = (mode_hs)? tr_fr : 2'h0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_hs', 'tr_fr']"];
	"651:AS" -> "695:AS";
	"783:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1ee690>",
		fillcolor=lightcyan,
		label="783:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"783:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ee790>",
		fillcolor=firebrick,
		label="783:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ee790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"783:CA" -> "783:NS"	 [cond="[]",
		lineno=None];
	"Leaf_1064:AL"	 [def_var="['pid_PING_r']",
		label="Leaf_1064:AL"];
	"Leaf_1064:AL" -> "1070:AL";
	"1141:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca4dc50>",
		fillcolor=springgreen,
		label="1141:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1141:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca4da10>",
		fillcolor=aquamarine,
		label="1141:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1141:IF" -> "1141:SS"	 [cond="['mode_hs']",
		label="(mode_hs === 1'bx)",
		lineno=1141];
	"993:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf50110>",
		clk_sens=True,
		fillcolor=gold,
		label="993:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf_sel', 'buf_set_d']"];
	"994:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf50390>",
		fillcolor=firebrick,
		label="994:NS
buf1_set <= buf_sel & buf_set_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf50390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"993:AL" -> "994:NS"	 [cond="[]",
		lineno=None];
	"1277:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4be3d0>",
		fillcolor=aquamarine,
		label="1277:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1277:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"685:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cecee10>",
		fillcolor=firebrick,
		label="685:NS
send_token <= send_token_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cecee10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_684:AL"	 [def_var="['send_token']",
		label="Leaf_684:AL"];
	"685:NS" -> "Leaf_684:AL"	 [cond="[]",
		lineno=None];
	"735:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d4f90>",
		fillcolor=lightcyan,
		label="735:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"735:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1df0d0>",
		fillcolor=firebrick,
		label="735:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1df0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"735:CA" -> "735:NS"	 [cond="[]",
		lineno=None];
	"774:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3d1eb710>",
		clk_sens=True,
		fillcolor=gold,
		label="774:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['allow_pid', 'tr_fr_d', 'in_op', 'setup_token', 'csr', 'out_op', 'uc_dpd']"];
	"Leaf_860:AL" -> "774:AL";
	"697:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cec5550>",
		clk_sens=True,
		fillcolor=gold,
		label="697:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_MDATA', 'tr_fr_d', 'pid_DATA2', 'pid_DATA1', 'in_op', 'setup_token', 'csr', 'out_op', 'uc_dpd']"];
	"Leaf_860:AL" -> "697:AL";
	"719:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ceebfd0>",
		fillcolor=turquoise,
		label="719:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"719:BL" -> "720:CS"	 [cond="[]",
		lineno=None];
	"851:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf59350>",
		fillcolor=springgreen,
		label="851:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"851:IF" -> "853:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=851];
	"851:IF" -> "851:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=851];
	"Leaf_664:AL"	 [def_var="['buf0_na']",
		label="Leaf_664:AL"];
	"Leaf_664:AL" -> "917:AL";
	"Leaf_664:AL" -> "1099:AL";
	"Leaf_664:AL" -> "875:AS";
	"Leaf_984:AL"	 [def_var="['idin']",
		label="Leaf_984:AL"];
	"988:NS" -> "Leaf_984:AL"	 [cond="[]",
		lineno=None];
	"684:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cecebd0>",
		clk_sens=True,
		fillcolor=gold,
		label="684:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['send_token_d']"];
	"684:AL" -> "685:NS"	 [cond="[]",
		lineno=None];
	"936:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf42c90>",
		fillcolor=firebrick,
		label="936:NS
adr_r <= adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf42c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"936:NS" -> "Leaf_935:AL"	 [cond="[]",
		lineno=None];
	"1227:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b4650>",
		fillcolor=springgreen,
		label="1227:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1227:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4b4410>",
		fillcolor=aquamarine,
		label="1227:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1227:IF" -> "1227:SS"	 [cond="['pid_ACK']",
		label="(pid_ACK === 1'bx)",
		lineno=1227];
	"Leaf_955:AL"	 [def_var="['out_to_small']",
		label="Leaf_955:AL"];
	"1042:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca6a850>",
		fillcolor=firebrick,
		label="1042:NS
tx_data_to_cnt <= tx_data_to_cnt + 8'h1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca6a850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1042:NS" -> "Leaf_1040:AL"	 [cond="[]",
		lineno=None];
	"1139:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca4d850>",
		fillcolor=springgreen,
		label="1139:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1139:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca4d610>",
		fillcolor=aquamarine,
		label="1139:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1139:IF" -> "1139:SS"	 [cond="['pid_SETUP']",
		label="(pid_SETUP === 1'bx)",
		lineno=1139];
	"1190:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca6e1d0>",
		fillcolor=turquoise,
		label="1190:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca6e2d0>]",
		style=filled,
		typ=Block];
	"1190:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1291:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4bee50>",
		fillcolor=springgreen,
		label="1291:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1291:IF" -> "1291:SS"	 [cond="['to_small']",
		label="(to_small === 1'bx)",
		lineno=1291];
	"1219:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4b4610>",
		fillcolor=turquoise,
		label="1219:BL
rx_ack_to_clr_d = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4b4690>]",
		style=filled,
		typ=Block];
	"1219:BL" -> "1226:IF"	 [cond="[]",
		lineno=None];
	"1219:BL" -> "1227:IF"	 [cond="[]",
		lineno=None];
	"1232:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b4950>",
		fillcolor=springgreen,
		label="1232:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1219:BL" -> "1232:IF"	 [cond="[]",
		lineno=None];
	"1225:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b4210>",
		fillcolor=springgreen,
		label="1225:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1219:BL" -> "1225:IF"	 [cond="[]",
		lineno=None];
	"931:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf42a10>",
		fillcolor=firebrick,
		label="931:NS
new_size <= buf_size - new_sizeb;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf42a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_930:AL"	 [def_var="['new_size']",
		label="Leaf_930:AL"];
	"931:NS" -> "Leaf_930:AL"	 [cond="[]",
		lineno=None];
	"1260:IF" -> "1265:BS"	 [cond="['txfr_iso']",
		label="!(txfr_iso)",
		lineno=1260];
	"1261:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4b9ed0>",
		fillcolor=turquoise,
		label="1261:BL
next_state = UPDATEW;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4be290>]",
		style=filled,
		typ=Block];
	"1260:IF" -> "1261:BL"	 [cond="['txfr_iso']",
		label=txfr_iso,
		lineno=1260];
	"668:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec2dd0>",
		fillcolor=firebrick,
		label="668:NS
buf1_na <= buf1[31] | &buf1_adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec2dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"668:NS" -> "Leaf_667:AL"	 [cond="[]",
		lineno=None];
	"1200:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca3aa10>",
		fillcolor=turquoise,
		label="1200:BL
rx_ack_to_clr_d = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca3a9d0>]",
		style=filled,
		typ=Block];
	"1200:BL" -> "1206:IF"	 [cond="[]",
		lineno=None];
	"1211:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca3ab50>",
		fillcolor=springgreen,
		label="1211:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1200:BL" -> "1211:IF"	 [cond="[]",
		lineno=None];
	"1207:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca3a990>",
		fillcolor=springgreen,
		label="1207:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1200:BL" -> "1207:IF"	 [cond="[]",
		lineno=None];
	"985:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5d750>",
		fillcolor=firebrick,
		label="985:NS
idin[3:0] <= new_adr[3:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5d750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"985:NS" -> "Leaf_984:AL"	 [cond="[]",
		lineno=None];
	"1290:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4bea50>",
		fillcolor=aquamarine,
		label="1290:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1290:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"756:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d8490>",
		fillcolor=lightcyan,
		label="756:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"756:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d85d0>",
		fillcolor=firebrick,
		label="756:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d85d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"756:CA" -> "756:NS"	 [cond="[]",
		lineno=None];
	"1058:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca596d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1058:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_OUT']"];
	"1059:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca598d0>",
		fillcolor=firebrick,
		label="1059:NS
pid_OUT_r <= pid_OUT;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca598d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1058:AL" -> "1059:NS"	 [cond="[]",
		lineno=None];
	"Leaf_947:AL"	 [def_var="['buffer_overflow']",
		label="Leaf_947:AL"];
	"Leaf_947:AL" -> "1006:AL";
	"1337:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4c9c10>",
		fillcolor=aquamarine,
		label="1337:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1337:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"978:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf6dad0>",
		fillcolor=firebrick,
		label="978:NS
idin[31:17] <= (out_to_small_r)? { 4'h0, sizu_c } : { buffer_done, new_size };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf6dad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_977:AL"	 [def_var="['idin']",
		label="Leaf_977:AL"];
	"978:NS" -> "Leaf_977:AL"	 [cond="[]",
		lineno=None];
	"1293:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4c3290>",
		fillcolor=springgreen,
		label="1293:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1293:IF" -> "1293:SS"	 [cond="['pid_seq_err']",
		label="(pid_seq_err === 1'bx)",
		lineno=1293];
	"1344:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4ce350>",
		fillcolor=springgreen,
		label="1344:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1344:IF" -> "1345:BL"	 [cond="['buffer_done', 'dma_en']",
		label="(buffer_done && dma_en)",
		lineno=1344];
	"1349:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4ce410>",
		fillcolor=turquoise,
		label="1349:BL
buf_set_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4ce550>]",
		style=filled,
		typ=Block];
	"1344:IF" -> "1349:BL"	 [cond="['buffer_done', 'dma_en']",
		label="!((buffer_done && dma_en))",
		lineno=1344];
	"1280:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4be750>",
		fillcolor=cadetblue,
		label="1280:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4be750>]",
		style=filled,
		typ=BlockingSubstitution];
	"1280:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"786:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"1262:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4be0d0>",
		fillcolor=springgreen,
		label="1262:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1262:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4be1d0>",
		fillcolor=cadetblue,
		label="1262:BS
int_seqerr_set_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4be1d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1262:IF" -> "1262:BS"	 [cond="['pid_seq_err']",
		label=pid_seq_err,
		lineno=1262];
	"917:AL" -> "918:NS"	 [cond="[]",
		lineno=None];
	"Leaf_964:AL" -> "1099:AL";
	"1023:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca4a690>",
		clk_sens=True,
		fillcolor=gold,
		label="1023:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_ack_to_clr', 'rx_ack_to_cnt']"];
	"1024:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca4a950>",
		fillcolor=springgreen,
		label="1024:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1023:AL" -> "1024:IF"	 [cond="[]",
		lineno=None];
	"771:BS" -> "Leaf_766:AL"	 [cond="[]",
		lineno=None];
	"802:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3cf690d0>",
		fillcolor=lightcyan,
		label="802:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"803:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf69210>",
		fillcolor=firebrick,
		label="803:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf69210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"802:CA" -> "803:NS"	 [cond="[]",
		lineno=None];
	"952:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf5e390>",
		clk_sens=True,
		fillcolor=gold,
		label="952:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['uc_stat_set_d', 'dma_en', 'out_op', 'max_pl_sz', 'sizu_c']"];
	"953:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5e7d0>",
		fillcolor=firebrick,
		label="953:NS
out_to_small_r <= uc_stat_set_d & out_op & dma_en & (sizu_c != max_pl_sz);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5e7d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"952:AL" -> "953:NS"	 [cond="[]",
		lineno=None];
	"1142:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca4dc10>",
		fillcolor=aquamarine,
		label="1142:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1142:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"740:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1df390>",
		fillcolor=lightcyan,
		label="740:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"741:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1df550>",
		fillcolor=firebrick,
		label="741:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1df550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"740:CA" -> "741:NS"	 [cond="[]",
		lineno=None];
	"1212:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca3ab90>",
		fillcolor=turquoise,
		label="1212:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1211:IF" -> "1212:BL"	 [cond="['idma_done']",
		label=idma_done,
		lineno=1211];
	"1094:NS" -> "Leaf_1092:AL"	 [cond="[]",
		lineno=None];
	"935:AL" -> "936:NS"	 [cond="[]",
		lineno=None];
	"639:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d2fe590>",
		def_var="['CTRL_ep']",
		fillcolor=deepskyblue,
		label="639:AS
CTRL_ep = csr[27:26] == 2'b00;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"639:AS" -> "1099:AL";
	"639:AS" -> "875:AS";
	"649:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d3045d0>",
		def_var="['dma_en']",
		fillcolor=deepskyblue,
		label="649:AS
dma_en = csr[15] & !CTRL_ep;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr', 'CTRL_ep']"];
	"639:AS" -> "649:AS";
	"639:AS" -> "1070:AL";
	"639:AS" -> "869:AS";
	"639:AS" -> "872:AS";
	"Leaf_1023:AL" -> "1023:AL";
	"1027:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca4a790>",
		clk_sens=True,
		fillcolor=gold,
		label="1027:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_ack_to_cnt', 'rx_ack_to_val']"];
	"Leaf_1023:AL" -> "1027:AL";
	"842:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf63e10>",
		fillcolor=firebrick,
		label="842:NS
in_token <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf63e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"842:NS" -> "Leaf_838:AL"	 [cond="[]",
		lineno=None];
	"1132:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca43a10>",
		fillcolor=springgreen,
		label="1132:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1132:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca437d0>",
		fillcolor=aquamarine,
		label="1132:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1132:IF" -> "1132:SS"	 [cond="['ep_stall']",
		label="(ep_stall === 1'bx)",
		lineno=1132];
	"997:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf50650>",
		fillcolor=firebrick,
		label="997:NS
uc_bsel_set <= uc_stat_set_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf50650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_996:AL"	 [def_var="['uc_bsel_set']",
		label="Leaf_996:AL"];
	"997:NS" -> "Leaf_996:AL"	 [cond="[]",
		lineno=None];
	"698:CX"	 [ast="<pyverilog.vparser.ast.CasexStatement object at 0x7fae3d1dfc90>",
		fillcolor=lightgray,
		label="698:CX",
		statements="[]",
		style=filled,
		typ=CasexStatement];
	"698:CX" -> "749:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"698:CX" -> "708:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"698:CX" -> "699:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"698:CX" -> "743:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"698:CX" -> "706:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"698:CX" -> "740:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"705:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ceeb290>",
		fillcolor=lightcyan,
		label="705:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"698:CX" -> "705:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"725:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d46d0>",
		fillcolor=lightcyan,
		label="725:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"698:CX" -> "725:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"702:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3cec5dd0>",
		fillcolor=lightcyan,
		label="702:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"698:CX" -> "702:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"704:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ceeb050>",
		fillcolor=lightcyan,
		label="704:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"698:CX" -> "704:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"732:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d4d50>",
		fillcolor=lightcyan,
		label="732:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"698:CX" -> "732:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"746:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1df650>",
		fillcolor=lightcyan,
		label="746:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"698:CX" -> "746:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"710:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3ceeb990>",
		fillcolor=lightcyan,
		label="710:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"698:CX" -> "710:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"752:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1dfe10>",
		fillcolor=lightcyan,
		label="752:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"698:CX" -> "752:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"701:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3cec5bd0>",
		fillcolor=lightcyan,
		label="701:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"698:CX" -> "701:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"718:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d4050>",
		fillcolor=lightcyan,
		label="718:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"698:CX" -> "718:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=698];
	"1175:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca6ed50>",
		fillcolor=turquoise,
		label="1175:BL
tx_dma_en = 1'b1;
next_state = IN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca6edd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca6ef10>]",
		style=filled,
		typ=Block];
	"1176:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca6ec10>",
		fillcolor=springgreen,
		label="1176:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1175:BL" -> "1176:IF"	 [cond="[]",
		lineno=None];
	"Leaf_938:AL"	 [def_var="['size_next_r']",
		label="Leaf_938:AL"];
	"Leaf_938:AL" -> "941:AS";
	"808:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3cf69810>",
		fillcolor=lightcyan,
		label="808:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"808:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf69910>",
		fillcolor=firebrick,
		label="808:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf69910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"808:CA" -> "808:NS"	 [cond="[]",
		lineno=None];
	"655:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d304d90>",
		def_var="['uc_bsel']",
		fillcolor=deepskyblue,
		label="655:AS
uc_bsel = csr[31:30];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"655:AS" -> "975:AS";
	"655:AS" -> "875:AS";
	"779:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ee0d0>",
		fillcolor=firebrick,
		label="779:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ee0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"779:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"711:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ceeb950>",
		fillcolor=turquoise,
		label="711:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"711:BL" -> "712:CS"	 [cond="[]",
		lineno=None];
	"Leaf_674:AL"	 [def_var="['buf1_not_aloc']",
		label="Leaf_674:AL"];
	"1055:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3ca59150>",
		def_var="['int_buf1_set']",
		fillcolor=deepskyblue,
		label="1055:AS
int_buf1_set = !buf_sel & buffer_done & int_set_en & !buf1_not_aloc;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf_sel', 'buffer_done', 'int_set_en', 'buf1_not_aloc']"];
	"Leaf_674:AL" -> "1055:AS";
	"776:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1ebb10>",
		fillcolor=lightcyan,
		label="776:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"776:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ebc10>",
		fillcolor=firebrick,
		label="776:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ebc10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"776:CA" -> "776:NS"	 [cond="[]",
		lineno=None];
	"1213:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca3add0>",
		fillcolor=springgreen,
		label="1213:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1213:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca3ad90>",
		fillcolor=cadetblue,
		label="1213:BS
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca3ad90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1213:IF" -> "1213:BS"	 [cond="['txfr_iso']",
		label=txfr_iso,
		lineno=1213];
	"1214:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca3af10>",
		fillcolor=cadetblue,
		label="1214:BS
next_state = IN2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca3af10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1213:IF" -> "1214:BS"	 [cond="['txfr_iso']",
		label="!(txfr_iso)",
		lineno=1213];
	"792:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d9450>",
		fillcolor=lightcyan,
		label="792:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"792:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9550>",
		fillcolor=firebrick,
		label="792:NS
this_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"792:CA" -> "792:NS"	 [cond="[]",
		lineno=None];
	"705:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceeb390>",
		fillcolor=firebrick,
		label="705:NS
next_dpid <= 2'b10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceeb390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"705:CA" -> "705:NS"	 [cond="[]",
		lineno=None];
	"1065:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca59d90>",
		fillcolor=firebrick,
		label="1065:NS
pid_PING_r <= pid_PING;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca59d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1065:NS" -> "Leaf_1064:AL"	 [cond="[]",
		lineno=None];
	"1064:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca59b90>",
		clk_sens=True,
		fillcolor=gold,
		label="1064:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_PING']"];
	"1064:AL" -> "1065:NS"	 [cond="[]",
		lineno=None];
	"775:CX"	 [ast="<pyverilog.vparser.ast.CasexStatement object at 0x7fae3cf691d0>",
		fillcolor=lightgray,
		label="775:CX",
		statements="[]",
		style=filled,
		typ=CasexStatement];
	"774:AL" -> "775:CX"	 [cond="[]",
		lineno=None];
	"721:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d4390>",
		fillcolor=firebrick,
		label="721:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d4390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"721:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"Leaf_677:AL"	 [def_var="['match_r']",
		label="Leaf_677:AL"];
	"678:NS" -> "Leaf_677:AL"	 [cond="[]",
		lineno=None];
	"1097:NS" -> "Leaf_1092:AL"	 [cond="[]",
		lineno=None];
	"Leaf_671:AL"	 [def_var="['buf0_not_aloc']",
		label="Leaf_671:AL"];
	"Leaf_671:AL" -> "1056:AS";
	"895:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf5f250>",
		clk_sens=True,
		fillcolor=gold,
		label="895:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['max_pl_sz', 'new_size']"];
	"Leaf_930:AL" -> "895:AL";
	"900:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf5f650>",
		clk_sens=True,
		fillcolor=gold,
		label="900:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['new_size']"];
	"Leaf_930:AL" -> "900:AL";
	"977:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf6d890>",
		clk_sens=True,
		fillcolor=gold,
		label="977:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buffer_done', 'out_to_small_r', 'new_size', 'sizu_c']"];
	"Leaf_930:AL" -> "977:AL";
	"1168:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"714:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceebf10>",
		fillcolor=firebrick,
		label="714:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceebf10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"714:CA" -> "714:NS"	 [cond="[]",
		lineno=None];
	"805:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3cf69350>",
		fillcolor=lightcyan,
		label="805:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"806:CX"	 [ast="<pyverilog.vparser.ast.CasexStatement object at 0x7fae3cf69c90>",
		fillcolor=lightgray,
		label="806:CX",
		statements="[]",
		style=filled,
		typ=CasexStatement];
	"805:CA" -> "806:CX"	 [cond="[]",
		lineno=None];
	"1140:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca4da50>",
		fillcolor=springgreen,
		label="1140:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1140:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca4d810>",
		fillcolor=aquamarine,
		label="1140:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1140:IF" -> "1140:SS"	 [cond="['pid_PING']",
		label="(pid_PING === 1'bx)",
		lineno=1140];
	"674:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cece190>",
		clk_sens=True,
		fillcolor=gold,
		label="674:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf1_adr']"];
	"675:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cece410>",
		fillcolor=firebrick,
		label="675:NS
buf1_not_aloc <= &buf1_adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cece410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"674:AL" -> "675:NS"	 [cond="[]",
		lineno=None];
	"741:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1143:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca4ded0>",
		fillcolor=springgreen,
		label="1143:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1143:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca4de10>",
		fillcolor=aquamarine,
		label="1143:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1143:IF" -> "1143:SS"	 [cond="['OUT_ep']",
		label="(OUT_ep === 1'bx)",
		lineno=1143];
	"1280:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4be790>",
		fillcolor=springgreen,
		label="1280:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1280:IF" -> "1280:BS"	 [cond="['abort']",
		label=abort,
		lineno=1280];
	"1281:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4be8d0>",
		fillcolor=cadetblue,
		label="1281:BS
next_state = OUT2B;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4be8d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1280:IF" -> "1281:BS"	 [cond="['abort']",
		label="!(abort)",
		lineno=1280];
	"1248:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b4f90>",
		fillcolor=springgreen,
		label="1248:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1248:IF" -> "1248:SS"	 [cond="['crc16_err']",
		label="(crc16_err === 1'bx)",
		lineno=1248];
	"Leaf_1061:AL" -> "1070:AL";
	"1247:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4b4d50>",
		fillcolor=aquamarine,
		label="1247:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1247:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1331:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4ce0d0>",
		fillcolor=turquoise,
		label="1331:BL
int_set_en = 1'b1;
next_state = UPDATE2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4ce050>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4ce510>]",
		style=filled,
		typ=Block];
	"1330:CA" -> "1331:BL"	 [cond="[]",
		lineno=None];
	"1151:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca585d0>",
		fillcolor=turquoise,
		label="1151:BL
token_pid_sel_d = STALL;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca58490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca58610>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca58750>]",
		style=filled,
		typ=Block];
	"1151:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"Leaf_917:AL" -> "924:AS";
	"Leaf_999:AL"	 [def_var="['uc_dpd_set']",
		label="Leaf_999:AL"];
	"Leaf_914:AL"	 [def_var="['buf1_st_max']",
		label="Leaf_914:AL"];
	"Leaf_914:AL" -> "921:AL";
	"725:CA" -> "726:BL"	 [cond="[]",
		lineno=None];
	"783:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"681:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cece6d0>",
		clk_sens=True,
		fillcolor=gold,
		label="681:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SETUP', 'pid_OUT', 'token_valid', 'pid_IN', 'match']"];
	"681:AL" -> "682:NS"	 [cond="[]",
		lineno=None];
	"637:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d2fe090>",
		def_var="['IN_ep']",
		fillcolor=deepskyblue,
		label="637:AS
IN_ep = csr[27:26] == 2'b01;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"637:AS" -> "908:AS";
	"637:AS" -> "1099:AL";
	"637:AS" -> "1070:AL";
	"637:AS" -> "869:AS";
	"Leaf_1058:AL"	 [def_var="['pid_OUT_r']",
		label="Leaf_1058:AL"];
	"1059:NS" -> "Leaf_1058:AL"	 [cond="[]",
		lineno=None];
	"1234:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b4b10>",
		fillcolor=springgreen,
		label="1234:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1234:IF" -> "1235:BL"	 [cond="['token_valid', 'pid_ACK']",
		label="(token_valid && pid_ACK)",
		lineno=1234];
	"811:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"807:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3cf695d0>",
		fillcolor=lightcyan,
		label="807:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"807:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf696d0>",
		fillcolor=firebrick,
		label="807:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf696d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"807:CA" -> "807:NS"	 [cond="[]",
		lineno=None];
	"747:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1dfa50>",
		fillcolor=firebrick,
		label="747:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1dfa50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"747:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1284:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4c3790>",
		fillcolor=turquoise,
		label="1284:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1283:CA" -> "1284:BL"	 [cond="[]",
		lineno=None];
	"1045:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca6ab10>",
		fillcolor=firebrick,
		label="1045:NS
tx_data_to <= tx_data_to_cnt == tx_data_to_val;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca6ab10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1044:AL" -> "1045:NS"	 [cond="[]",
		lineno=None];
	"Leaf_687:AL"	 [def_var="['token_pid_sel']",
		label="Leaf_687:AL"];
	"688:NS" -> "Leaf_687:AL"	 [cond="[]",
		lineno=None];
	"1337:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4c9dd0>",
		fillcolor=springgreen,
		label="1337:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1337:IF" -> "1337:SS"	 [cond="['buffer_done']",
		label="(buffer_done === 1'bx)",
		lineno=1337];
	"728:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d4910>",
		fillcolor=lightcyan,
		label="728:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"728:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d4a10>",
		fillcolor=firebrick,
		label="728:NS
next_dpid <= 2'b10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d4a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"728:CA" -> "728:NS"	 [cond="[]",
		lineno=None];
	"705:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"987:NS" -> "Leaf_984:AL"	 [cond="[]",
		lineno=None];
	"734:CS" -> "735:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=734];
	"736:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1df210>",
		fillcolor=lightcyan,
		label="736:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"734:CS" -> "736:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=734];
	"1096:NS" -> "Leaf_1092:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1020:AL"	 [def_var="['rx_ack_to_clr']",
		label="Leaf_1020:AL"];
	"Leaf_1020:AL" -> "1023:AL";
	"1137:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca4d210>",
		fillcolor=aquamarine,
		label="1137:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1137:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1068:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca55050>",
		fillcolor=firebrick,
		label="1068:NS
pid_SETUP_r <= pid_SETUP;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca55050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1068:NS" -> "Leaf_1067:AL"	 [cond="[]",
		lineno=None];
	"1121:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca4de90>",
		fillcolor=turquoise,
		label="1121:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1120:CA" -> "1121:BL"	 [cond="[]",
		lineno=None];
	"699:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1290:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4bec10>",
		fillcolor=springgreen,
		label="1290:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1290:IF" -> "1290:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=1290];
	"767:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fae3d1eb350>",
		fillcolor=linen,
		label="767:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"767:CS" -> "771:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=767];
	"767:CS" -> "769:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=767];
	"770:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1eb290>",
		fillcolor=lightcyan,
		label="770:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"767:CS" -> "770:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=767];
	"768:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d8e50>",
		fillcolor=lightcyan,
		label="768:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"767:CS" -> "768:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=767];
	"820:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf63890>",
		fillcolor=firebrick,
		label="820:NS
pid_seq_err <= !((this_dpid == 2'b00) & pid_DATA0 | (this_dpid == 2'b01) & pid_DATA1 | (this_dpid == 2'b10) & pid_DATA2 | (\
this_dpid == 2'b11) & pid_MDATA);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf63890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_819:AL"	 [def_var="['pid_seq_err']",
		label="Leaf_819:AL"];
	"820:NS" -> "Leaf_819:AL"	 [cond="[]",
		lineno=None];
	"1207:IF" -> "1207:SS"	 [cond="['txfr_iso']",
		label="(txfr_iso === 1'bx)",
		lineno=1207];
	"770:CA" -> "770:BS"	 [cond="[]",
		lineno=None];
	"912:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf41510>",
		fillcolor=firebrick,
		label="912:NS
buf0_st_max <= buf0_sz < { 3'h0, max_pl_sz };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf41510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_911:AL"	 [def_var="['buf0_st_max']",
		label="Leaf_911:AL"];
	"912:NS" -> "Leaf_911:AL"	 [cond="[]",
		lineno=None];
	"702:CA" -> "702:NS"	 [cond="[]",
		lineno=None];
	"768:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3d1d8f50>",
		fillcolor=cadetblue,
		label="768:BS
allow_pid = 2'b00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3d1d8f50>]",
		style=filled,
		typ=BlockingSubstitution];
	"768:CA" -> "768:BS"	 [cond="[]",
		lineno=None];
	"985:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf5d790>",
		fillcolor=springgreen,
		label="985:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"984:AL" -> "985:IF"	 [cond="[]",
		lineno=None];
	"956:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5ead0>",
		fillcolor=firebrick,
		label="956:NS
out_to_small <= out_to_small_r;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5ead0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"956:NS" -> "Leaf_955:AL"	 [cond="[]",
		lineno=None];
	"862:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59a50>",
		fillcolor=firebrick,
		label="862:NS
setup_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"862:NS" -> "Leaf_860:AL"	 [cond="[]",
		lineno=None];
	"704:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceeb150>",
		fillcolor=firebrick,
		label="704:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ceeb150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"704:CA" -> "704:NS"	 [cond="[]",
		lineno=None];
	"753:CX"	 [ast="<pyverilog.vparser.ast.CasexStatement object at 0x7fae3d1d8790>",
		fillcolor=lightgray,
		label="753:CX",
		statements="[]",
		style=filled,
		typ=CasexStatement];
	"753:CX" -> "758:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=753];
	"753:CX" -> "756:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=753];
	"754:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d80d0>",
		fillcolor=lightcyan,
		label="754:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"753:CX" -> "754:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=753];
	"755:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d8310>",
		fillcolor=lightcyan,
		label="755:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"753:CX" -> "755:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=753];
	"757:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d86d0>",
		fillcolor=lightcyan,
		label="757:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"753:CX" -> "757:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=753];
	"1306:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4c9250>",
		fillcolor=springgreen,
		label="1306:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1307:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4c9110>",
		fillcolor=turquoise,
		label="1307:BL
token_pid_sel_d = ACK;
send_token_d = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c3f90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c9150>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c9290>]",
		style=filled,
		typ=Block];
	"1306:IF" -> "1307:BL"	 [cond="['pid_seq_err']",
		label=pid_seq_err,
		lineno=1306];
	"1313:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4c9790>",
		fillcolor=turquoise,
		label="1313:BL
send_token_d = 1'b1;
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c9890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c99d0>]",
		style=filled,
		typ=Block];
	"1306:IF" -> "1313:BL"	 [cond="['pid_seq_err']",
		label="!(pid_seq_err)",
		lineno=1306];
	"1241:BL" -> "1250:IF"	 [cond="[]",
		lineno=None];
	"1241:BL" -> "1248:IF"	 [cond="[]",
		lineno=None];
	"1247:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b4f10>",
		fillcolor=springgreen,
		label="1247:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1247:IF"	 [cond="[]",
		lineno=None];
	"1255:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b9c50>",
		fillcolor=springgreen,
		label="1255:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1255:IF"	 [cond="[]",
		lineno=None];
	"1249:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b9390>",
		fillcolor=springgreen,
		label="1249:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1249:IF"	 [cond="[]",
		lineno=None];
	"1251:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b97d0>",
		fillcolor=springgreen,
		label="1251:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1251:IF"	 [cond="[]",
		lineno=None];
	"1252:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b99d0>",
		fillcolor=springgreen,
		label="1252:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1252:IF"	 [cond="[]",
		lineno=None];
	"732:CA" -> "733:BL"	 [cond="[]",
		lineno=None];
	"964:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf5eb50>",
		clk_sens=True,
		fillcolor=gold,
		label="964:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['max_pl_sz', 'sml_ok', 'sizu_c']"];
	"964:AL" -> "965:NS"	 [cond="[]",
		lineno=None];
	"855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59890>",
		fillcolor=firebrick,
		label="855:NS
out_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf59890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"855:NS" -> "Leaf_849:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1070:AL"	 [def_var="['int_upid_set']",
		label="Leaf_1070:AL"];
	"1247:IF" -> "1247:SS"	 [cond="['tx_data_to']",
		label="(tx_data_to === 1'bx)",
		lineno=1247];
	"1292:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4beed0>",
		fillcolor=springgreen,
		label="1292:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1292:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4bee10>",
		fillcolor=aquamarine,
		label="1292:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1292:IF" -> "1292:SS"	 [cond="['to_large']",
		label="(to_large === 1'bx)",
		lineno=1292];
	"1212:BL" -> "1213:IF"	 [cond="[]",
		lineno=None];
	"1322:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4c3950>",
		fillcolor=turquoise,
		label="1322:BL
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4c9a10>]",
		style=filled,
		typ=Block];
	"1321:CA" -> "1322:BL"	 [cond="[]",
		lineno=None];
	"1143:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"750:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1232:IF" -> "1234:IF"	 [cond="['rx_ack_to']",
		label="!(rx_ack_to)",
		lineno=1232];
	"1232:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4b4910>",
		fillcolor=cadetblue,
		label="1232:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4b4910>]",
		style=filled,
		typ=BlockingSubstitution];
	"1232:IF" -> "1232:BS"	 [cond="['rx_ack_to']",
		label=rx_ack_to,
		lineno=1232];
	"785:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1ee8d0>",
		fillcolor=lightcyan,
		label="785:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"785:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ee9d0>",
		fillcolor=firebrick,
		label="785:NS
this_dpid <= allow_pid;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ee9d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"785:CA" -> "785:NS"	 [cond="[]",
		lineno=None];
	"1199:CA" -> "1200:BL"	 [cond="[]",
		lineno=None];
	"948:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5e1d0>",
		fillcolor=firebrick,
		label="948:NS
buffer_overflow <= ({ 3'h0, sizu_c } > buf_size) & rx_data_valid;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5e1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"948:NS" -> "Leaf_947:AL"	 [cond="[]",
		lineno=None];
	"1277:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4be610>",
		fillcolor=springgreen,
		label="1277:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1277:IF" -> "1277:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=1277];
	"1174:IF" -> "1175:BL"	 [cond="['IN_ep', 'CTRL_ep', 'pid_IN']",
		label="(IN_ep || CTRL_ep && pid_IN)",
		lineno=1174];
	"1181:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca3a110>",
		fillcolor=springgreen,
		label="1181:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1174:IF" -> "1181:IF"	 [cond="['IN_ep', 'CTRL_ep', 'pid_IN']",
		label="!((IN_ep || CTRL_ep && pid_IN))",
		lineno=1174];
	"915:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf41890>",
		fillcolor=firebrick,
		label="915:NS
buf1_st_max <= buf1_sz < { 3'h0, max_pl_sz };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf41890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"915:NS" -> "Leaf_914:AL"	 [cond="[]",
		lineno=None];
	"695:AS" -> "774:AL";
	"695:AS" -> "697:AL";
	"1002:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf50990>",
		clk_sens=True,
		fillcolor=gold,
		label="1002:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf0_rl_d']"];
	"1003:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf50b90>",
		fillcolor=firebrick,
		label="1003:NS
buf0_rl <= buf0_rl_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf50b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1002:AL" -> "1003:NS"	 [cond="[]",
		lineno=None];
	"1071:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca55950>",
		fillcolor=firebrick,
		label="1071:NS
int_upid_set <= match_r & !pid_SOF & (OUT_ep & !(pid_OUT_r | pid_PING_r) | IN_ep & !pid_IN_r | CTRL_ep & !(pid_IN_r | pid_\
OUT_r | pid_PING_r | pid_SETUP_r));",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca55950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1071:NS" -> "Leaf_1070:AL"	 [cond="[]",
		lineno=None];
	"1105:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca53b90>",
		fillcolor=turquoise,
		label="1105:BL
next_state = state;
token_pid_sel_d = ACK;
send_token_d = 1'b0;
rx_dma_en = 1'b0;
tx_dma_en = 1'b0;
buf_set_d = 1'b0;
uc_\
stat_set_d = 1'b0;
buf0_rl_d = 1'b0;
int_set_en = 1'b0;
rx_ack_to_clr_d = 1'b1;
int_seqerr_set_d = 1'b0;
send_zero_length = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca38bd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca38d50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca38ed0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca53050>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca53190>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca532d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca53450>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca53590>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca536d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca53850>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca539d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca53b50>]",
		style=filled,
		typ=Block];
	"1099:AL" -> "1105:BL"	 [cond="[]",
		lineno=None];
	"1281:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"713:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1133:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca43c10>",
		fillcolor=springgreen,
		label="1133:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1133:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca439d0>",
		fillcolor=aquamarine,
		label="1133:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1133:IF" -> "1133:SS"	 [cond="['buf0_na']",
		label="(buf0_na === 1'bx)",
		lineno=1133];
	"1251:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4b9590>",
		fillcolor=aquamarine,
		label="1251:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1251:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"Leaf_993:AL"	 [def_var="['buf1_set']",
		label="Leaf_993:AL"];
	"994:NS" -> "Leaf_993:AL"	 [cond="[]",
		lineno=None];
	"1003:NS" -> "Leaf_1002:AL"	 [cond="[]",
		lineno=None];
	"1258:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4b9dd0>",
		fillcolor=springgreen,
		label="1258:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1255:IF" -> "1258:IF"	 [cond="['tx_data_to', 'crc16_err', 'abort']",
		label="!((tx_data_to || crc16_err || abort))",
		lineno=1255];
	"1256:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4b9c10>",
		fillcolor=cadetblue,
		label="1256:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4b9c10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1255:IF" -> "1256:BS"	 [cond="['tx_data_to', 'crc16_err', 'abort']",
		label="(tx_data_to || crc16_err || abort)",
		lineno=1255];
	"1355:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e4ce890>",
		fillcolor=turquoise,
		label="1355:BL
uc_stat_set_d = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4ce850>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e4ce9d0>]",
		style=filled,
		typ=Block];
	"1355:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1176:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca6ed10>",
		fillcolor=cadetblue,
		label="1176:BS
send_zero_length = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca6ed10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1176:IF" -> "1176:BS"	 [cond="['max_pl_sz']",
		label="(max_pl_sz == 11'h0)",
		lineno=1176];
	"758:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"803:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"1176:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1140:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1105:BL" -> "1119:CS"	 [cond="[]",
		lineno=None];
	"Leaf_904:AL"	 [def_var="['buffer_done']",
		label="Leaf_904:AL"];
	"Leaf_904:AL" -> "975:AS";
	"Leaf_904:AL" -> "1056:AS";
	"Leaf_904:AL" -> "1099:AL";
	"Leaf_904:AL" -> "977:AL";
	"Leaf_904:AL" -> "1055:AS";
	"1135:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca43e90>",
		fillcolor=springgreen,
		label="1135:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1135:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca43dd0>",
		fillcolor=aquamarine,
		label="1135:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1135:IF" -> "1135:SS"	 [cond="['no_buf0_dma']",
		label="(no_buf0_dma === 1'bx)",
		lineno=1135];
	"809:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3cf69990>",
		fillcolor=lightcyan,
		label="809:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"809:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf69ad0>",
		fillcolor=firebrick,
		label="809:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf69ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"809:CA" -> "809:NS"	 [cond="[]",
		lineno=None];
	"1354:CA" -> "1355:BL"	 [cond="[]",
		lineno=None];
	"911:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf410d0>",
		clk_sens=True,
		fillcolor=gold,
		label="911:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['max_pl_sz', 'buf0_sz']"];
	"911:AL" -> "912:NS"	 [cond="[]",
		lineno=None];
	"1007:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca4a110>",
		fillcolor=firebrick,
		label="1007:NS
abort <= buffer_overflow | match & (state != IDLE) | match_r & to_large;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca4a110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1006:AL"	 [def_var="['abort']",
		label="Leaf_1006:AL"];
	"1007:NS" -> "Leaf_1006:AL"	 [cond="[]",
		lineno=None];
	"645:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d2fef90>",
		def_var="['ep_stall']",
		fillcolor=deepskyblue,
		label="645:AS
ep_stall = csr[23:22] == 2'b10;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"645:AS" -> "1099:AL";
	"1129:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca433d0>",
		fillcolor=springgreen,
		label="1129:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1129:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca43210>",
		fillcolor=aquamarine,
		label="1129:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1129:IF" -> "1129:SS"	 [cond="['match_r']",
		label="(match_r === 1'bx)",
		lineno=1129];
	"838:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf639d0>",
		clk_sens=True,
		fillcolor=gold,
		label="838:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'pid_SETUP', 'pid_IN', 'pid_OUT']"];
	"840:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf63bd0>",
		fillcolor=springgreen,
		label="840:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"838:AL" -> "840:IF"	 [cond="[]",
		lineno=None];
	"1139:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"781:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ee310>",
		fillcolor=firebrick,
		label="781:NS
this_dpid <= 2'b10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ee310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"781:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"810:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf69cd0>",
		fillcolor=firebrick,
		label="810:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf69cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"810:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"744:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"990:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf5d550>",
		clk_sens=True,
		fillcolor=gold,
		label="990:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf_sel', 'buf_set_d']"];
	"991:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf50050>",
		fillcolor=firebrick,
		label="991:NS
buf0_set <= !buf_sel & buf_set_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf50050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"990:AL" -> "991:NS"	 [cond="[]",
		lineno=None];
	"754:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d81d0>",
		fillcolor=firebrick,
		label="754:NS
next_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d81d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"754:CA" -> "754:NS"	 [cond="[]",
		lineno=None];
	"1249:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4b9150>",
		fillcolor=aquamarine,
		label="1249:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1249:IF" -> "1249:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=1249];
	"1182:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca3a350>",
		fillcolor=turquoise,
		label="1182:BL
rx_dma_en = 1'b1;
next_state = OUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca3a390>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae3ca3a4d0>]",
		style=filled,
		typ=Block];
	"1181:IF" -> "1182:BL"	 [cond="['OUT_ep', 'CTRL_ep', 'pid_OUT', 'pid_SETUP']",
		label="(OUT_ep || CTRL_ep && (pid_OUT || pid_SETUP))",
		lineno=1181];
	"1067:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca59e10>",
		clk_sens=True,
		fillcolor=gold,
		label="1067:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SETUP']"];
	"1067:AL" -> "1068:NS"	 [cond="[]",
		lineno=None];
	"675:NS" -> "Leaf_674:AL"	 [cond="[]",
		lineno=None];
	"1232:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"875:AS" -> "1056:AS";
	"875:AS" -> "993:AL";
	"875:AS" -> "917:AL";
	"875:AS" -> "990:AL";
	"878:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf5c690>",
		clk_sens=True,
		fillcolor=gold,
		label="878:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf_sel', 'buf1_adr', 'buf0_adr']"];
	"875:AS" -> "878:AL";
	"875:AS" -> "921:AL";
	"875:AS" -> "882:AS";
	"875:AS" -> "1055:AS";
	"1136:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca4d090>",
		fillcolor=aquamarine,
		label="1136:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1136:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"808:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"1270:BL" -> "1280:IF"	 [cond="[]",
		lineno=None];
	"1270:BL" -> "1277:IF"	 [cond="[]",
		lineno=None];
	"996:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf50410>",
		clk_sens=True,
		fillcolor=gold,
		label="996:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['uc_stat_set_d']"];
	"996:AL" -> "997:NS"	 [cond="[]",
		lineno=None];
	"798:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9cd0>",
		fillcolor=firebrick,
		label="798:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"798:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"928:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf42650>",
		fillcolor=firebrick,
		label="928:NS
new_sizeb <= (out_op && dma_en)? max_pl_sz : 
             (in_op)? size_next : sizu_c;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf42650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"927:AL" -> "928:NS"	 [cond="[]",
		lineno=None];
	"Leaf_1006:AL" -> "1099:AL";
	"1134:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae3ca43bd0>",
		fillcolor=aquamarine,
		label="1134:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1134:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"806:CX" -> "811:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=806];
	"806:CX" -> "808:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=806];
	"806:CX" -> "807:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=806];
	"806:CX" -> "809:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=806];
	"810:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3cf69bd0>",
		fillcolor=lightcyan,
		label="810:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"806:CX" -> "810:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=806];
	"1000:NS" -> "Leaf_999:AL"	 [cond="[]",
		lineno=None];
	"Leaf_990:AL"	 [def_var="['buf0_set']",
		label="Leaf_990:AL"];
	"991:NS" -> "Leaf_990:AL"	 [cond="[]",
		lineno=None];
	"1261:BL" -> "1262:IF"	 [cond="[]",
		lineno=None];
	"647:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d304190>",
		def_var="['lrg_ok']",
		fillcolor=deepskyblue,
		label="647:AS
lrg_ok = csr[17];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"647:AS" -> "967:AL";
	"905:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5fbd0>",
		fillcolor=firebrick,
		label="905:NS
buffer_done <= (in_op)? buffer_empty : buffer_full;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5fbd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"904:AL" -> "905:NS"	 [cond="[]",
		lineno=None];
	"922:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf41fd0>",
		fillcolor=firebrick,
		label="922:NS
no_bufs1 <= buf1_na | ((buf_sel)? buffer_full : buf1_st_max);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf41fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"922:NS" -> "Leaf_921:AL"	 [cond="[]",
		lineno=None];
	"896:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5f5d0>",
		fillcolor=firebrick,
		label="896:NS
buffer_full <= new_size < { 3'h0, max_pl_sz };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5f5d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"896:NS" -> "Leaf_895:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1027:AL" -> "1099:AL";
	"Leaf_1027:AL" -> "1077:AS";
	"649:AS" -> "975:AS";
	"649:AS" -> "908:AS";
	"649:AS" -> "917:AL";
	"649:AS" -> "952:AL";
	"649:AS" -> "1099:AL";
	"649:AS" -> "875:AS";
	"649:AS" -> "927:AL";
	"649:AS" -> "941:AS";
	"788:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1eed50>",
		fillcolor=lightcyan,
		label="788:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"788:CA" -> "788:NS"	 [cond="[]",
		lineno=None];
	"1142:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca4de50>",
		fillcolor=springgreen,
		label="1142:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1142:IF" -> "1142:SS"	 [cond="['IN_ep']",
		label="(IN_ep === 1'bx)",
		lineno=1142];
	"782:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ee550>",
		fillcolor=firebrick,
		label="782:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1ee550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"782:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"1298:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"864:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf59d10>",
		fillcolor=springgreen,
		label="864:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"864:IF" -> "864:NS"	 [cond="['pid_SETUP']",
		label=pid_SETUP,
		lineno=864];
	"866:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf59ed0>",
		fillcolor=springgreen,
		label="866:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"864:IF" -> "866:IF"	 [cond="['pid_SETUP']",
		label="!(pid_SETUP)",
		lineno=864];
	"1141:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"Leaf_849:AL" -> "872:AS";
	"746:CA" -> "747:NS"	 [cond="[]",
		lineno=None];
	"1081:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca55f90>",
		clk_sens=True,
		fillcolor=gold,
		label="1081:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['int_seqerr_set_d']"];
	"1081:AL" -> "1082:NS"	 [cond="[]",
		lineno=None];
	"729:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1294:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4c3490>",
		fillcolor=springgreen,
		label="1294:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1294:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4c3250>",
		fillcolor=aquamarine,
		label="1294:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1294:IF" -> "1294:SS"	 [cond="['mode_hs']",
		label="(mode_hs === 1'bx)",
		lineno=1294];
	"895:AL" -> "896:NS"	 [cond="[]",
		lineno=None];
	"Leaf_927:AL"	 [def_var="['new_sizeb']",
		label="Leaf_927:AL"];
	"930:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf42690>",
		clk_sens=True,
		fillcolor=gold,
		label="930:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['new_sizeb', 'buf_size']"];
	"Leaf_927:AL" -> "930:AL";
	"1307:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"797:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d98d0>",
		fillcolor=lightcyan,
		label="797:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"797:CA" -> "798:NS"	 [cond="[]",
		lineno=None];
	"1148:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca581d0>",
		fillcolor=springgreen,
		label="1148:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1149:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae3ca58210>",
		fillcolor=turquoise,
		label="1149:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1148:IF" -> "1149:BL"	 [cond="['match_r', 'ep_disabled', 'pid_SOF']",
		label="(match_r && !ep_disabled && !pid_SOF)",
		lineno=1148];
	"947:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf47790>",
		clk_sens=True,
		fillcolor=gold,
		label="947:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_data_valid', 'buf_size', 'sizu_c']"];
	"947:AL" -> "948:NS"	 [cond="[]",
		lineno=None];
	"878:AL" -> "879:NS"	 [cond="[]",
		lineno=None];
	"849:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf63f90>",
		clk_sens=True,
		fillcolor=gold,
		label="849:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'pid_SETUP', 'pid_IN', 'pid_OUT']"];
	"849:AL" -> "851:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1040:AL" -> "1044:AL";
	"1040:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca6a3d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1040:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['tx_data_to_clr', 'tx_data_to_cnt']"];
	"Leaf_1040:AL" -> "1040:AL";
	"667:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cec2a90>",
		clk_sens=True,
		fillcolor=gold,
		label="667:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf1', 'buf1_adr']"];
	"667:AL" -> "668:NS"	 [cond="[]",
		lineno=None];
	"1295:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e4c3450>",
		fillcolor=aquamarine,
		label="1295:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1295:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"775:CX" -> "793:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"775:CX" -> "786:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"775:CX" -> "783:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"775:CX" -> "802:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"775:CX" -> "776:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"775:CX" -> "792:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"775:CX" -> "805:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"775:CX" -> "785:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"775:CX" -> "788:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"775:CX" -> "797:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"782:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1ee450>",
		fillcolor=lightcyan,
		label="782:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"775:CX" -> "782:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"800:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d9b50>",
		fillcolor=lightcyan,
		label="800:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"775:CX" -> "800:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"795:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d9810>",
		fillcolor=lightcyan,
		label="795:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"775:CX" -> "795:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"779:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1ebf90>",
		fillcolor=lightcyan,
		label="779:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"775:CX" -> "779:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"778:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1ebd90>",
		fillcolor=lightcyan,
		label="778:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"775:CX" -> "778:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"781:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1ee210>",
		fillcolor=lightcyan,
		label="781:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"775:CX" -> "781:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"789:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1eef90>",
		fillcolor=lightcyan,
		label="789:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"775:CX" -> "789:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"791:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae3d1d9210>",
		fillcolor=lightcyan,
		label="791:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"775:CX" -> "791:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=775];
	"855:IF" -> "855:NS"	 [cond="['pid_IN']",
		label=pid_IN,
		lineno=855];
	"866:IF" -> "866:NS"	 [cond="['pid_OUT', 'pid_IN']",
		label="(pid_OUT || pid_IN)",
		lineno=866];
	"672:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cece110>",
		fillcolor=firebrick,
		label="672:NS
buf0_not_aloc <= &buf0_adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cece110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"672:NS" -> "Leaf_671:AL"	 [cond="[]",
		lineno=None];
	"928:NS" -> "Leaf_927:AL"	 [cond="[]",
		lineno=None];
	"801:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9f50>",
		fillcolor=firebrick,
		label="801:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"801:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"755:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d8410>",
		fillcolor=firebrick,
		label="755:NS
next_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d8410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"755:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"768:BS" -> "Leaf_766:AL"	 [cond="[]",
		lineno=None];
	"1129:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"782:CA" -> "782:NS"	 [cond="[]",
		lineno=None];
	"776:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"921:AL" -> "922:NS"	 [cond="[]",
		lineno=None];
	"697:AL" -> "698:CX"	 [cond="[]",
		lineno=None];
	"1137:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca4d450>",
		fillcolor=springgreen,
		label="1137:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1137:IF" -> "1137:SS"	 [cond="['pid_IN']",
		label="(pid_IN === 1'bx)",
		lineno=1137];
	"1133:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"754:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1024:IF" -> "1024:NS"	 [cond="['rx_ack_to_clr']",
		label=rx_ack_to_clr,
		lineno=1024];
	"1025:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca4ab10>",
		fillcolor=firebrick,
		label="1025:NS
rx_ack_to_cnt <= rx_ack_to_cnt + 8'h1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3ca4ab10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1024:IF" -> "1025:NS"	 [cond="['rx_ack_to_clr']",
		label="!(rx_ack_to_clr)",
		lineno=1024];
	"1021:NS" -> "Leaf_1020:AL"	 [cond="[]",
		lineno=None];
	"955:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf5e810>",
		clk_sens=True,
		fillcolor=gold,
		label="955:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['out_to_small_r']"];
	"955:AL" -> "956:NS"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1130:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1131:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1141:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1139:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1132:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1140:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1143:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1133:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1135:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1129:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1142:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1137:IF"	 [cond="[]",
		lineno=None];
	"1134:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca43e10>",
		fillcolor=springgreen,
		label="1134:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1128:BL" -> "1134:IF"	 [cond="[]",
		lineno=None];
	"1138:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca4d650>",
		fillcolor=springgreen,
		label="1138:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1128:BL" -> "1138:IF"	 [cond="[]",
		lineno=None];
	"1136:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca4d250>",
		fillcolor=springgreen,
		label="1136:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1128:BL" -> "1136:IF"	 [cond="[]",
		lineno=None];
	"860:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf59710>",
		clk_sens=True,
		fillcolor=gold,
		label="860:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'pid_SETUP', 'pid_IN', 'pid_OUT']"];
	"862:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf59a90>",
		fillcolor=springgreen,
		label="862:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"860:AL" -> "862:IF"	 [cond="[]",
		lineno=None];
	"Leaf_766:AL" -> "774:AL";
	"901:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5f8d0>",
		fillcolor=firebrick,
		label="901:NS
buffer_empty <= new_size == 14'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cf5f8d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"900:AL" -> "901:NS"	 [cond="[]",
		lineno=None];
	"1213:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"654:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d304b90>",
		def_var="['uc_dpd']",
		fillcolor=deepskyblue,
		label="654:AS
uc_dpd = csr[29:28];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"654:AS" -> "774:AL";
	"654:AS" -> "697:AL";
	"727:CS" -> "729:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=727];
	"727:CS" -> "728:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=727];
	"Leaf_1058:AL" -> "1070:AL";
	"710:CA" -> "711:BL"	 [cond="[]",
		lineno=None];
	"Leaf_952:AL"	 [def_var="['out_to_small_r']",
		label="Leaf_952:AL"];
	"Leaf_952:AL" -> "980:AL";
	"Leaf_952:AL" -> "984:AL";
	"Leaf_952:AL" -> "955:AL";
	"Leaf_952:AL" -> "977:AL";
	"706:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"792:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"800:CA" -> "801:NS"	 [cond="[]",
		lineno=None];
	"671:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cec2d50>",
		clk_sens=True,
		fillcolor=gold,
		label="671:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf0_adr']"];
	"671:AL" -> "672:NS"	 [cond="[]",
		lineno=None];
	"757:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d87d0>",
		fillcolor=firebrick,
		label="757:NS
next_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d87d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"757:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"796:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9a50>",
		fillcolor=firebrick,
		label="796:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"795:CA" -> "796:NS"	 [cond="[]",
		lineno=None];
	"752:CA" -> "753:CX"	 [cond="[]",
		lineno=None];
	"809:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"1262:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1070:AL" -> "1071:NS"	 [cond="[]",
		lineno=None];
	"1161:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"953:NS" -> "Leaf_952:AL"	 [cond="[]",
		lineno=None];
	"1258:IF" -> "1259:BL"	 [cond="['rx_data_done']",
		label=rx_data_done,
		lineno=1258];
	"1300:IF" -> "1301:BL"	 [cond="['to_small', 'to_large']",
		label="(to_small || to_large)",
		lineno=1300];
	"1300:IF" -> "1306:IF"	 [cond="['to_small', 'to_large']",
		label="!((to_small || to_large))",
		lineno=1300];
	"869:AS" -> "774:AL";
	"869:AS" -> "927:AL";
	"869:AS" -> "904:AL";
	"869:AS" -> "697:AL";
	"869:AS" -> "941:AS";
	"1249:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1256:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"766:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3d1d8c90>",
		clk_sens=False,
		fillcolor=gold,
		label="766:AL",
		sens="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_MDATA', 'pid_DATA2', 'pid_DATA1', 'pid_DATA0']"];
	"766:AL" -> "767:CS"	 [cond="[]",
		lineno=None];
	"882:AS" -> "889:AS";
	"882:AS" -> "947:AL";
	"885:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf5cf10>",
		def_var="['buf_smaller']",
		fillcolor=deepskyblue,
		label="885:AS
buf_smaller = buf_size < { 3'h0, max_pl_sz };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf_size', 'max_pl_sz']"];
	"882:AS" -> "885:AS";
	"882:AS" -> "930:AL";
	"644:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d2fed10>",
		def_var="['ep_disabled']",
		fillcolor=deepskyblue,
		label="644:AS
ep_disabled = csr[23:22] == 2'b01;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"644:AS" -> "1099:AL";
	"721:CA" -> "721:NS"	 [cond="[]",
		lineno=None];
	"Leaf_900:AL"	 [def_var="['buffer_empty']",
		label="Leaf_900:AL"];
	"901:NS" -> "Leaf_900:AL"	 [cond="[]",
		lineno=None];
	"1030:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3ca4afd0>",
		def_var="['rx_ack_to_val']",
		fillcolor=deepskyblue,
		label="1030:AS
rx_ack_to_val = (mode_hs)? 8'd22 : 8'd36;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_hs']"];
	"1030:AS" -> "1027:AL";
	"977:AL" -> "978:NS"	 [cond="[]",
		lineno=None];
	"816:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cf69f50>",
		def_var="['data_pid_sel']",
		fillcolor=deepskyblue,
		label="816:AS
data_pid_sel = this_dpid;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['this_dpid']"];
	"Leaf_819:AL" -> "1099:AL";
	"1041:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca6a690>",
		fillcolor=springgreen,
		label="1041:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1041:IF" -> "1041:NS"	 [cond="['tx_data_to_clr']",
		label=tx_data_to_clr,
		lineno=1041];
	"1041:IF" -> "1042:NS"	 [cond="['tx_data_to_clr']",
		label="!(tx_data_to_clr)",
		lineno=1041];
	"1214:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1150:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3ca58710>",
		fillcolor=springgreen,
		label="1150:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1150:IF" -> "1157:IF"	 [cond="['ep_stall']",
		label="!(ep_stall)",
		lineno=1150];
	"1150:IF" -> "1151:BL"	 [cond="['ep_stall']",
		label=ep_stall,
		lineno=1150];
	"1027:AL" -> "1028:NS"	 [cond="[]",
		lineno=None];
	"791:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9310>",
		fillcolor=firebrick,
		label="791:NS
this_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3d1d9310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"791:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"714:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"665:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec2a50>",
		fillcolor=firebrick,
		label="665:NS
buf0_na <= buf0[31] | &buf0_adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec2a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"665:NS" -> "Leaf_664:AL"	 [cond="[]",
		lineno=None];
	"755:CA" -> "755:NS"	 [cond="[]",
		lineno=None];
	"1092:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca5b4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1092:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'match', 'next_state']"];
	"1092:AL" -> "1094:IF"	 [cond="[]",
		lineno=None];
	"1149:BL" -> "1150:IF"	 [cond="[]",
		lineno=None];
	"840:IF" -> "840:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=840];
	"842:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf63e50>",
		fillcolor=springgreen,
		label="842:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"840:IF" -> "842:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=840];
	"1338:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4c9e50>",
		fillcolor=springgreen,
		label="1338:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1338:IF" -> "1338:SS"	 [cond="['dma_en']",
		label="(dma_en === 1'bx)",
		lineno=1338];
	"1189:CA" -> "1190:BL"	 [cond="[]",
		lineno=None];
	"Leaf_677:AL" -> "1099:AL";
	"Leaf_677:AL" -> "1070:AL";
	"Leaf_677:AL" -> "1006:AL";
	"756:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1006:AL" -> "1007:NS"	 [cond="[]",
		lineno=None];
	"1061:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3ca59950>",
		clk_sens=True,
		fillcolor=gold,
		label="1061:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_IN']"];
	"1061:AL" -> "1062:NS"	 [cond="[]",
		lineno=None];
	"660:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cec24d0>",
		def_var="['buf0_sz']",
		fillcolor=deepskyblue,
		label="660:AS
buf0_sz = buf0[30:17];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf0']"];
	"660:AS" -> "911:AL";
	"660:AS" -> "882:AS";
	"1251:IF" -> "1251:SS"	 [cond="['txfr_iso']",
		label="(txfr_iso === 1'bx)",
		lineno=1251];
	"704:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1314:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4c96d0>",
		fillcolor=springgreen,
		label="1314:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1313:BL" -> "1314:IF"	 [cond="[]",
		lineno=None];
	"885:AS" -> "889:AS";
	"1331:BL" -> "1344:IF"	 [cond="[]",
		lineno=None];
	"1331:BL" -> "1337:IF"	 [cond="[]",
		lineno=None];
	"1331:BL" -> "1338:IF"	 [cond="[]",
		lineno=None];
	"924:AS" -> "1099:AL";
	"1025:NS" -> "Leaf_1023:AL"	 [cond="[]",
		lineno=None];
	"1292:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1182:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"735:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"939:NS" -> "Leaf_938:AL"	 [cond="[]",
		lineno=None];
	"1038:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3ca6a210>",
		def_var="['tx_data_to_clr']",
		fillcolor=deepskyblue,
		label="1038:AS
tx_data_to_clr = rx_active;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_active']"];
	"1038:AS" -> "1040:AL";
	"769:BS" -> "Leaf_766:AL"	 [cond="[]",
		lineno=None];
	"1225:IF" -> "1225:SS"	 [cond="['rx_ack_to']",
		label="(rx_ack_to === 1'bx)",
		lineno=1225];
	"968:NS" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"779:CA" -> "779:NS"	 [cond="[]",
		lineno=None];
	"1206:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"778:CA" -> "778:NS"	 [cond="[]",
		lineno=None];
	"648:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d304350>",
		def_var="['sml_ok']",
		fillcolor=deepskyblue,
		label="648:AS
sml_ok = csr[16];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"648:AS" -> "964:AL";
	"941:AS" -> "980:AL";
	"941:AS" -> "984:AL";
	"Leaf_774:AL" -> "816:AS";
	"819:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cf69e90>",
		clk_sens=True,
		fillcolor=gold,
		label="819:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['this_dpid', 'pid_MDATA', 'pid_DATA2', 'pid_DATA1', 'pid_DATA0']"];
	"Leaf_774:AL" -> "819:AL";
	"853:NS" -> "Leaf_849:AL"	 [cond="[]",
		lineno=None];
	"807:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"1134:IF" -> "1134:SS"	 [cond="['buf1_na']",
		label="(buf1_na === 1'bx)",
		lineno=1134];
	"1138:IF" -> "1138:SS"	 [cond="['pid_OUT']",
		label="(pid_OUT === 1'bx)",
		lineno=1138];
	"1040:AL" -> "1041:IF"	 [cond="[]",
		lineno=None];
	"701:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec5cd0>",
		fillcolor=firebrick,
		label="701:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fae3cec5cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"701:CA" -> "701:NS"	 [cond="[]",
		lineno=None];
	"810:CA" -> "810:NS"	 [cond="[]",
		lineno=None];
	"658:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d304fd0>",
		def_var="['buf0_adr']",
		fillcolor=deepskyblue,
		label="658:AS
buf0_adr = buf0[SSRAM_HADR+2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf0']"];
	"658:AS" -> "980:AL";
	"658:AS" -> "984:AL";
	"658:AS" -> "878:AL";
	"658:AS" -> "671:AL";
	"664:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae3cec2750>",
		clk_sens=True,
		fillcolor=gold,
		label="664:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf0', 'buf0_adr']"];
	"658:AS" -> "664:AL";
	"757:CA" -> "757:NS"	 [cond="[]",
		lineno=None];
	"728:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"930:AL" -> "931:NS"	 [cond="[]",
		lineno=None];
	"905:NS" -> "Leaf_904:AL"	 [cond="[]",
		lineno=None];
	"842:IF" -> "842:NS"	 [cond="['pid_IN']",
		label=pid_IN,
		lineno=842];
	"844:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae3cf59050>",
		fillcolor=springgreen,
		label="844:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"842:IF" -> "844:IF"	 [cond="['pid_IN']",
		label="!(pid_IN)",
		lineno=842];
	"1295:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e4c3690>",
		fillcolor=springgreen,
		label="1295:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1295:IF" -> "1295:SS"	 [cond="['no_bufs']",
		label="(no_bufs === 1'bx)",
		lineno=1295];
	"1284:BL" -> "1298:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1291:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1293:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1290:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1292:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1294:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1295:IF"	 [cond="[]",
		lineno=None];
	"652:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3d304990>",
		def_var="['max_pl_sz']",
		fillcolor=deepskyblue,
		label="652:AS
max_pl_sz = csr[10:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"652:AS" -> "889:AS";
	"652:AS" -> "967:AL";
	"652:AS" -> "952:AL";
	"652:AS" -> "964:AL";
	"652:AS" -> "1099:AL";
	"652:AS" -> "911:AL";
	"652:AS" -> "927:AL";
	"652:AS" -> "895:AL";
	"652:AS" -> "885:AS";
	"652:AS" -> "941:AS";
	"652:AS" -> "914:AL";
	"Leaf_900:AL" -> "904:AL";
	"1250:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"736:CA" -> "736:NS"	 [cond="[]",
		lineno=None];
	"844:IF" -> "844:NS"	 [cond="['pid_OUT', 'pid_SETUP']",
		label="(pid_OUT || pid_SETUP)",
		lineno=844];
	"781:CA" -> "781:NS"	 [cond="[]",
		lineno=None];
	"1132:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1045:NS" -> "Leaf_1044:AL"	 [cond="[]",
		lineno=None];
	"1349:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1218:CA" -> "1219:BL"	 [cond="[]",
		lineno=None];
	"785:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"1252:IF" -> "1252:SS"	 [cond="['pid_seq_err']",
		label="(pid_seq_err === 1'bx)",
		lineno=1252];
	"701:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"1121:BL" -> "1127:IF"	 [cond="[]",
		lineno=None];
	"1121:BL" -> "1148:IF"	 [cond="[]",
		lineno=None];
	"985:IF" -> "987:IF"	 [cond="['buf_set_d']",
		label="!(buf_set_d)",
		lineno=985];
	"985:IF" -> "985:NS"	 [cond="['buf_set_d']",
		label=buf_set_d,
		lineno=985];
	"Leaf_1099:AL" -> "999:AL";
	"Leaf_1099:AL" -> "687:AL";
	"Leaf_1099:AL" -> "1056:AS";
	"Leaf_1099:AL" -> "1020:AL";
	"Leaf_1099:AL" -> "993:AL";
	"Leaf_1099:AL" -> "684:AL";
	"Leaf_1099:AL" -> "952:AL";
	"Leaf_1099:AL" -> "984:AL";
	"Leaf_1099:AL" -> "1002:AL";
	"Leaf_1099:AL" -> "990:AL";
	"Leaf_1099:AL" -> "996:AL";
	"Leaf_1099:AL" -> "1081:AL";
	"Leaf_1099:AL" -> "1092:AL";
	"Leaf_1099:AL" -> "1055:AS";
	"789:CA" -> "789:NS"	 [cond="[]",
		lineno=None];
	"819:AL" -> "820:NS"	 [cond="[]",
		lineno=None];
	"1227:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"793:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"Leaf_911:AL" -> "917:AL";
	"1314:IF" -> "1314:BS"	 [cond="['mode_hs', 'no_bufs']",
		label="(mode_hs && no_bufs)",
		lineno=1314];
	"1314:IF" -> "1315:BS"	 [cond="['mode_hs', 'no_bufs']",
		label="!((mode_hs && no_bufs))",
		lineno=1314];
	"914:AL" -> "915:NS"	 [cond="[]",
		lineno=None];
	"872:AS" -> "952:AL";
	"872:AS" -> "774:AL";
	"872:AS" -> "927:AL";
	"872:AS" -> "697:AL";
	"872:AS" -> "941:AS";
	"1294:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"796:NS" -> "Leaf_774:AL"	 [cond="[]",
		lineno=None];
	"708:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"718:CA" -> "719:BL"	 [cond="[]",
		lineno=None];
	"1135:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1322:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"722:NS" -> "Leaf_697:AL"	 [cond="[]",
		lineno=None];
	"862:IF" -> "862:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=862];
	"862:IF" -> "864:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=862];
	"791:CA" -> "791:NS"	 [cond="[]",
		lineno=None];
	"659:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fae3cec2290>",
		def_var="['buf1_adr']",
		fillcolor=deepskyblue,
		label="659:AS
buf1_adr = buf1[SSRAM_HADR+2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf1']"];
	"659:AS" -> "674:AL";
	"659:AS" -> "878:AL";
	"659:AS" -> "667:AL";
	"664:AL" -> "665:NS"	 [cond="[]",
		lineno=None];
	"1136:IF" -> "1136:SS"	 [cond="['CTRL_ep']",
		label="(CTRL_ep === 1'bx)",
		lineno=1136];
}
