strict digraph "" {
	node [label="\N"];
	"1291:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1ca6d0>",
		fillcolor=aquamarine,
		label="1291:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"Leaf_1099:AL"	 [def_var="['int_seqerr_set_d', 'buf0_rl_d', 'rx_dma_en', 'int_set_en', 'send_zero_length', 'uc_stat_set_d', 'rx_ack_to_clr_d', 'send_token_\
d', 'token_pid_sel_d', 'tx_dma_en', 'buf_set_d', 'next_state']",
		label="Leaf_1099:AL"];
	"1291:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1293:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1ca850>",
		fillcolor=aquamarine,
		label="1293:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1293:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1134:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1ca950>",
		fillcolor=aquamarine,
		label="1134:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1134:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1141:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1caa50>",
		fillcolor=springgreen,
		label="1141:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1141:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1cab10>",
		fillcolor=aquamarine,
		label="1141:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1141:IF" -> "1141:SS"	 [cond="['mode_hs']",
		label="(mode_hs === 1'bx)",
		lineno=1141];
	"1306:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1cacd0>",
		fillcolor=springgreen,
		label="1306:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1307:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1d7490>",
		fillcolor=turquoise,
		label="1307:BL
token_pid_sel_d = ACK;
send_token_d = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1d74d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1d7650>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1d77d0>]",
		style=filled,
		typ=Block];
	"1306:IF" -> "1307:BL"	 [cond="['pid_seq_err']",
		label=pid_seq_err,
		lineno=1306];
	"1313:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1cad10>",
		fillcolor=turquoise,
		label="1313:BL
send_token_d = 1'b1;
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1d71d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1d7350>]",
		style=filled,
		typ=Block];
	"1306:IF" -> "1313:BL"	 [cond="['pid_seq_err']",
		label="!(pid_seq_err)",
		lineno=1306];
	"1241:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1d7c50>",
		fillcolor=turquoise,
		label="1241:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1247:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1d7c90>",
		fillcolor=springgreen,
		label="1247:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1247:IF"	 [cond="[]",
		lineno=None];
	"1250:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1e02d0>",
		fillcolor=springgreen,
		label="1250:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1250:IF"	 [cond="[]",
		lineno=None];
	"1249:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1e00d0>",
		fillcolor=springgreen,
		label="1249:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1249:IF"	 [cond="[]",
		lineno=None];
	"1255:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1e0910>",
		fillcolor=springgreen,
		label="1255:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1255:IF"	 [cond="[]",
		lineno=None];
	"1248:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1d7e90>",
		fillcolor=springgreen,
		label="1248:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1248:IF"	 [cond="[]",
		lineno=None];
	"1251:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1e0510>",
		fillcolor=springgreen,
		label="1251:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1251:IF"	 [cond="[]",
		lineno=None];
	"1252:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1e0710>",
		fillcolor=springgreen,
		label="1252:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1241:BL" -> "1252:IF"	 [cond="[]",
		lineno=None];
	"1301:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e13a990>",
		fillcolor=turquoise,
		label="1301:BL
token_pid_sel_d = NACK;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e13a9d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e13ab50>]",
		style=filled,
		typ=Block];
	"1301:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1247:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1d7cd0>",
		fillcolor=aquamarine,
		label="1247:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1247:IF" -> "1247:SS"	 [cond="['tx_data_to']",
		label="(tx_data_to === 1'bx)",
		lineno=1247];
	"1292:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1ea390>",
		fillcolor=springgreen,
		label="1292:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1292:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1ea3d0>",
		fillcolor=aquamarine,
		label="1292:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1292:IF" -> "1292:SS"	 [cond="['to_large']",
		label="(to_large === 1'bx)",
		lineno=1292];
	"1157:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1ea590>",
		fillcolor=springgreen,
		label="1157:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1167:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1ea5d0>",
		fillcolor=springgreen,
		label="1167:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1157:IF" -> "1167:IF"	 [cond="['buf0_na', 'buf1_na', 'no_buf0_dma', 'CTRL_ep', 'pid_IN', 'buf1_na', 'CTRL_ep', 'pid_OUT', 'buf0_na']",
		label="!((buf0_na && buf1_na || no_buf0_dma || CTRL_ep && pid_IN && buf1_na || CTRL_ep && pid_OUT && buf0_na))",
		lineno=1157];
	"1161:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e174710>",
		fillcolor=turquoise,
		label="1161:BL
token_pid_sel_d = NACK;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e174750>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1748d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e174a50>]",
		style=filled,
		typ=Block];
	"1157:IF" -> "1161:BL"	 [cond="['buf0_na', 'buf1_na', 'no_buf0_dma', 'CTRL_ep', 'pid_IN', 'buf1_na', 'CTRL_ep', 'pid_OUT', 'buf0_na']",
		label="(buf0_na && buf1_na || no_buf0_dma || CTRL_ep && pid_IN && buf1_na || CTRL_ep && pid_OUT && buf0_na)",
		lineno=1157];
	"1212:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e188710>",
		fillcolor=turquoise,
		label="1212:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1213:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1d7950>",
		fillcolor=springgreen,
		label="1213:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1212:BL" -> "1213:IF"	 [cond="[]",
		lineno=None];
	"1321:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e17e050>",
		fillcolor=lightcyan,
		label="1321:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1322:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e17e0d0>",
		fillcolor=turquoise,
		label="1322:BL
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e17e110>]",
		style=filled,
		typ=Block];
	"1321:CA" -> "1322:BL"	 [cond="[]",
		lineno=None];
	"1143:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1ea290>",
		fillcolor=aquamarine,
		label="1143:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1143:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1219:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e17e450>",
		fillcolor=turquoise,
		label="1219:BL
rx_ack_to_clr_d = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e17e2d0>]",
		style=filled,
		typ=Block];
	"1232:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e17ea90>",
		fillcolor=springgreen,
		label="1232:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1219:BL" -> "1232:IF"	 [cond="[]",
		lineno=None];
	"1227:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e17e890>",
		fillcolor=springgreen,
		label="1227:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1219:BL" -> "1227:IF"	 [cond="[]",
		lineno=None];
	"1226:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e17e690>",
		fillcolor=springgreen,
		label="1226:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1219:BL" -> "1226:IF"	 [cond="[]",
		lineno=None];
	"1225:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e17e490>",
		fillcolor=springgreen,
		label="1225:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1219:BL" -> "1225:IF"	 [cond="[]",
		lineno=None];
	"1232:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e17ed90>",
		fillcolor=cadetblue,
		label="1232:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e17ed90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1232:IF" -> "1232:BS"	 [cond="['rx_ack_to']",
		label=rx_ack_to,
		lineno=1232];
	"1234:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e17ead0>",
		fillcolor=springgreen,
		label="1234:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1232:IF" -> "1234:IF"	 [cond="['rx_ack_to']",
		label="!(rx_ack_to)",
		lineno=1232];
	"1314:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1caf50>",
		fillcolor=cadetblue,
		label="1314:BS
token_pid_sel_d = NYET;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1caf50>]",
		style=filled,
		typ=BlockingSubstitution];
	"1314:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1249:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1e0110>",
		fillcolor=aquamarine,
		label="1249:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1249:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1227:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e17e8d0>",
		fillcolor=aquamarine,
		label="1227:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1227:IF" -> "1227:SS"	 [cond="['pid_ACK']",
		label="(pid_ACK === 1'bx)",
		lineno=1227];
	"1262:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1e0bd0>",
		fillcolor=cadetblue,
		label="1262:BS
int_seqerr_set_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1e0bd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1262:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1226:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e17e6d0>",
		fillcolor=aquamarine,
		label="1226:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1226:IF" -> "1226:SS"	 [cond="['token_valid']",
		label="(token_valid === 1'bx)",
		lineno=1226];
	"1256:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1e0fd0>",
		fillcolor=cadetblue,
		label="1256:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1e0fd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1256:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1199:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e188050>",
		fillcolor=lightcyan,
		label="1199:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1200:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1880d0>",
		fillcolor=turquoise,
		label="1200:BL
rx_ack_to_clr_d = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e188550>]",
		style=filled,
		typ=Block];
	"1199:CA" -> "1200:BL"	 [cond="[]",
		lineno=None];
	"1277:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1887d0>",
		fillcolor=springgreen,
		label="1277:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1277:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e188810>",
		fillcolor=aquamarine,
		label="1277:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1277:IF" -> "1277:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=1277];
	"1174:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1ea610>",
		fillcolor=springgreen,
		label="1174:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1181:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1ea650>",
		fillcolor=springgreen,
		label="1181:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1174:IF" -> "1181:IF"	 [cond="['IN_ep', 'CTRL_ep', 'pid_IN']",
		label="!((IN_ep || CTRL_ep && pid_IN))",
		lineno=1174];
	"1175:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1eab10>",
		fillcolor=turquoise,
		label="1175:BL
tx_dma_en = 1'b1;
next_state = IN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1eadd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1eaf10>]",
		style=filled,
		typ=Block];
	"1174:IF" -> "1175:BL"	 [cond="['IN_ep', 'CTRL_ep', 'pid_IN']",
		label="(IN_ep || CTRL_ep && pid_IN)",
		lineno=1174];
	"1139:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1889d0>",
		fillcolor=springgreen,
		label="1139:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1139:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e188a10>",
		fillcolor=aquamarine,
		label="1139:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1139:IF" -> "1139:SS"	 [cond="['pid_SETUP']",
		label="(pid_SETUP === 1'bx)",
		lineno=1139];
	"1190:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e188d10>",
		fillcolor=turquoise,
		label="1190:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e188bd0>]",
		style=filled,
		typ=Block];
	"1190:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1291:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e188d90>",
		fillcolor=springgreen,
		label="1291:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1291:IF" -> "1291:SS"	 [cond="['to_small']",
		label="(to_small === 1'bx)",
		lineno=1291];
	"1129:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e188e90>",
		fillcolor=springgreen,
		label="1129:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1129:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e188ed0>",
		fillcolor=aquamarine,
		label="1129:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1129:IF" -> "1129:SS"	 [cond="['match_r']",
		label="(match_r === 1'bx)",
		lineno=1129];
	"1258:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1e0950>",
		fillcolor=springgreen,
		label="1258:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1259:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1e0990>",
		fillcolor=turquoise,
		label="1259:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1258:IF" -> "1259:BL"	 [cond="['rx_data_done']",
		label=rx_data_done,
		lineno=1258];
	"1260:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1e09d0>",
		fillcolor=springgreen,
		label="1260:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1261:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1e0b50>",
		fillcolor=turquoise,
		label="1261:BL
next_state = UPDATEW;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1e0d90>]",
		style=filled,
		typ=Block];
	"1260:IF" -> "1261:BL"	 [cond="['txfr_iso']",
		label=txfr_iso,
		lineno=1260];
	"1265:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1e0a10>",
		fillcolor=cadetblue,
		label="1265:BS
next_state = OUT2A;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1e0a10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1260:IF" -> "1265:BS"	 [cond="['txfr_iso']",
		label="!(txfr_iso)",
		lineno=1260];
	"1211:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1886d0>",
		fillcolor=springgreen,
		label="1211:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1200:BL" -> "1211:IF"	 [cond="[]",
		lineno=None];
	"1206:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e188110>",
		fillcolor=springgreen,
		label="1206:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1200:BL" -> "1206:IF"	 [cond="[]",
		lineno=None];
	"1207:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e188350>",
		fillcolor=springgreen,
		label="1207:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1200:BL" -> "1207:IF"	 [cond="[]",
		lineno=None];
	"1290:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1920d0>",
		fillcolor=aquamarine,
		label="1290:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1290:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1131:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1921d0>",
		fillcolor=aquamarine,
		label="1131:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1131:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1281:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1922d0>",
		fillcolor=cadetblue,
		label="1281:BS
next_state = OUT2B;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1922d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1281:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1214:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1d7990>",
		fillcolor=cadetblue,
		label="1214:BS
next_state = IN2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1d7990>]",
		style=filled,
		typ=BlockingSubstitution];
	"1214:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1133:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e192410>",
		fillcolor=springgreen,
		label="1133:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1133:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e192450>",
		fillcolor=aquamarine,
		label="1133:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1133:IF" -> "1133:SS"	 [cond="['buf0_na']",
		label="(buf0_na === 1'bx)",
		lineno=1133];
	"1251:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1e0550>",
		fillcolor=aquamarine,
		label="1251:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1251:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1337:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e13afd0>",
		fillcolor=aquamarine,
		label="1337:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1337:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1150:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e131890>",
		fillcolor=springgreen,
		label="1150:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1150:IF" -> "1157:IF"	 [cond="['ep_stall']",
		label="!(ep_stall)",
		lineno=1150];
	"1151:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1318d0>",
		fillcolor=turquoise,
		label="1151:BL
token_pid_sel_d = STALL;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e131910>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e131ad0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e131c50>]",
		style=filled,
		typ=Block];
	"1150:IF" -> "1151:BL"	 [cond="['ep_stall']",
		label=ep_stall,
		lineno=1150];
	"1355:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1928d0>",
		fillcolor=turquoise,
		label="1355:BL
uc_stat_set_d = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e192610>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e192790>]",
		style=filled,
		typ=Block];
	"1355:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1240:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e192910>",
		fillcolor=lightcyan,
		label="1240:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1240:CA" -> "1241:BL"	 [cond="[]",
		lineno=None];
	"1176:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1eab50>",
		fillcolor=springgreen,
		label="1176:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1176:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1eab90>",
		fillcolor=cadetblue,
		label="1176:BS
send_zero_length = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1eab90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1176:IF" -> "1176:BS"	 [cond="['max_pl_sz']",
		label="(max_pl_sz == 11'h0)",
		lineno=1176];
	"1250:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1e0310>",
		fillcolor=aquamarine,
		label="1250:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1250:IF" -> "1250:SS"	 [cond="['rx_data_done']",
		label="(rx_data_done === 1'bx)",
		lineno=1250];
	"1127:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1929d0>",
		fillcolor=springgreen,
		label="1127:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1128:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e192a10>",
		fillcolor=turquoise,
		label="1128:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1127:IF" -> "1128:BL"	 [cond="['rst', 'match_r', 'ep_disabled', 'pid_SOF']",
		label="(rst && match_r && !ep_disabled && !pid_SOF)",
		lineno=1127];
	"1293:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e19ded0>",
		fillcolor=springgreen,
		label="1293:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1293:IF" -> "1293:SS"	 [cond="['pid_seq_err']",
		label="(pid_seq_err === 1'bx)",
		lineno=1293];
	"1344:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e19dfd0>",
		fillcolor=springgreen,
		label="1344:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1345:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1a8210>",
		fillcolor=turquoise,
		label="1345:BL
buf0_rl_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8250>]",
		style=filled,
		typ=Block];
	"1344:IF" -> "1345:BL"	 [cond="['buffer_done', 'dma_en']",
		label="(buffer_done && dma_en)",
		lineno=1344];
	"1349:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1a8050>",
		fillcolor=turquoise,
		label="1349:BL
buf_set_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8090>]",
		style=filled,
		typ=Block];
	"1344:IF" -> "1349:BL"	 [cond="['buffer_done', 'dma_en']",
		label="!((buffer_done && dma_en))",
		lineno=1344];
	"1167:IF" -> "1174:IF"	 [cond="['pid_PING', 'mode_hs']",
		label="!((pid_PING && mode_hs))",
		lineno=1167];
	"1168:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1741d0>",
		fillcolor=turquoise,
		label="1168:BL
token_pid_sel_d = ACK;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e174210>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e174390>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e174510>]",
		style=filled,
		typ=Block];
	"1167:IF" -> "1168:BL"	 [cond="['pid_PING', 'mode_hs']",
		label="(pid_PING && mode_hs)",
		lineno=1167];
	"1099:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fae5e143750>",
		clk_sens=False,
		fillcolor=gold,
		label="1099:AL",
		sens="['state', 'ep_stall', 'buf0_na', 'buf1_na', 'pid_seq_err', 'idma_done', 'token_valid', 'pid_ACK', 'rx_data_done', 'tx_data_to', '\
crc16_err', 'ep_disabled', 'no_bufs', 'mode_hs', 'dma_en', 'rx_ack_to', 'pid_PING', 'txfr_iso', 'to_small', 'to_large', 'CTRL_ep', '\
pid_IN', 'pid_OUT', 'IN_ep', 'OUT_ep', 'pid_SETUP', 'pid_SOF', 'match_r', 'abort', 'buffer_done', 'no_buf0_dma', 'max_pl_sz']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SOF', 'dma_en', 'tx_data_to', 'pid_OUT', 'pid_PING', 'abort', 'pid_IN', 'pid_seq_err', 'no_bufs', 'rx_ack_to', 'ep_disabled', '\
crc16_err', 'state', 'ep_stall', 'CTRL_ep', 'to_small', 'rx_data_done', 'idma_done', 'to_large', 'mode_hs', 'buf0_na', 'rst', 'OUT_\
ep', 'buf1_na', 'pid_ACK', 'no_buf0_dma', 'max_pl_sz', 'token_valid', 'buffer_done', 'txfr_iso', 'pid_SETUP', 'IN_ep', 'match_r']"];
	"1105:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e131690>",
		fillcolor=turquoise,
		label="1105:BL
next_state = state;
token_pid_sel_d = ACK;
send_token_d = 1'b0;
rx_dma_en = 1'b0;
tx_dma_en = 1'b0;
buf_set_d = 1'b0;
uc_\
stat_set_d = 1'b0;
buf0_rl_d = 1'b0;
int_set_en = 1'b0;
rx_ack_to_clr_d = 1'b1;
int_seqerr_set_d = 1'b0;
send_zero_length = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a85d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8710>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8a10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8b50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8c90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8dd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8f50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1310d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e131210>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e131390>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e131510>]",
		style=filled,
		typ=Block];
	"1099:AL" -> "1105:BL"	 [cond="[]",
		lineno=None];
	"1176:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1140:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e19d8d0>",
		fillcolor=aquamarine,
		label="1140:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1140:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1119:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fae5e1316d0>",
		fillcolor=linen,
		label="1119:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1105:BL" -> "1119:CS"	 [cond="[]",
		lineno=None];
	"1262:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1e0b90>",
		fillcolor=springgreen,
		label="1262:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1262:IF" -> "1262:BS"	 [cond="['pid_seq_err']",
		label=pid_seq_err,
		lineno=1262];
	"1149:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e131850>",
		fillcolor=turquoise,
		label="1149:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1149:BL" -> "1150:IF"	 [cond="[]",
		lineno=None];
	"1259:BL" -> "1260:IF"	 [cond="[]",
		lineno=None];
	"1307:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1338:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e143210>",
		fillcolor=springgreen,
		label="1338:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1338:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e143250>",
		fillcolor=aquamarine,
		label="1338:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1338:IF" -> "1338:SS"	 [cond="['dma_en']",
		label="(dma_en === 1'bx)",
		lineno=1338];
	"1189:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e131fd0>",
		fillcolor=lightcyan,
		label="1189:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1189:CA" -> "1190:BL"	 [cond="[]",
		lineno=None];
	"1135:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e19d090>",
		fillcolor=springgreen,
		label="1135:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1135:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e19d0d0>",
		fillcolor=aquamarine,
		label="1135:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1135:IF" -> "1135:SS"	 [cond="['no_buf0_dma']",
		label="(no_buf0_dma === 1'bx)",
		lineno=1135];
	"1354:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e143690>",
		fillcolor=lightcyan,
		label="1354:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1354:CA" -> "1355:BL"	 [cond="[]",
		lineno=None];
	"1269:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e13a190>",
		fillcolor=lightcyan,
		label="1269:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1270:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e13a210>",
		fillcolor=turquoise,
		label="1270:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1269:CA" -> "1270:BL"	 [cond="[]",
		lineno=None];
	"1315:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1cad90>",
		fillcolor=cadetblue,
		label="1315:BS
token_pid_sel_d = ACK;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1cad90>]",
		style=filled,
		typ=BlockingSubstitution];
	"1315:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1270:BL" -> "1277:IF"	 [cond="[]",
		lineno=None];
	"1280:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e13a250>",
		fillcolor=springgreen,
		label="1280:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1270:BL" -> "1280:IF"	 [cond="[]",
		lineno=None];
	"1142:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e19dad0>",
		fillcolor=aquamarine,
		label="1142:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1142:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1248:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1d7ed0>",
		fillcolor=aquamarine,
		label="1248:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1248:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1211:IF" -> "1212:BL"	 [cond="['idma_done']",
		label=idma_done,
		lineno=1211];
	"1314:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e1cad50>",
		fillcolor=springgreen,
		label="1314:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1313:BL" -> "1314:IF"	 [cond="[]",
		lineno=None];
	"1139:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1130:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e192a90>",
		fillcolor=aquamarine,
		label="1130:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1130:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1132:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e192d50>",
		fillcolor=springgreen,
		label="1132:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1132:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e192d90>",
		fillcolor=aquamarine,
		label="1132:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1132:IF" -> "1132:SS"	 [cond="['ep_stall']",
		label="(ep_stall === 1'bx)",
		lineno=1132];
	"1206:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e188150>",
		fillcolor=aquamarine,
		label="1206:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1206:IF" -> "1206:SS"	 [cond="['idma_done']",
		label="(idma_done === 1'bx)",
		lineno=1206];
	"1331:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e13af50>",
		fillcolor=turquoise,
		label="1331:BL
int_set_en = 1'b1;
next_state = UPDATE2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e143410>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e143550>]",
		style=filled,
		typ=Block];
	"1331:BL" -> "1344:IF"	 [cond="[]",
		lineno=None];
	"1331:BL" -> "1338:IF"	 [cond="[]",
		lineno=None];
	"1337:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e13af90>",
		fillcolor=springgreen,
		label="1337:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1331:BL" -> "1337:IF"	 [cond="[]",
		lineno=None];
	"1249:IF" -> "1249:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=1249];
	"1182:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1ea690>",
		fillcolor=turquoise,
		label="1182:BL
rx_dma_en = 1'b1;
next_state = OUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1ea6d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1ea810>]",
		style=filled,
		typ=Block];
	"1181:IF" -> "1182:BL"	 [cond="['OUT_ep', 'CTRL_ep', 'pid_OUT', 'pid_SETUP']",
		label="(OUT_ep || CTRL_ep && (pid_OUT || pid_SETUP))",
		lineno=1181];
	"1120:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e131750>",
		fillcolor=lightcyan,
		label="1120:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1121:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e1317d0>",
		fillcolor=turquoise,
		label="1121:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1120:CA" -> "1121:BL"	 [cond="[]",
		lineno=None];
	"1255:IF" -> "1256:BS"	 [cond="['tx_data_to', 'crc16_err', 'abort']",
		label="(tx_data_to || crc16_err || abort)",
		lineno=1255];
	"1255:IF" -> "1258:IF"	 [cond="['tx_data_to', 'crc16_err', 'abort']",
		label="!((tx_data_to || crc16_err || abort))",
		lineno=1255];
	"1277:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1232:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1292:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1338:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1213:IF" -> "1214:BS"	 [cond="['txfr_iso']",
		label="!(txfr_iso)",
		lineno=1213];
	"1213:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1d7ad0>",
		fillcolor=cadetblue,
		label="1213:BS
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1d7ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1213:IF" -> "1213:BS"	 [cond="['txfr_iso']",
		label=txfr_iso,
		lineno=1213];
	"1136:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e19d2d0>",
		fillcolor=aquamarine,
		label="1136:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1136:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1182:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1298:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e13a910>",
		fillcolor=springgreen,
		label="1298:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1298:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e13ad50>",
		fillcolor=cadetblue,
		label="1298:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e13ad50>]",
		style=filled,
		typ=BlockingSubstitution];
	"1298:IF" -> "1298:BS"	 [cond="['abort']",
		label=abort,
		lineno=1298];
	"1300:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e13a950>",
		fillcolor=springgreen,
		label="1300:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1298:IF" -> "1300:IF"	 [cond="['abort']",
		label="!(abort)",
		lineno=1298];
	"1225:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e17e4d0>",
		fillcolor=aquamarine,
		label="1225:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1225:IF" -> "1225:SS"	 [cond="['rx_ack_to']",
		label="(rx_ack_to === 1'bx)",
		lineno=1225];
	"1252:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e1e0750>",
		fillcolor=aquamarine,
		label="1252:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1252:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1206:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1261:BL" -> "1262:IF"	 [cond="[]",
		lineno=None];
	"1161:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1175:BL" -> "1176:IF"	 [cond="[]",
		lineno=None];
	"1168:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1226:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1140:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e19d890>",
		fillcolor=springgreen,
		label="1140:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1140:IF" -> "1140:SS"	 [cond="['pid_PING']",
		label="(pid_PING === 1'bx)",
		lineno=1140];
	"1142:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e19da90>",
		fillcolor=springgreen,
		label="1142:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1142:IF" -> "1142:SS"	 [cond="['IN_ep']",
		label="(IN_ep === 1'bx)",
		lineno=1142];
	"1143:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e17ef10>",
		fillcolor=springgreen,
		label="1143:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1143:IF" -> "1143:SS"	 [cond="['OUT_ep']",
		label="(OUT_ep === 1'bx)",
		lineno=1143];
	"1280:IF" -> "1281:BS"	 [cond="['abort']",
		label="!(abort)",
		lineno=1280];
	"1280:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8490>",
		fillcolor=cadetblue,
		label="1280:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e1a8490>]",
		style=filled,
		typ=BlockingSubstitution];
	"1280:IF" -> "1280:BS"	 [cond="['abort']",
		label=abort,
		lineno=1280];
	"1134:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e192f50>",
		fillcolor=springgreen,
		label="1134:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1134:IF" -> "1134:SS"	 [cond="['buf1_na']",
		label="(buf1_na === 1'bx)",
		lineno=1134];
	"1298:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1248:IF" -> "1248:SS"	 [cond="['crc16_err']",
		label="(crc16_err === 1'bx)",
		lineno=1248];
	"1138:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e19d690>",
		fillcolor=springgreen,
		label="1138:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1138:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e19d6d0>",
		fillcolor=aquamarine,
		label="1138:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1138:IF" -> "1138:SS"	 [cond="['pid_OUT']",
		label="(pid_OUT === 1'bx)",
		lineno=1138];
	"1141:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1247:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1280:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1294:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e13a510>",
		fillcolor=springgreen,
		label="1294:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1294:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e13a550>",
		fillcolor=aquamarine,
		label="1294:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1294:IF" -> "1294:SS"	 [cond="['mode_hs']",
		label="(mode_hs === 1'bx)",
		lineno=1294];
	"1330:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e13aed0>",
		fillcolor=lightcyan,
		label="1330:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1330:CA" -> "1331:BL"	 [cond="[]",
		lineno=None];
	"1151:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1148:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e131810>",
		fillcolor=springgreen,
		label="1148:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1148:IF" -> "1149:BL"	 [cond="['match_r', 'ep_disabled', 'pid_SOF']",
		label="(match_r && !ep_disabled && !pid_SOF)",
		lineno=1148];
	"1251:IF" -> "1251:SS"	 [cond="['txfr_iso']",
		label="(txfr_iso === 1'bx)",
		lineno=1251];
	"1345:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1295:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e13a710>",
		fillcolor=springgreen,
		label="1295:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1295:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e13a750>",
		fillcolor=aquamarine,
		label="1295:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1295:IF" -> "1295:SS"	 [cond="['no_bufs']",
		label="(no_bufs === 1'bx)",
		lineno=1295];
	"1284:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e13a390>",
		fillcolor=turquoise,
		label="1284:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1284:BL" -> "1292:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1291:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1293:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1298:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1294:IF"	 [cond="[]",
		lineno=None];
	"1284:BL" -> "1295:IF"	 [cond="[]",
		lineno=None];
	"1290:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e13a3d0>",
		fillcolor=springgreen,
		label="1290:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1284:BL" -> "1290:IF"	 [cond="[]",
		lineno=None];
	"1235:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fae5e17eb10>",
		fillcolor=turquoise,
		label="1235:BL
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fae5e17eb50>]",
		style=filled,
		typ=Block];
	"1234:IF" -> "1235:BL"	 [cond="['token_valid', 'pid_ACK']",
		label="(token_valid && pid_ACK)",
		lineno=1234];
	"1295:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1322:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1138:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1250:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1283:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e13a310>",
		fillcolor=lightcyan,
		label="1283:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1283:CA" -> "1284:BL"	 [cond="[]",
		lineno=None];
	"1225:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1132:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1349:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1218:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7fae5e13a0d0>",
		fillcolor=lightcyan,
		label="1218:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1218:CA" -> "1219:BL"	 [cond="[]",
		lineno=None];
	"1252:IF" -> "1252:SS"	 [cond="['pid_seq_err']",
		label="(pid_seq_err === 1'bx)",
		lineno=1252];
	"1130:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e192a50>",
		fillcolor=springgreen,
		label="1130:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1130:IF" -> "1130:SS"	 [cond="['ep_disabled']",
		label="(ep_disabled === 1'bx)",
		lineno=1130];
	"1337:IF" -> "1337:SS"	 [cond="['buffer_done']",
		label="(buffer_done === 1'bx)",
		lineno=1337];
	"1119:CS" -> "1321:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1119:CS" -> "1199:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1119:CS" -> "1240:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1119:CS" -> "1189:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1119:CS" -> "1354:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1119:CS" -> "1269:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1119:CS" -> "1120:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1119:CS" -> "1330:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1119:CS" -> "1283:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1119:CS" -> "1218:CA"	 [cond="['state']",
		label=state,
		lineno=1119];
	"1129:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1121:BL" -> "1127:IF"	 [cond="[]",
		lineno=None];
	"1121:BL" -> "1148:IF"	 [cond="[]",
		lineno=None];
	"1207:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e188390>",
		fillcolor=aquamarine,
		label="1207:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1207:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1137:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7fae5e19d4d0>",
		fillcolor=aquamarine,
		label="1137:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"1137:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1227:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1137:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e19d490>",
		fillcolor=springgreen,
		label="1137:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1137:IF" -> "1137:SS"	 [cond="['pid_IN']",
		label="(pid_IN === 1'bx)",
		lineno=1137];
	"1314:IF" -> "1314:BS"	 [cond="['mode_hs', 'no_bufs']",
		label="(mode_hs && no_bufs)",
		lineno=1314];
	"1314:IF" -> "1315:BS"	 [cond="['mode_hs', 'no_bufs']",
		label="!((mode_hs && no_bufs))",
		lineno=1314];
	"1133:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1294:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1290:IF" -> "1290:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=1290];
	"1300:IF" -> "1306:IF"	 [cond="['to_small', 'to_large']",
		label="!((to_small || to_large))",
		lineno=1300];
	"1300:IF" -> "1301:BL"	 [cond="['to_small', 'to_large']",
		label="(to_small || to_large)",
		lineno=1300];
	"1235:BL" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1265:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1135:SS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1207:IF" -> "1207:SS"	 [cond="['txfr_iso']",
		label="(txfr_iso === 1'bx)",
		lineno=1207];
	"1128:BL" -> "1141:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1139:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1129:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1133:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1135:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1132:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1140:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1142:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1143:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1134:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1138:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1130:IF"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "1137:IF"	 [cond="[]",
		lineno=None];
	"1131:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e192c50>",
		fillcolor=springgreen,
		label="1131:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1128:BL" -> "1131:IF"	 [cond="[]",
		lineno=None];
	"1136:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fae5e19d290>",
		fillcolor=springgreen,
		label="1136:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1128:BL" -> "1136:IF"	 [cond="[]",
		lineno=None];
	"1213:BS" -> "Leaf_1099:AL"	 [cond="[]",
		lineno=None];
	"1131:IF" -> "1131:SS"	 [cond="['pid_SOF']",
		label="(pid_SOF === 1'bx)",
		lineno=1131];
	"1136:IF" -> "1136:SS"	 [cond="['CTRL_ep']",
		label="(CTRL_ep === 1'bx)",
		lineno=1136];
}
