strict digraph "" {
	node [label="\N"];
	"1128:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2e132e96d0>",
		fillcolor=springgreen,
		label="1128:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1128:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e132e9190>",
		fillcolor=turquoise,
		label="1128:BL
vlan_enabled_int <= TX_CFG_REG_VALUE[27];
jumbo_enabled_int <= TX_CFG_REG_VALUE[30];
tx_enabled_int <= TX_CFG_REG_VALUE[\
28];
fcs_enabled_int <= TX_CFG_REG_VALUE[29];
reset_tx_int <= TX_CFG_REG_VALUE[31];
read_ifg_int <= TX_CFG_REG_VALUE[25];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e132e9dd0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f2e12ff0190>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12ff03d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f2e12ff0610>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12ff0850>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f2e12ff0a90>]",
		style=filled,
		typ=Block];
	"1128:IF" -> "1128:BL"	 [cond="['TX_CFG_REG_VALID']",
		label=TX_CFG_REG_VALID,
		lineno=1128];
	"1120:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12ff1690>",
		fillcolor=turquoise,
		label="1120:BL
vlan_enabled_int <= 0;
jumbo_enabled_int <= 0;
tx_enabled_int <= 0;
fcs_enabled_int <= 1;
reset_tx_int <= 0;
read_ifg_int <= \
0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12ff0d50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f2e12ff0ed0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12ff10d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f2e12ff1210>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12ff13d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f2e12ff1510>]",
		style=filled,
		typ=Block];
	"Leaf_1118:AL"	 [def_var="['tx_enabled_int', 'jumbo_enabled_int', 'vlan_enabled_int', 'reset_tx_int', 'fcs_enabled_int', 'read_ifg_int']",
		label="Leaf_1118:AL"];
	"1120:BL" -> "Leaf_1118:AL"	 [cond="[]",
		lineno=None];
	"1128:BL" -> "Leaf_1118:AL"	 [cond="[]",
		lineno=None];
	"1119:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12ff1750>",
		fillcolor=turquoise,
		label="1119:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1120:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2e12ff1710>",
		fillcolor=springgreen,
		label="1120:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1119:BL" -> "1120:IF"	 [cond="[]",
		lineno=None];
	"1120:IF" -> "1128:IF"	 [cond="['reset_int']",
		label="!(reset_int)",
		lineno=1120];
	"1120:IF" -> "1120:BL"	 [cond="['reset_int']",
		label=reset_int,
		lineno=1120];
	"1118:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2e12ff17d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1118:AL",
		sens="['TX_CLK', 'reset_int']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset_int', 'TX_CFG_REG_VALUE', 'TX_CFG_REG_VALID']"];
	"1118:AL" -> "1119:BL"	 [cond="[]",
		lineno=None];
}
