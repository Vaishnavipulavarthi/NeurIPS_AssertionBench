strict digraph "" {
	node [label="\N"];
	"1212:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2e12faf050>",
		fillcolor=springgreen,
		label="1212:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1212:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12fb03d0>",
		fillcolor=turquoise,
		label="1212:BL
insert_error <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12fb0410>]",
		style=filled,
		typ=Block];
	"1212:IF" -> "1212:BL"	 [cond="['append_end_frame', 'reset_err_pause']",
		label="(append_end_frame | reset_err_pause)",
		lineno=1212];
	"1215:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2e12faf090>",
		fillcolor=springgreen,
		label="1215:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1212:IF" -> "1215:IF"	 [cond="['append_end_frame', 'reset_err_pause']",
		label="!((append_end_frame | reset_err_pause))",
		lineno=1212];
	"1228:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2e12faf1d0>",
		fillcolor=springgreen,
		label="1228:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1236:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12faf210>",
		fillcolor=turquoise,
		label="1236:BL
insert_error <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12faf250>]",
		style=filled,
		typ=Block];
	"1228:IF" -> "1236:BL"	 [cond="['length_register', 'MIN_FRAME_SIZE']",
		label="!((length_register < MIN_FRAME_SIZE))",
		lineno=1228];
	"1228:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12faf3d0>",
		fillcolor=turquoise,
		label="1228:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1228:IF" -> "1228:BL"	 [cond="['length_register', 'MIN_FRAME_SIZE']",
		label="(length_register < MIN_FRAME_SIZE)",
		lineno=1228];
	"1209:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12fb0890>",
		fillcolor=turquoise,
		label="1209:BL
insert_error <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12fb0710>]",
		style=filled,
		typ=Block];
	"Leaf_1207:AL"	 [def_var="['insert_error']",
		label="Leaf_1207:AL"];
	"1209:BL" -> "Leaf_1207:AL"	 [cond="[]",
		lineno=None];
	"1220:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12fafa10>",
		fillcolor=turquoise,
		label="1220:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1221:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2e12fafa50>",
		fillcolor=springgreen,
		label="1221:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1220:BL" -> "1221:IF"	 [cond="[]",
		lineno=None];
	"1236:BL" -> "Leaf_1207:AL"	 [cond="[]",
		lineno=None];
	"1221:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12fafc50>",
		fillcolor=turquoise,
		label="1221:BL
insert_error <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12fafc90>]",
		style=filled,
		typ=Block];
	"1221:BL" -> "Leaf_1207:AL"	 [cond="[]",
		lineno=None];
	"1212:BL" -> "Leaf_1207:AL"	 [cond="[]",
		lineno=None];
	"1208:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12fb0910>",
		fillcolor=turquoise,
		label="1208:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1209:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2e12fb0950>",
		fillcolor=springgreen,
		label="1209:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1208:BL" -> "1209:IF"	 [cond="[]",
		lineno=None];
	"1220:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2e12faf190>",
		fillcolor=springgreen,
		label="1220:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1220:IF" -> "1228:IF"	 [cond="['length_register', 'final_byte_count']",
		label="!((length_register == final_byte_count))",
		lineno=1220];
	"1220:IF" -> "1220:BL"	 [cond="['length_register', 'final_byte_count']",
		label="(length_register == final_byte_count)",
		lineno=1220];
	"1229:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2e12faf410>",
		fillcolor=springgreen,
		label="1229:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1228:BL" -> "1229:IF"	 [cond="[]",
		lineno=None];
	"1209:IF" -> "1212:IF"	 [cond="['reset_int']",
		label="!(reset_int)",
		lineno=1209];
	"1209:IF" -> "1209:BL"	 [cond="['reset_int']",
		label=reset_int,
		lineno=1209];
	"1229:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12faf610>",
		fillcolor=turquoise,
		label="1229:BL
insert_error <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12faf650>]",
		style=filled,
		typ=Block];
	"1229:BL" -> "Leaf_1207:AL"	 [cond="[]",
		lineno=None];
	"1216:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12fb00d0>",
		fillcolor=turquoise,
		label="1216:BL
insert_error <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12fb0110>]",
		style=filled,
		typ=Block];
	"1216:BL" -> "Leaf_1207:AL"	 [cond="[]",
		lineno=None];
	"1207:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2e12fb0a50>",
		clk_sens=True,
		fillcolor=gold,
		label="1207:AL",
		sens="['TX_CLK', 'reset_int']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['length_register', 'reset_err_pause', 'MAX_FRAME_SIZE', 'append_end_frame', 'reset_int', 'load_CRC8', 'final_byte_count', 'MIN_\
FRAME_SIZE', 'tx_undderrun_int']"];
	"1207:AL" -> "1208:BL"	 [cond="[]",
		lineno=None];
	"1215:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12faf0d0>",
		fillcolor=turquoise,
		label="1215:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1216:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2e12faf110>",
		fillcolor=springgreen,
		label="1216:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1215:BL" -> "1216:IF"	 [cond="[]",
		lineno=None];
	"1219:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12faf150>",
		fillcolor=turquoise,
		label="1219:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1219:BL" -> "1220:IF"	 [cond="[]",
		lineno=None];
	"1224:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12fafa90>",
		fillcolor=turquoise,
		label="1224:BL
insert_error <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12fafad0>]",
		style=filled,
		typ=Block];
	"1224:BL" -> "Leaf_1207:AL"	 [cond="[]",
		lineno=None];
	"1232:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2e12faf450>",
		fillcolor=turquoise,
		label="1232:BL
insert_error <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2e12faf490>]",
		style=filled,
		typ=Block];
	"1232:BL" -> "Leaf_1207:AL"	 [cond="[]",
		lineno=None];
	"1229:IF" -> "1229:BL"	 [cond="['final_byte_count']",
		label="(final_byte_count == 64)",
		lineno=1229];
	"1229:IF" -> "1232:BL"	 [cond="['final_byte_count']",
		label="!((final_byte_count == 64))",
		lineno=1229];
	"1215:IF" -> "1215:BL"	 [cond="['load_CRC8']",
		label=load_CRC8,
		lineno=1215];
	"1216:IF" -> "1216:BL"	 [cond="['tx_undderrun_int']",
		label="(tx_undderrun_int == 1)",
		lineno=1216];
	"1216:IF" -> "1219:BL"	 [cond="['tx_undderrun_int']",
		label="!((tx_undderrun_int == 1))",
		lineno=1216];
	"1221:IF" -> "1221:BL"	 [cond="['final_byte_count', 'MAX_FRAME_SIZE']",
		label="(final_byte_count <= MAX_FRAME_SIZE)",
		lineno=1221];
	"1221:IF" -> "1224:BL"	 [cond="['final_byte_count', 'MAX_FRAME_SIZE']",
		label="!((final_byte_count <= MAX_FRAME_SIZE))",
		lineno=1221];
}
