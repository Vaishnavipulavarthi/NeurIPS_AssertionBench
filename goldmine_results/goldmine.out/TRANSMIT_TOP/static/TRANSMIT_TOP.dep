RESET	reset_int
insert_error	OVERFLOW_DATA
insert_error	txstatplus_int
insert_error	TX_DATA_DEL14
frame_start_del	U_byte_count_module.START
frame_start_del	load_CRC8
frame_start_del	U_CRC64.START
append_end_frame	TX_DATA_VALID_DEL14
append_end_frame	insert_error
append_end_frame	TX_DATA_DEL14
append_end_frame	TX_STATS_VALID
append_end_frame	set_pause_stats
append_end_frame	tx_undderrun_int
shift_pause_data	TX_DATA_REG
TX_DATA_REG	length_register
TX_DATA_REG	TX_DATA_DEL1
TX_DATA_REG	U_CRC64.DATA_IN
U_ACK_CNT.counter	U_ACK_CNT.start_count
U_ACK_CNT.counter	U_ACK_CNT.counter
FRAME_START	shift_pause_valid
FRAME_START	U_byte_count_module.START
FRAME_START	frame_start_del
FRAME_START	pause_frame_counter
FRAME_START	TX_DATA_VALID_REG
FRAME_START	TX_DATA_REG
FRAME_START	load_CRC8
FRAME_START	shift_pause_data
FRAME_START	U_ACK_CNT.ready
FRAME_START	shift_pause_valid_del
U_ACK_CNT.ready	U_ACK_CNT.start_count
PAUSEVAL_DEL	PAUSEVAL_DEL1
read_ifg_int	DELAY_ACK
TX_DATA_DEL7	TX_DATA_DEL8
TX_DATA_DEL6	TX_DATA_DEL7
TX_DATA_DEL5	TX_DATA_DEL6
FC_TX_PAUSEVALID	apply_pause_delay
FC_TX_PAUSEVALID	store_pause_frame
TX_DATA_DEL3	TX_DATA_DEL4
U_CRC8.CRC_OUT	CRC_OUT
U_CRC8.CRC_OUT	U_CRC8.CRC_OUT
TX_DATA_DEL1	TX_DATA_DEL2
TX_ACK	U_byte_count_module.RESET
TX_ACK	U_CRC64.RESET
TX_ACK	TX_DATA_REG
TX_ACK	FRAME_START
TX_ACK	apply_pause_delay
TX_ACK	store_pause_frame
append_reg	load_final_CRC
append_reg	append_reg
TX_DATA_DEL9	TX_DATA_DEL10
TX_DATA_DEL8	TX_DATA_DEL9
U_CRC8.RESET	U_CRC8.CRC_OUT
TX_CFG_REG_VALID	tx_enabled_int
TX_CFG_REG_VALID	jumbo_enabled_int
TX_CFG_REG_VALID	vlan_enabled_int
TX_CFG_REG_VALID	reset_tx_int
TX_CFG_REG_VALID	fcs_enabled_int
TX_CFG_REG_VALID	read_ifg_int
TX_DATA	TX_DATA_VALID_DELAY
PAUSE_FRAME_LENGTH	TXD_PAUSE_DEL2
PAUSEVAL_DEL2	set_pause_stats
PAUSEVAL_DEL2	transmit_pause_frame
PAUSEVAL_DEL1	PAUSEVAL_DEL2
U_CRC64.startCRC	U_CRC64.CRC_OUT
TX_DATA_VALID_DEL10	TX_DATA_VALID_DEL11
MAX_FRAME_SIZE	insert_error
OVERFLOW_DATA	TX_DATA_DEL14
TX_UNDERRUN	tx_undderrun_int
tx_data_int	U_CRC8.DATA_IN
U_CRC64.data_del	U_CRC64.CRC_OUT
TX_DATA_VALID_DEL5	TX_DATA_VALID_DEL6
U_ACK_CNT.tx_start	U_ACK_CNT.start_count
vlan_enabled_int	MAX_FRAME_SIZE
vlan_enabled_int	length_register
vlan_enabled_int	txstatplus_int
set_pause_stats	txstatplus_int
U_CRC8.DATA_IN	U_CRC8.data_int
TX_DATA_VALID_DEL3	TX_DATA_VALID_DEL4
reset_int	insert_error
reset_int	frame_start_del
reset_int	append_end_frame
reset_int	shift_pause_data
reset_int	TX_DATA_REG
reset_int	set_pause_stats
reset_int	FRAME_START
reset_int	read_ifg_int
reset_int	TX_DATA_DEL7
reset_int	TX_DATA_DEL6
reset_int	TX_DATA_DEL5
reset_int	TX_DATA_DEL4
reset_int	TX_DATA_DEL3
reset_int	shift_pause_valid
reset_int	TX_DATA_DEL1
reset_int	append_reg
reset_int	TX_DATA_DEL9
reset_int	TX_DATA_DEL8
reset_int	U_CRC8.RESET
reset_int	store_transmit_pause_value
reset_int	MAX_FRAME_SIZE
reset_int	OVERFLOW_DATA
reset_int	tx_data_int
reset_int	store_tx_data_valid
reset_int	vlan_enabled_int
reset_int	TX_DATA_VALID_DEL3
reset_int	apply_pause_delay
reset_int	store_tx_data
reset_int	TX_DATA_DEL13
reset_int	TX_DATA_DEL12
reset_int	TX_DATA_DEL11
reset_int	TX_DATA_DEL10
reset_int	append_start_pause
reset_int	TX_DATA_DEL15
reset_int	TX_DATA_DEL14
reset_int	append_start_pause_del
reset_int	transmit_pause_frame
reset_int	length_register
reset_int	TX_DATA_DEL2
reset_int	txstatplus_int
reset_int	TXC_PAUSE_DEL0
reset_int	TXC_PAUSE_DEL1
reset_int	TXC_PAUSE_DEL2
reset_int	load_final_CRC
reset_int	OVERFLOW_VALID
reset_int	store_pause_frame
reset_int	store_CRC64
reset_int	pause_frame_counter
reset_int	fcs_enabled_int
reset_int	U_ACK_CNT.reset
reset_int	transmit_pause_frame_del2
reset_int	transmit_pause_frame_del3
reset_int	byte_count_reg
reset_int	final_byte_count
reset_int	shift_pause_valid_del
reset_int	TX_DATA_VALID_DEL14
reset_int	TX_DATA_VALID_DEL15
reset_int	TX_DATA_VALID_DEL12
reset_int	TX_DATA_VALID_DEL13
reset_int	TX_DATA_VALID_DEL10
reset_int	TX_DATA_VALID_DEL11
reset_int	reset_err_pause
reset_int	transmit_pause_frame_del
reset_int	tx_undderrun_int
reset_int	jumbo_enabled_int
reset_int	load_CRC8
reset_int	transmit_pause_frame_valid
reset_int	TXD_PAUSE_DEL1
reset_int	TXD_PAUSE_DEL0
reset_int	TXD_PAUSE_DEL2
reset_int	U_byte_count_module.RESET
reset_int	TXD
reset_int	TXC
reset_int	TX_DATA_VALID_REG
reset_int	TX_DATA_VALID_DEL4
reset_int	TX_DATA_VALID_DEL5
reset_int	TX_DATA_VALID_DEL6
reset_int	TX_DATA_VALID_DEL7
reset_int	TX_DATA_VALID_DEL1
reset_int	TX_DATA_VALID_DEL2
reset_int	start_CRC8
reset_int	TX_DATA_VALID_DEL8
reset_int	TX_DATA_VALID_DEL9
reset_int	START_CRC8_DEL
reset_int	DELAY_ACK
reset_int	tx_enabled_int
reset_int	U_CRC64.RESET
reset_int	reset_tx_int
transmit_pause_frame_del2	load_CRC8
transmit_pause_frame_del2	transmit_pause_frame_del3
store_tx_data	tx_data_int
store_tx_data	store_tx_data
TX_DATA_DEL13	TX_DATA_DEL14
TX_DATA_DEL12	TX_DATA_DEL13
TX_DATA_DEL11	TX_DATA_DEL12
TX_DATA_DEL10	TX_DATA_DEL11
append_start_pause	TX_DATA_REG
append_start_pause	append_start_pause_del
append_start_pause	U_CRC64.RESET
U_ACK_CNT.tx_ack	TX_ACK
TX_DATA_DEL15	TXD
TX_DATA_DEL14	TX_DATA_DEL15
CRC_OUT	OVERFLOW_DATA
CRC_OUT	TX_DATA_DEL14
transmit_pause_frame	append_start_pause
transmit_pause_frame	shift_pause_valid
transmit_pause_frame	reset_err_pause
transmit_pause_frame	shift_pause_data
transmit_pause_frame	shift_pause_valid_del
transmit_pause_frame	pause_frame_counter
transmit_pause_frame	byte_count_stat
transmit_pause_frame	U_ACK_CNT.ready
transmit_pause_frame	transmit_pause_frame_valid
transmit_pause_frame	transmit_pause_frame_del
byte_count_reg	final_byte_count
U_CRC8.data_int	U_CRC8.CRC_OUT
U_CRC64.CRC_OUT	CRC_32_64
U_CRC64.CRC_OUT	U_CRC64.CRC_OUT
TX_DATA_DEL2	store_tx_data
TX_DATA_DEL2	TX_DATA_DEL3
TX_DATA_VALID	TX_DATA_VALID_REG
txstatplus_int	TXSTATREGPLUS
load_final_CRC	TX_DATA_VALID_DEL14
load_final_CRC	txstatplus_int
load_final_CRC	TX_DATA_DEL14
load_final_CRC	append_end_frame
load_final_CRC	OVERFLOW_DATA
load_final_CRC	OVERFLOW_VALID
TX_START	TX_DATA_VALID_REG
TX_START	U_ACK_CNT.tx_start
TX_START	TX_DATA_VALID_DELAY
U_CRC8.start_int	U_CRC8.CRC_OUT
OVERFLOW_VALID	TX_DATA_VALID_DEL14
U_CRC8.nextCRC32_D8	U_CRC8.CRC_OUT
store_pause_frame	DELAY_ACK
CRC_32_64	U_CRC8.CRC_IN
CRC_32_64	store_CRC64
pause_frame_counter	transmit_pause_frame
pause_frame_counter	shift_pause_data
pause_frame_counter	pause_frame_counter
pause_frame_counter	shift_pause_valid
fcs_enabled_int	MAX_FRAME_SIZE
fcs_enabled_int	OVERFLOW_VALID
fcs_enabled_int	OVERFLOW_DATA
fcs_enabled_int	TX_DATA_VALID_DEL14
fcs_enabled_int	TX_DATA_DEL14
U_ACK_CNT.reset	U_ACK_CNT.start_count
U_ACK_CNT.reset	U_ACK_CNT.counter
U_ACK_CNT.reset	U_ACK_CNT.tx_ack
U_ACK_CNT.reset	U_ACK_CNT.start_count_del
apply_pause_delay	DELAY_ACK
transmit_pause_frame_del3	load_CRC8
length_register	insert_error
U_ACK_CNT.start_count_del	U_ACK_CNT.tx_ack
U_ACK_CNT.start_count	U_ACK_CNT.counter
U_ACK_CNT.start_count	U_ACK_CNT.tx_ack
U_ACK_CNT.start_count	U_ACK_CNT.start_count_del
jumbo_enabled_int	MAX_FRAME_SIZE
U_CRC64.DATA_IN	U_CRC64.data_del
U_CRC64.START	U_CRC64.startCRC
transmit_pause_frame_del	transmit_pause_frame_valid
transmit_pause_frame_del	TX_DATA_VALID_REG
transmit_pause_frame_del	append_start_pause
transmit_pause_frame_del	transmit_pause_frame_del2
transmit_pause_frame_del	reset_err_pause
FC_TX_PAUSEDATA	store_pause_frame
TX_IFG_DELAY	DELAY_ACK
shift_pause_valid_del	TX_DATA_VALID_REG
TX_DATA_VALID_DEL14	TX_DATA_VALID_DEL15
TX_DATA_VALID_DEL15	TXC
TX_DATA_VALID_DEL12	TX_DATA_VALID_DEL13
TX_DATA_VALID_DEL13	TX_DATA_VALID_DEL14
TX_DATA_VALID_DEL13	OVERFLOW_VALID
TX_DATA_VALID_DEL13	OVERFLOW_DATA
TX_DATA_VALID_DEL13	TX_DATA_DEL14
U_byte_count_module.BYTE_COUNTER	BYTE_COUNTER
TX_DATA_VALID_DEL11	TX_DATA_VALID_DEL12
reset_err_pause	insert_error
U_byte_count_module.START	U_byte_count_module.counter
U_CRC8.LOAD	U_CRC8.CRC_OUT
FC_TRANS_PAUSEDATA	TXD_PAUSE_DEL2
FC_TRANS_PAUSEDATA	store_transmit_pause_value
tx_undderrun_int	insert_error
shift_pause_valid	shift_pause_valid_del
SOURCE_ADDR	TXD_PAUSE_DEL1
U_ACK_CNT.max_count	U_ACK_CNT.start_count
U_ACK_CNT.max_count	U_ACK_CNT.counter
U_CRC8.START	U_CRC8.start_int
MIN_FRAME_SIZE	insert_error
final_byte_count	insert_error
final_byte_count	byte_count_stat
final_byte_count	final_byte_count
final_byte_count	txstatplus_int
U_CRC64.nextCRC32_D64	U_CRC64.CRC_OUT
FC_TRANS_PAUSEVAL	TXD_PAUSE_DEL1
FC_TRANS_PAUSEVAL	TXD_PAUSE_DEL2
FC_TRANS_PAUSEVAL	store_transmit_pause_value
FC_TRANS_PAUSEVAL	TXC_PAUSE_DEL1
FC_TRANS_PAUSEVAL	TXC_PAUSE_DEL2
FC_TRANS_PAUSEVAL	PAUSEVAL_DEL
TX_CFG_REG_VALUE	tx_enabled_int
TX_CFG_REG_VALUE	jumbo_enabled_int
TX_CFG_REG_VALUE	vlan_enabled_int
TX_CFG_REG_VALUE	reset_tx_int
TX_CFG_REG_VALUE	fcs_enabled_int
TX_CFG_REG_VALUE	read_ifg_int
transmit_pause_frame_valid	TX_DATA_REG
transmit_pause_frame_valid	U_CRC64.START
TXD_PAUSE_DEL1	shift_pause_data
TXD_PAUSE_DEL2	shift_pause_data
U_byte_count_module.RESET	U_byte_count_module.counter
TX_DATA_VALID_REG	FRAME_START
TX_DATA_VALID_REG	TX_DATA_REG
TX_DATA_VALID_REG	TX_DATA_VALID_DEL1
TX_DATA_VALID_DEL4	TX_DATA_VALID_DEL5
store_tx_data_valid	store_tx_data_valid
store_tx_data_valid	start_CRC8
TX_DATA_VALID_DEL6	TX_DATA_VALID_DEL7
TX_DATA_VALID_DEL7	TX_DATA_VALID_DEL8
byte_count_stat	txstatplus_int
TX_DATA_VALID_DEL1	TX_DATA_VALID_DEL2
TX_DATA_VALID_DEL2	store_tx_data_valid
TX_DATA_VALID_DEL2	TX_DATA_VALID_DEL3
start_CRC8	START_CRC8_DEL
start_CRC8	U_CRC8.START
start_CRC8	final_byte_count
U_CRC8.CRC_IN	U_CRC8.CRC_OUT
load_CRC8	store_tx_data_valid
load_CRC8	insert_error
load_CRC8	store_CRC64
load_CRC8	U_CRC8.LOAD
load_CRC8	append_reg
load_CRC8	tx_data_int
load_CRC8	final_byte_count
load_CRC8	store_tx_data
TX_CLK	U_ACK_CNT.clock
TX_CLK	U_CRC64.CLK
TX_CLK	U_CRC8.CLK
TX_CLK	U_byte_count_module.CLK
TX_DATA_VALID_DEL8	TX_DATA_VALID_DEL9
TX_DATA_VALID_DEL9	TX_DATA_VALID_DEL10
BYTE_COUNTER	length_register
BYTE_COUNTER	TX_DATA_VALID_REG
BYTE_COUNTER	TX_DATA_REG
BYTE_COUNTER	final_byte_count
BYTE_COUNTER	FRAME_START
BYTE_COUNTER	byte_count_reg
U_byte_count_module.counter	U_byte_count_module.counter
U_byte_count_module.counter	U_byte_count_module.BYTE_COUNTER
DELAY_ACK	U_ACK_CNT.max_count
U_CRC64.RESET	U_CRC64.CRC_REG
U_CRC64.RESET	U_CRC64.CRC_OUT
TX_DATA_DEL4	TX_DATA_DEL5
reset_tx_int	U_ACK_CNT.reset
TX_DATA_VALID_DELAY	TX_DATA_REG