strict digraph "" {
	node [label="\N"];
	"314:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19debe5910>",
		fillcolor=turquoise,
		label="314:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"315:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19debe59d0>",
		fillcolor=springgreen,
		label="315:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"314:BL" -> "315:IF"	 [cond="[]",
		lineno=None];
	"310:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19debe5e50>",
		fillcolor=turquoise,
		label="310:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"311:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19debe5e90>",
		fillcolor=springgreen,
		label="311:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"310:BL" -> "311:IF"	 [cond="[]",
		lineno=None];
	"313:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19debe5f10>",
		fillcolor=springgreen,
		label="313:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"313:IF" -> "314:BL"	 [cond="['enable_clock_count']",
		label=enable_clock_count,
		lineno=313];
	"312:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19debe5ed0>",
		fillcolor=springgreen,
		label="312:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"311:IF" -> "312:IF"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=311];
	"311:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19debeb1d0>",
		fillcolor=firebrick,
		label="311:NS
clock_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19debeb1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"311:IF" -> "311:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=311];
	"312:IF" -> "313:IF"	 [cond="['clear_counters']",
		label="!(clear_counters)",
		lineno=312];
	"312:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19debe5fd0>",
		fillcolor=firebrick,
		label="312:NS
clock_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19debe5fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"312:IF" -> "312:NS"	 [cond="['clear_counters']",
		label=clear_counters,
		lineno=312];
	"Leaf_309:AL"	 [def_var="['clock_count']",
		label="Leaf_309:AL"];
	"311:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"309:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19debeb390>",
		clk_sens=True,
		fillcolor=gold,
		label="309:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['clock_count_rollover', 'clear_counters', 'enable_clock_count', 'clock_count', 'reset_i']"];
	"309:AL" -> "310:BL"	 [cond="[]",
		lineno=None];
	"316:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19debe5a50>",
		fillcolor=firebrick,
		label="316:NS
clock_count <= clock_count + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19debe5a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"315:IF" -> "316:NS"	 [cond="['clock_count_rollover']",
		label="!(clock_count_rollover)",
		lineno=315];
	"315:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19debe5c90>",
		fillcolor=firebrick,
		label="315:NS
clock_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19debe5c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"315:IF" -> "315:NS"	 [cond="['clock_count_rollover']",
		label=clock_count_rollover,
		lineno=315];
	"316:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"312:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"315:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
}
