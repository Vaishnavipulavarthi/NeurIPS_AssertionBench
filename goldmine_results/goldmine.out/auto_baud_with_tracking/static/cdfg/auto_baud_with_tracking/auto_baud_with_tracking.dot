strict digraph "compose( ,  )" {
	node [label="\N"];
	"442:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd636b50>",
		fillcolor=turquoise,
		label="442:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"444:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd636d10>",
		fillcolor=springgreen,
		label="444:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"442:BL" -> "444:IF"	 [cond="[]",
		lineno=None];
	"450:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd636ed0>",
		fillcolor=springgreen,
		label="450:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"450:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd636fd0>",
		fillcolor=firebrick,
		label="450:NS
baud <= measurement;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd636fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"450:IF" -> "450:NS"	 [cond="['verify_good']",
		label=verify_good,
		lineno=450];
	"428:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd6366d0>",
		fillcolor=firebrick,
		label="428:NS
measurement <= -1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd6366d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_425:AL"	 [def_var="['measurement']",
		label="Leaf_425:AL"];
	"428:NS" -> "Leaf_425:AL"	 [cond="[]",
		lineno=None];
	"341:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19bda67290>",
		clk_sens=True,
		fillcolor=gold,
		label="341:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['verify', 'clear_counters', 'main_count', 'main_count_rollover', 'measure', 'reset_i', 'mid_bit_count']"];
	"342:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bda67250>",
		fillcolor=turquoise,
		label="342:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"341:AL" -> "342:BL"	 [cond="[]",
		lineno=None];
	"311:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd68c290>",
		fillcolor=firebrick,
		label="311:NS
clock_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd68c290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_309:AL"	 [def_var="['clock_count']",
		label="Leaf_309:AL"];
	"311:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"309:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19bd68c110>",
		clk_sens=True,
		fillcolor=gold,
		label="309:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['clock_count_rollover', 'clear_counters', 'enable_clock_count', 'clock_count', 'reset_i']"];
	"310:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd68c150>",
		fillcolor=turquoise,
		label="310:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"309:AL" -> "310:BL"	 [cond="[]",
		lineno=None];
	"549:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd641e90>",
		fillcolor=turquoise,
		label="549:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd641e50>]",
		style=filled,
		typ=Block];
	"552:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd6532d0>",
		fillcolor=springgreen,
		label="552:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"549:BL" -> "552:IF"	 [cond="[]",
		lineno=None];
	"353:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bda67c90>",
		fillcolor=turquoise,
		label="353:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"354:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda67f10>",
		fillcolor=springgreen,
		label="354:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"353:BL" -> "354:IF"	 [cond="[]",
		lineno=None];
	"315:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd68c9d0>",
		fillcolor=springgreen,
		label="315:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"315:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd68c990>",
		fillcolor=firebrick,
		label="315:NS
clock_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd68c990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"315:IF" -> "315:NS"	 [cond="['clock_count_rollover']",
		label=clock_count_rollover,
		lineno=315];
	"316:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd68cb90>",
		fillcolor=firebrick,
		label="316:NS
clock_count <= clock_count + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd68cb90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"315:IF" -> "316:NS"	 [cond="['clock_count_rollover']",
		label="!(clock_count_rollover)",
		lineno=315];
	"374:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda6d610>",
		fillcolor=springgreen,
		label="374:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"375:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bda6d650>",
		fillcolor=turquoise,
		label="375:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"374:IF" -> "375:BL"	 [cond="['run']",
		label=run,
		lineno=374];
	"308:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f19bd691e90>",
		def_var="['enable_clock_count']",
		fillcolor=deepskyblue,
		label="308:AS
enable_clock_count = measure || verify && main_count_rollover;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['measure', 'verify', 'main_count_rollover']"];
	"308:AS" -> "309:AL";
	"329:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f19bd68ced0>",
		def_var="['mid_bit_count']",
		fillcolor=deepskyblue,
		label="329:AS
mid_bit_count = (clock_count == (CLOCK_FACTOR_PP >> 1) - 1) && enable_clock_count;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['clock_count', 'enable_clock_count']"];
	"308:AS" -> "329:AS";
	"583:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd656610>",
		fillcolor=turquoise,
		label="583:BL
clear_counters <= 1'b1;
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd656550>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f19bd656710>]",
		style=filled,
		typ=Block];
	"Leaf_492:AL"	 [def_var="['verify', 'm1_next_state', 'clear_counters', 'idle', 'measure', 'verify_good']",
		label="Leaf_492:AL"];
	"583:BL" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"347:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda676d0>",
		fillcolor=springgreen,
		label="347:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"347:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda67710>",
		fillcolor=firebrick,
		label="347:NS
main_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda67710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"347:IF" -> "347:NS"	 [cond="['clear_counters']",
		label=clear_counters,
		lineno=347];
	"349:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda67a90>",
		fillcolor=springgreen,
		label="349:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"347:IF" -> "349:IF"	 [cond="['clear_counters']",
		label="!(clear_counters)",
		lineno=347];
	"311:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd68c250>",
		fillcolor=springgreen,
		label="311:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"310:BL" -> "311:IF"	 [cond="[]",
		lineno=None];
	"560:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd6533d0>",
		fillcolor=lightcyan,
		label="560:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"561:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd653690>",
		fillcolor=turquoise,
		label="561:BL
clear_counters <= 1'b1;
m1_next_state <= m1_verify_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd6535d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f19bd653790>]",
		style=filled,
		typ=Block];
	"560:CA" -> "561:BL"	 [cond="[]",
		lineno=None];
	"444:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd636d50>",
		fillcolor=firebrick,
		label="444:NS
baud <= -1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd636d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_441:AL"	 [def_var="['baud']",
		label="Leaf_441:AL"];
	"444:NS" -> "Leaf_441:AL"	 [cond="[]",
		lineno=None];
	"464:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd62b4d0>",
		fillcolor=springgreen,
		label="464:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"464:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62b5d0>",
		fillcolor=firebrick,
		label="464:NS
run <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62b5d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"464:IF" -> "464:NS"	 [cond="['verify_good']",
		label=verify_good,
		lineno=464];
	"538:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd641410>",
		fillcolor=turquoise,
		label="538:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd641390>]",
		style=filled,
		typ=Block];
	"542:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd641750>",
		fillcolor=springgreen,
		label="542:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"538:BL" -> "542:IF"	 [cond="[]",
		lineno=None];
	"Leaf_309:AL" -> "309:AL";
	"320:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f19bd68cc90>",
		def_var="['clock_count_rollover']",
		fillcolor=deepskyblue,
		label="320:AS
clock_count_rollover = clock_count == CLOCK_FACTOR_PP - 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['clock_count']"];
	"Leaf_309:AL" -> "320:AS";
	"Leaf_309:AL" -> "329:AS";
	"Leaf_492:AL" -> "341:AL";
	"Leaf_492:AL" -> "309:AL";
	"Leaf_492:AL" -> "308:AS";
	"386:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19bda6ddd0>",
		clk_sens=True,
		fillcolor=gold,
		label="386:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['verify', 'target_bits', 'reset_i', 'mid_bit_count']"];
	"Leaf_492:AL" -> "386:AL";
	"425:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19bd636510>",
		clk_sens=True,
		fillcolor=gold,
		label="425:AL",
		sens="['clk_i', 'idle']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['idle', 'clear_counters', 'main_count']"];
	"Leaf_492:AL" -> "425:AL";
	"459:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19bd62b190>",
		clk_sens=True,
		fillcolor=gold,
		label="459:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset_i', 'verify_good']"];
	"Leaf_492:AL" -> "459:AL";
	"397:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f19bda69810>",
		def_var="['verify_done']",
		fillcolor=deepskyblue,
		label="397:AS
verify_done = (target_bits == 1) && verify && mid_bit_count;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['target_bits', 'verify', 'mid_bit_count']"];
	"Leaf_492:AL" -> "397:AS";
	"485:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19bd62b910>",
		clk_sens=True,
		fillcolor=gold,
		label="485:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['m1_next_state', 'reset_i']"];
	"Leaf_492:AL" -> "485:AL";
	"408:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19bda69a10>",
		clk_sens=True,
		fillcolor=gold,
		label="408:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['verify', 'serial_dat_i', 'idle', 'target_bits', 'reset_i', 'mid_bit_count']"];
	"Leaf_492:AL" -> "408:AL";
	"441:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19bd636b90>",
		clk_sens=True,
		fillcolor=gold,
		label="441:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['verify_good', 'reset_i', 'measurement']"];
	"Leaf_492:AL" -> "441:AL";
	"531:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637fd0>",
		fillcolor=firebrick,
		label="531:NS
m1_next_state <= m1_measure_2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"531:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"498:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd62e810>",
		fillcolor=turquoise,
		label="498:BL
idle <= 1'b0;
verify_good <= 1'b0;
measure <= 1'b0;
clear_counters <= 1'b0;
verify <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62e250>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f19bd62e390>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62e4d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f19bd62e650>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62e790>]",
		style=filled,
		typ=Block];
	"507:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f19bd656b10>",
		fillcolor=linen,
		label="507:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"498:BL" -> "507:CS"	 [cond="[]",
		lineno=None];
	"349:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda67ad0>",
		fillcolor=firebrick,
		label="349:NS
main_count <= main_count + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda67ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_341:AL"	 [def_var="['main_count']",
		label="Leaf_341:AL"];
	"349:NS" -> "Leaf_341:AL"	 [cond="[]",
		lineno=None];
	"414:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd636250>",
		fillcolor=springgreen,
		label="414:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"415:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd636390>",
		fillcolor=firebrick,
		label="415:NS
character_miscompare <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd636390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"414:IF" -> "415:NS"	 [cond="['verify', 'mid_bit_count', 'target_bits', 'serial_dat_i']",
		label="(verify && mid_bit_count && target_bits[0] ^ serial_dat_i)",
		lineno=414];
	"523:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637a10>",
		fillcolor=firebrick,
		label="523:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"523:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"450:NS" -> "Leaf_441:AL"	 [cond="[]",
		lineno=None];
	"355:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda6d110>",
		fillcolor=firebrick,
		label="355:NS
main_count <= main_count + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda6d110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"355:NS" -> "Leaf_341:AL"	 [cond="[]",
		lineno=None];
	"Leaf_408:AL"	 [def_var="['character_miscompare']",
		label="Leaf_408:AL"];
	"415:NS" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"597:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd656bd0>",
		fillcolor=lightcyan,
		label="597:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"597:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd656cd0>",
		fillcolor=firebrick,
		label="597:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd656cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"597:CA" -> "597:NS"	 [cond="[]",
		lineno=None];
	"369:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bda6d290>",
		fillcolor=turquoise,
		label="369:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"370:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda6d490>",
		fillcolor=springgreen,
		label="370:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"369:BL" -> "370:IF"	 [cond="[]",
		lineno=None];
	"387:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bda6de10>",
		fillcolor=turquoise,
		label="387:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"386:AL" -> "387:BL"	 [cond="[]",
		lineno=None];
	"507:CS" -> "560:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"507:CS" -> "597:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"516:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd637090>",
		fillcolor=lightcyan,
		label="516:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"507:CS" -> "516:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"548:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd641810>",
		fillcolor=lightcyan,
		label="548:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"507:CS" -> "548:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"576:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd6539d0>",
		fillcolor=lightcyan,
		label="576:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"507:CS" -> "576:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"537:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd6411d0>",
		fillcolor=lightcyan,
		label="537:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"507:CS" -> "537:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"527:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd6376d0>",
		fillcolor=lightcyan,
		label="527:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"507:CS" -> "527:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"566:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd653850>",
		fillcolor=lightcyan,
		label="566:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"507:CS" -> "566:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"509:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd62e950>",
		fillcolor=lightcyan,
		label="509:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"507:CS" -> "509:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"591:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd6567d0>",
		fillcolor=lightcyan,
		label="591:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"507:CS" -> "591:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"582:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f19bd6563d0>",
		fillcolor=lightcyan,
		label="582:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"507:CS" -> "582:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=507];
	"377:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda6da90>",
		fillcolor=firebrick,
		label="377:NS
baud_count <= baud_count + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda6da90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_368:AL"	 [def_var="['baud_count']",
		label="Leaf_368:AL"];
	"377:NS" -> "Leaf_368:AL"	 [cond="[]",
		lineno=None];
	"360:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f19bda67bd0>",
		def_var="['main_count_rollover']",
		fillcolor=deepskyblue,
		label="360:AS
main_count_rollover = main_count == measurement;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['main_count', 'measurement']"];
	"Leaf_425:AL" -> "360:AS";
	"Leaf_425:AL" -> "441:AL";
	"544:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd641b90>",
		fillcolor=firebrick,
		label="544:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd641b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"544:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"376:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda6d8d0>",
		fillcolor=springgreen,
		label="376:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"376:IF" -> "377:NS"	 [cond="['baud_count_rollover']",
		label="!(baud_count_rollover)",
		lineno=376];
	"376:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda6d890>",
		fillcolor=firebrick,
		label="376:NS
baud_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda6d890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"376:IF" -> "376:NS"	 [cond="['baud_count_rollover']",
		label=baud_count_rollover,
		lineno=376];
	"444:IF" -> "450:IF"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=444];
	"444:IF" -> "444:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=444];
	"517:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd637290>",
		fillcolor=turquoise,
		label="517:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637210>]",
		style=filled,
		typ=Block];
	"516:CA" -> "517:BL"	 [cond="[]",
		lineno=None];
	"512:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62ee50>",
		fillcolor=firebrick,
		label="512:NS
m1_next_state <= m1_measure_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62ee50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"512:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"561:BL" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"534:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd641210>",
		fillcolor=firebrick,
		label="534:NS
m1_next_state <= m1_measure_1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd641210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"534:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"313:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd68c710>",
		fillcolor=springgreen,
		label="313:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"314:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd68c750>",
		fillcolor=turquoise,
		label="314:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"313:IF" -> "314:BL"	 [cond="['enable_clock_count']",
		label=enable_clock_count,
		lineno=313];
	"592:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd6569d0>",
		fillcolor=turquoise,
		label="592:BL
verify_good <= 1'b1;
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd656910>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f19bd656ad0>]",
		style=filled,
		typ=Block];
	"592:BL" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"434:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd636890>",
		fillcolor=springgreen,
		label="434:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"434:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd636a10>",
		fillcolor=firebrick,
		label="434:NS
measurement <= main_count >> 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd636a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"434:IF" -> "434:NS"	 [cond="['clear_counters']",
		label=clear_counters,
		lineno=434];
	"381:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f19bda6db50>",
		def_var="['baud_count_rollover']",
		fillcolor=deepskyblue,
		label="381:AS
baud_count_rollover = baud_count == baud;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['baud_count', 'baud']"];
	"Leaf_368:AL" -> "381:AS";
	"368:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19bda6d2d0>",
		clk_sens=True,
		fillcolor=gold,
		label="368:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['baud_count', 'run', 'reset_i', 'baud_count_rollover']"];
	"Leaf_368:AL" -> "368:AL";
	"548:CA" -> "549:BL"	 [cond="[]",
		lineno=None];
	"487:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd62bb90>",
		fillcolor=springgreen,
		label="487:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"487:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62bb50>",
		fillcolor=firebrick,
		label="487:NS
m1_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62bb50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"487:IF" -> "487:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=487];
	"488:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62bd10>",
		fillcolor=firebrick,
		label="488:NS
m1_state <= m1_next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62bd10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"487:IF" -> "488:NS"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=487];
	"513:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637050>",
		fillcolor=firebrick,
		label="513:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"513:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"Leaf_386:AL"	 [def_var="['target_bits']",
		label="Leaf_386:AL"];
	"Leaf_386:AL" -> "386:AL";
	"Leaf_386:AL" -> "397:AS";
	"Leaf_386:AL" -> "408:AL";
	"570:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd653e10>",
		fillcolor=firebrick,
		label="570:NS
m1_next_state <= m1_verify_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd653e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"570:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"523:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd637ad0>",
		fillcolor=springgreen,
		label="523:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"523:IF" -> "523:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && serial_dat_i)",
		lineno=523];
	"524:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637c10>",
		fillcolor=firebrick,
		label="524:NS
m1_next_state <= m1_measure_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"523:IF" -> "524:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && serial_dat_i))",
		lineno=523];
	"578:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd656210>",
		fillcolor=springgreen,
		label="578:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"578:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd656150>",
		fillcolor=firebrick,
		label="578:NS
m1_next_state <= m1_verify_failed;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd656150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"578:IF" -> "578:NS"	 [cond="['character_miscompare']",
		label=character_miscompare,
		lineno=578];
	"579:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd656310>",
		fillcolor=firebrick,
		label="579:NS
m1_next_state <= m1_run;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd656310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"578:IF" -> "579:NS"	 [cond="['character_miscompare']",
		label="!(character_miscompare)",
		lineno=578];
	"426:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd6364d0>",
		fillcolor=turquoise,
		label="426:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"425:AL" -> "426:BL"	 [cond="[]",
		lineno=None];
	"Leaf_341:AL" -> "341:AL";
	"Leaf_341:AL" -> "425:AL";
	"Leaf_341:AL" -> "360:AS";
	"555:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd653410>",
		fillcolor=firebrick,
		label="555:NS
m1_next_state <= m1_measure_3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd653410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"552:IF" -> "555:NS"	 [cond="['serial_dat_i']",
		label="!((!serial_dat_i))",
		lineno=552];
	"552:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd653210>",
		fillcolor=firebrick,
		label="552:NS
m1_next_state <= m1_measure_4;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd653210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"552:IF" -> "552:NS"	 [cond="['serial_dat_i']",
		label="(!serial_dat_i)",
		lineno=552];
	"410:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda69c10>",
		fillcolor=springgreen,
		label="410:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"410:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda69bd0>",
		fillcolor=firebrick,
		label="410:NS
character_miscompare <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda69bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"410:IF" -> "410:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=410];
	"412:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bda69f50>",
		fillcolor=turquoise,
		label="412:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"410:IF" -> "412:BL"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=410];
	"347:NS" -> "Leaf_341:AL"	 [cond="[]",
		lineno=None];
	"460:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd62b150>",
		fillcolor=turquoise,
		label="460:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"459:AL" -> "460:BL"	 [cond="[]",
		lineno=None];
	"577:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd653a90>",
		fillcolor=turquoise,
		label="577:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"576:CA" -> "577:BL"	 [cond="[]",
		lineno=None];
	"569:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd653c50>",
		fillcolor=firebrick,
		label="569:NS
m1_next_state <= m1_verify_1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd653c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"569:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"521:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd637610>",
		fillcolor=springgreen,
		label="521:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"517:BL" -> "521:IF"	 [cond="[]",
		lineno=None];
	"391:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda69290>",
		fillcolor=firebrick,
		label="391:NS
target_bits <= 9'h086;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda69290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"391:NS" -> "Leaf_386:AL"	 [cond="[]",
		lineno=None];
	"410:NS" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"312:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd68c510>",
		fillcolor=springgreen,
		label="312:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"312:IF" -> "313:IF"	 [cond="['clear_counters']",
		label="!(clear_counters)",
		lineno=312];
	"312:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd68c550>",
		fillcolor=firebrick,
		label="312:NS
clock_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd68c550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"312:IF" -> "312:NS"	 [cond="['clear_counters']",
		label=clear_counters,
		lineno=312];
	"428:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd636690>",
		fillcolor=springgreen,
		label="428:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"426:BL" -> "428:IF"	 [cond="[]",
		lineno=None];
	"434:NS" -> "Leaf_425:AL"	 [cond="[]",
		lineno=None];
	"Leaf_485:AL"	 [def_var="['m1_state']",
		label="Leaf_485:AL"];
	"487:NS" -> "Leaf_485:AL"	 [cond="[]",
		lineno=None];
	"537:CA" -> "538:BL"	 [cond="[]",
		lineno=None];
	"381:AS" -> "368:AL";
	"468:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f19bd62b690>",
		def_var="['baud_clk_o']",
		fillcolor=deepskyblue,
		label="468:AS
baud_clk_o = baud_count_rollover;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['baud_count_rollover']"];
	"381:AS" -> "468:AS";
	"393:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda69410>",
		fillcolor=springgreen,
		label="393:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"393:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda69590>",
		fillcolor=firebrick,
		label="393:NS
target_bits <= target_bits >> 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda69590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"393:IF" -> "393:NS"	 [cond="['verify', 'mid_bit_count']",
		label="(verify && mid_bit_count)",
		lineno=393];
	"488:NS" -> "Leaf_485:AL"	 [cond="[]",
		lineno=None];
	"314:BL" -> "315:IF"	 [cond="[]",
		lineno=None];
	"354:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda67ed0>",
		fillcolor=firebrick,
		label="354:NS
main_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda67ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"354:NS" -> "Leaf_341:AL"	 [cond="[]",
		lineno=None];
	"343:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda67450>",
		fillcolor=springgreen,
		label="343:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"342:BL" -> "343:IF"	 [cond="[]",
		lineno=None];
	"545:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd641d90>",
		fillcolor=firebrick,
		label="545:NS
m1_next_state <= m1_measure_2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd641d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"545:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"510:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd62eb10>",
		fillcolor=turquoise,
		label="510:BL
idle <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62ea90>]",
		style=filled,
		typ=Block];
	"512:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd62ef10>",
		fillcolor=springgreen,
		label="512:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"510:BL" -> "512:IF"	 [cond="[]",
		lineno=None];
	"461:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd62b350>",
		fillcolor=springgreen,
		label="461:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"461:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62b310>",
		fillcolor=firebrick,
		label="461:NS
run <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd62b310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"461:IF" -> "461:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=461];
	"463:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd62b3d0>",
		fillcolor=turquoise,
		label="463:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"461:IF" -> "463:BL"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=461];
	"Leaf_441:AL" -> "381:AS";
	"528:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd637d10>",
		fillcolor=turquoise,
		label="528:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637cd0>]",
		style=filled,
		typ=Block];
	"527:CA" -> "528:BL"	 [cond="[]",
		lineno=None];
	"345:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bda674d0>",
		fillcolor=turquoise,
		label="345:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"343:IF" -> "345:BL"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=343];
	"343:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda67410>",
		fillcolor=firebrick,
		label="343:NS
main_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda67410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"343:IF" -> "343:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=343];
	"544:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd641c50>",
		fillcolor=springgreen,
		label="544:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"544:IF" -> "544:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && ~serial_dat_i)",
		lineno=544];
	"544:IF" -> "545:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && ~serial_dat_i))",
		lineno=544];
	"376:NS" -> "Leaf_368:AL"	 [cond="[]",
		lineno=None];
	"567:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd653a10>",
		fillcolor=turquoise,
		label="567:BL
verify <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd653990>]",
		style=filled,
		typ=Block];
	"566:CA" -> "567:BL"	 [cond="[]",
		lineno=None];
	"602:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f19bd656d10>",
		def_var="['auto_baud_locked_o']",
		fillcolor=deepskyblue,
		label="602:AS
auto_baud_locked_o = run;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['run']"];
	"311:IF" -> "311:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=311];
	"311:IF" -> "312:IF"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=311];
	"393:NS" -> "Leaf_386:AL"	 [cond="[]",
		lineno=None];
	"569:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd653d10>",
		fillcolor=springgreen,
		label="569:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"567:BL" -> "569:IF"	 [cond="[]",
		lineno=None];
	"352:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda67c50>",
		fillcolor=springgreen,
		label="352:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"352:IF" -> "353:BL"	 [cond="['verify']",
		label=verify,
		lineno=352];
	"492:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f19bd62e110>",
		clk_sens=False,
		fillcolor=gold,
		label="492:AL",
		sens="['m1_state', 'mid_bit_count', 'serial_dat_i', 'verify_done', 'character_miscompare']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['m1_state', 'verify_done', 'character_miscompare', 'serial_dat_i', 'mid_bit_count']"];
	"Leaf_485:AL" -> "492:AL";
	"521:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637650>",
		fillcolor=firebrick,
		label="521:NS
m1_next_state <= m1_measure_1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd637650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"521:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"486:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bd62ba10>",
		fillcolor=turquoise,
		label="486:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"486:BL" -> "487:IF"	 [cond="[]",
		lineno=None];
	"349:IF" -> "349:NS"	 [cond="['measure', 'mid_bit_count']",
		label="(measure && mid_bit_count)",
		lineno=349];
	"349:IF" -> "352:IF"	 [cond="['measure', 'mid_bit_count']",
		label="!((measure && mid_bit_count))",
		lineno=349];
	"315:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"524:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"397:AS" -> "492:AL";
	"354:IF" -> "355:NS"	 [cond="['main_count_rollover']",
		label="!(main_count_rollover)",
		lineno=354];
	"354:IF" -> "354:NS"	 [cond="['main_count_rollover']",
		label=main_count_rollover,
		lineno=354];
	"597:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"428:IF" -> "428:NS"	 [cond="['idle']",
		label=idle,
		lineno=428];
	"428:IF" -> "434:IF"	 [cond="['idle']",
		label="!(idle)",
		lineno=428];
	"485:AL" -> "486:BL"	 [cond="[]",
		lineno=None];
	"Leaf_459:AL"	 [def_var="['run']",
		label="Leaf_459:AL"];
	"461:NS" -> "Leaf_459:AL"	 [cond="[]",
		lineno=None];
	"578:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"388:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda6df90>",
		fillcolor=springgreen,
		label="388:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"387:BL" -> "388:IF"	 [cond="[]",
		lineno=None];
	"320:AS" -> "309:AL";
	"368:AL" -> "369:BL"	 [cond="[]",
		lineno=None];
	"521:IF" -> "523:IF"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && ~serial_dat_i))",
		lineno=521];
	"521:IF" -> "521:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && ~serial_dat_i)",
		lineno=521];
	"531:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bd6410d0>",
		fillcolor=springgreen,
		label="531:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"528:BL" -> "531:IF"	 [cond="[]",
		lineno=None];
	"345:BL" -> "347:IF"	 [cond="[]",
		lineno=None];
	"370:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda6d450>",
		fillcolor=firebrick,
		label="370:NS
baud_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda6d450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"370:NS" -> "Leaf_368:AL"	 [cond="[]",
		lineno=None];
	"509:CA" -> "510:BL"	 [cond="[]",
		lineno=None];
	"390:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bda692d0>",
		fillcolor=turquoise,
		label="390:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"388:IF" -> "390:BL"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=388];
	"388:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda6df50>",
		fillcolor=firebrick,
		label="388:NS
target_bits <= 9'h086;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda6df50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"388:IF" -> "388:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=388];
	"577:BL" -> "578:IF"	 [cond="[]",
		lineno=None];
	"542:IF" -> "544:IF"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && serial_dat_i))",
		lineno=542];
	"542:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd641790>",
		fillcolor=firebrick,
		label="542:NS
m1_next_state <= m1_measure_3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bd641790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"542:IF" -> "542:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && serial_dat_i)",
		lineno=542];
	"413:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda69ed0>",
		fillcolor=firebrick,
		label="413:NS
character_miscompare <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f19bda69ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"413:NS" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"409:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bda69a50>",
		fillcolor=turquoise,
		label="409:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"409:BL" -> "410:IF"	 [cond="[]",
		lineno=None];
	"Leaf_408:AL" -> "492:AL";
	"316:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"312:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"391:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda69190>",
		fillcolor=springgreen,
		label="391:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"391:IF" -> "391:NS"	 [cond="['verify']",
		label="(~verify)",
		lineno=391];
	"569:IF" -> "570:NS"	 [cond="['verify_done']",
		label="!(verify_done)",
		lineno=569];
	"569:IF" -> "569:NS"	 [cond="['verify_done']",
		label=verify_done,
		lineno=569];
	"579:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"370:IF" -> "370:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=370];
	"372:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f19bda6d510>",
		fillcolor=turquoise,
		label="372:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"370:IF" -> "372:BL"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=370];
	"512:IF" -> "512:NS"	 [cond="['serial_dat_i']",
		label="(serial_dat_i == 0)",
		lineno=512];
	"512:IF" -> "513:NS"	 [cond="['serial_dat_i']",
		label="!((serial_dat_i == 0))",
		lineno=512];
	"408:AL" -> "409:BL"	 [cond="[]",
		lineno=None];
	"555:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"591:CA" -> "592:BL"	 [cond="[]",
		lineno=None];
	"412:BL" -> "414:IF"	 [cond="[]",
		lineno=None];
	"413:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f19bda69dd0>",
		fillcolor=springgreen,
		label="413:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"412:BL" -> "413:IF"	 [cond="[]",
		lineno=None];
	"375:BL" -> "376:IF"	 [cond="[]",
		lineno=None];
	"372:BL" -> "374:IF"	 [cond="[]",
		lineno=None];
	"492:AL" -> "498:BL"	 [cond="[]",
		lineno=None];
	"460:BL" -> "461:IF"	 [cond="[]",
		lineno=None];
	"Leaf_459:AL" -> "602:AS";
	"Leaf_459:AL" -> "368:AL";
	"542:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"343:NS" -> "Leaf_341:AL"	 [cond="[]",
		lineno=None];
	"390:BL" -> "393:IF"	 [cond="[]",
		lineno=None];
	"390:BL" -> "391:IF"	 [cond="[]",
		lineno=None];
	"360:AS" -> "341:AL";
	"360:AS" -> "308:AS";
	"441:AL" -> "442:BL"	 [cond="[]",
		lineno=None];
	"582:CA" -> "583:BL"	 [cond="[]",
		lineno=None];
	"552:NS" -> "Leaf_492:AL"	 [cond="[]",
		lineno=None];
	"329:AS" -> "341:AL";
	"329:AS" -> "386:AL";
	"329:AS" -> "397:AS";
	"329:AS" -> "408:AL";
	"329:AS" -> "492:AL";
	"413:IF" -> "413:NS"	 [cond="['idle']",
		label=idle,
		lineno=413];
	"531:IF" -> "531:NS"	 [cond="['serial_dat_i']",
		label=serial_dat_i,
		lineno=531];
	"531:IF" -> "534:NS"	 [cond="['serial_dat_i']",
		label="!(serial_dat_i)",
		lineno=531];
	"464:NS" -> "Leaf_459:AL"	 [cond="[]",
		lineno=None];
	"463:BL" -> "464:IF"	 [cond="[]",
		lineno=None];
	"388:NS" -> "Leaf_386:AL"	 [cond="[]",
		lineno=None];
}
