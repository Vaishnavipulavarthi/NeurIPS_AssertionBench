digraph "" {
	Areg -> adder_in_a	 [weight=1.0];
	Areg -> shifter_inA	 [weight=1.0];
	add_AB -> carry	 [weight=1.0];
	sl_AB -> carry	 [weight=1.0];
	sl_AB -> alu_out	 [weight=1.0];
	load_inputs -> Areg	 [weight=1.0];
	load_inputs -> Breg	 [weight=1.0];
	and_AB -> carry	 [weight=1.0];
	and_AB -> alu_out	 [weight=1.0];
	Zreg -> Z	 [weight=1.0];
	sr_AB -> carry	 [weight=1.0];
	sr_AB -> alu_out	 [weight=1.0];
	sr_AB -> shifter_direction	 [weight=1.0];
	carry -> carry	 [weight=1.0];
	carry -> Creg	 [weight=1.0];
	adder_out -> alu_out	 [weight=1.0];
	Creg -> C	 [weight=1.0];
	dec_A -> adder_in_b	 [weight=1.0];
	dec_B -> adder_in_a	 [weight=1.0];
	adder_in_b -> adder_in_b	 [weight=1.0];
	inc_A -> adder_in_b	 [weight=1.0];
	inc_A -> carry_in	 [weight=1.0];
	inc_B -> adder_in_a	 [weight=1.0];
	inc_B -> carry_in	 [weight=1.0];
	clr_Z -> Zreg	 [weight=1.0];
	clr_V -> Vreg	 [weight=1.0];
	or_AB -> carry	 [weight=1.0];
	or_AB -> adderORsel	 [weight=1.0];
	or_AB -> alu_out	 [weight=1.0];
	cpl_B -> carry	 [weight=1.0];
	cpl_B -> adder_in_a	 [weight=1.0];
	cpl_B -> adder_in_b	 [weight=1.0];
	cpl_A -> adder_in_a	 [weight=1.0];
	cpl_A -> adder_in_b	 [weight=1.0];
	Vreg -> V	 [weight=1.0];
	clr -> Areg	 [weight=1.0];
	clr -> carry	 [weight=1.0];
	clr -> Creg	 [weight=1.0];
	clr -> Breg	 [weight=1.0];
	clr -> Yreg	 [weight=1.0];
	A -> Areg	 [weight=1.0];
	logic0;
	B -> Breg	 [weight=1.0];
	cmp_AB -> adderXORsel	 [weight=1.0];
	Breg -> adder_in_b	 [weight=1.0];
	Breg -> shifter_inB	 [weight=1.0];
	Yreg -> Y	 [weight=1.0];
	carry_out -> carry	 [weight=1.0];
	carry_out -> alu_out	 [weight=1.0];
	alu_out -> Zreg	 [weight=2.0];
	alu_out -> Yreg	 [weight=1.0];
	sub_AB -> adder_in_b	 [weight=1.0];
	sub_AB -> carry_in	 [weight=1.0];
	reset -> Areg	 [weight=3.0];
	reset -> Zreg	 [weight=4.0];
	reset -> Creg	 [weight=11.0];
	reset -> Vreg	 [weight=2.0];
	reset -> Breg	 [weight=3.0];
	reset -> Yreg	 [weight=3.0];
	logic1;
	shifter_out -> alu_out	 [weight=1.0];
	clr_C -> Creg	 [weight=1.0];
	xor_AB -> carry	 [weight=1.0];
	xor_AB -> adderXORsel	 [weight=1.0];
	shifter_carry -> carry	 [weight=1.0];
	load_outputs -> Yreg	 [weight=1.0];
}
