strict digraph "compose( ,  )" {
	node [label="\N"];
	"uut.70:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f093f23efd0>",
		fillcolor=springgreen,
		label="uut.70:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"uut.77:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f093f24e2d0>",
		fillcolor=springgreen,
		label="uut.77:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"uut.70:IF" -> "uut.77:IF"	 [cond="['a', 'N', 'b', 'N']",
		label="!(((a[N - 1] == 0) && (b[N - 1] == 0)))",
		lineno=70];
	"uut.70:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f093f23eb50>",
		fillcolor=turquoise,
		label="uut.70:BL
res[N - 1] = 0;
res[N-2:0] = a[N-2:0] + b[N-2:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f23e9d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f23eed0>]",
		style=filled,
		typ=Block];
	"uut.70:IF" -> "uut.70:BL"	 [cond="['a', 'N', 'b', 'N']",
		label="((a[N - 1] == 0) && (b[N - 1] == 0))",
		lineno=70];
	"uut.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f093f24ec50>",
		fillcolor=turquoise,
		label="uut.87:BL
res[N-2:0] = b[N-2:0] - a[N-2:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f24efd0>]",
		style=filled,
		typ=Block];
	"uut.89:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f093f24eb10>",
		fillcolor=springgreen,
		label="uut.89:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"uut.87:BL" -> "uut.89:IF"	 [cond="[]",
		lineno=None];
	"uut.61:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f093f27d250>",
		fillcolor=turquoise,
		label="uut.61:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"uut.63:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f093f23e310>",
		fillcolor=springgreen,
		label="uut.63:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"uut.61:BL" -> "uut.63:IF"	 [cond="[]",
		lineno=None];
	"uut.58:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f093f261190>",
		def_var="['c']",
		fillcolor=deepskyblue,
		label="uut.58:AS
c = res;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['res']"];
	"uut.80:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f24cad0>",
		fillcolor=cadetblue,
		label="uut.80:BS
res[N - 1] = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f24cad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"uut.Leaf_60:AL"	 [def_var="['res']",
		label="uut.Leaf_60:AL"];
	"uut.80:BS" -> "uut.Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"uut.77:IF" -> "uut.87:BL"	 [cond="['a', 'N', 'b', 'N']",
		label="!(((a[N - 1] == 0) && (b[N - 1] == 1)))",
		lineno=77];
	"uut.77:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f093f24ce10>",
		fillcolor=turquoise,
		label="uut.77:BL
res[N-2:0] = a[N-2:0] - b[N-2:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f24e1d0>]",
		style=filled,
		typ=Block];
	"uut.77:IF" -> "uut.77:BL"	 [cond="['a', 'N', 'b', 'N']",
		label="((a[N - 1] == 0) && (b[N - 1] == 1))",
		lineno=77];
	"uut.92:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f24eb90>",
		fillcolor=cadetblue,
		label="uut.92:BS
res[N - 1] = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f24eb90>]",
		style=filled,
		typ=BlockingSubstitution];
	"uut.92:BS" -> "uut.Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"uut.63:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f093f545e10>",
		fillcolor=turquoise,
		label="uut.63:BL
res[N - 1] = 1;
res[N-2:0] = a[N-2:0] + b[N-2:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f09416b8f10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f23e210>]",
		style=filled,
		typ=Block];
	"uut.63:BL" -> "uut.Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"uut.82:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f24cd50>",
		fillcolor=cadetblue,
		label="uut.82:BS
res[N - 1] = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f24cd50>]",
		style=filled,
		typ=BlockingSubstitution];
	"uut.82:BS" -> "uut.Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"uut.70:BL" -> "uut.Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"uut.60:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f093f26ad90>",
		clk_sens=False,
		fillcolor=gold,
		label="uut.60:AL",
		sens="['a', 'b']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a', 'b', 'N']"];
	"uut.60:AL" -> "uut.61:BL"	 [cond="[]",
		lineno=None];
	"uut.Leaf_60:AL" -> "uut.58:AS";
	"uut.90:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f24e910>",
		fillcolor=cadetblue,
		label="uut.90:BS
res[N - 1] = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f093f24e910>]",
		style=filled,
		typ=BlockingSubstitution];
	"uut.90:BS" -> "uut.Leaf_60:AL"	 [cond="[]",
		lineno=None];
	"uut.79:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f093f24ccd0>",
		fillcolor=springgreen,
		label="uut.79:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"uut.77:BL" -> "uut.79:IF"	 [cond="[]",
		lineno=None];
	"uut.89:IF" -> "uut.92:BS"	 [cond="['a', 'N', 'b', 'N']",
		label="!((a[N-2:0] < b[N-2:0]))",
		lineno=89];
	"uut.89:IF" -> "uut.90:BS"	 [cond="['a', 'N', 'b', 'N']",
		label="(a[N-2:0] < b[N-2:0])",
		lineno=89];
	"uut.79:IF" -> "uut.80:BS"	 [cond="['a', 'N', 'b', 'N']",
		label="(a[N-2:0] > b[N-2:0])",
		lineno=79];
	"uut.79:IF" -> "uut.82:BS"	 [cond="['a', 'N', 'b', 'N']",
		label="!((a[N-2:0] > b[N-2:0]))",
		lineno=79];
	"uut.63:IF" -> "uut.70:IF"	 [cond="['a', 'N', 'b', 'N']",
		label="!(((a[N - 1] == 1) && (b[N - 1] == 1)))",
		lineno=63];
	"uut.63:IF" -> "uut.63:BL"	 [cond="['a', 'N', 'b', 'N']",
		label="((a[N - 1] == 1) && (b[N - 1] == 1))",
		lineno=63];
}
