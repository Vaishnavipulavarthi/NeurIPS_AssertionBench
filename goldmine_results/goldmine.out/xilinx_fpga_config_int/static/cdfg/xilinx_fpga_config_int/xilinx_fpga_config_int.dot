strict digraph "compose( ,  )" {
	node [label="\N"];
	"Leaf_161:AL"	 [def_var="['M_r']",
		label="Leaf_161:AL"];
	"195:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c6987d0>",
		def_var="['mode_master_serial']",
		fillcolor=deepskyblue,
		label="195:AS
mode_master_serial = (M_r == 3'b000) & M_latched;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['M_r', 'M_latched']"];
	"Leaf_161:AL" -> "195:AS";
	"197:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c698cd0>",
		def_var="['mode_master_parallel']",
		fillcolor=deepskyblue,
		label="197:AS
mode_master_parallel = (M_r == 3'b000) & M_latched;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['M_r', 'M_latched']"];
	"Leaf_161:AL" -> "197:AS";
	"196:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c698a50>",
		def_var="['mode_slave_serial']",
		fillcolor=deepskyblue,
		label="196:AS
mode_slave_serial = (M_r == 3'b000) & M_latched;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['M_r', 'M_latched']"];
	"Leaf_161:AL" -> "196:AS";
	"199:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c69b1d0>",
		def_var="['mode_jtag']",
		fillcolor=deepskyblue,
		label="199:AS
mode_jtag = (M_r == 3'b000) & M_latched;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['M_r', 'M_latched']"];
	"Leaf_161:AL" -> "199:AS";
	"198:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c698f50>",
		def_var="['mode_slave_parallel']",
		fillcolor=deepskyblue,
		label="198:AS
mode_slave_parallel = (M_r == 3'b000) & M_latched;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['M_r', 'M_latched']"];
	"Leaf_161:AL" -> "198:AS";
	"311:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c250f10>",
		fillcolor=firebrick,
		label="311:NS
shift_cnt32 <= 5'b00000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c250f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_309:AL"	 [def_var="['shift_cnt32']",
		label="Leaf_309:AL"];
	"311:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"309:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c250d50>",
		clk_sens=False,
		fillcolor=gold,
		label="309:AL",
		sens="['cclk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['shift_cnt32', 'syn_det_ok']"];
	"310:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c250ed0>",
		fillcolor=springgreen,
		label="310:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"309:AL" -> "310:IF"	 [cond="[]",
		lineno=None];
	"351:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c264990>",
		def_var="['header_type_large_block']",
		fillcolor=deepskyblue,
		label="351:AS
header_type_large_block = header[31:29] == 3'b010;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['header']"];
	"471:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c586c10>",
		def_var="['write_LBC']",
		fillcolor=deepskyblue,
		label="471:AS
write_LBC = header_type_large_block & word_stb;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['header_type_large_block', 'word_stb']"];
	"351:AS" -> "471:AS";
	"213:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c69b4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="213:AL",
		sens="['sys_clk100']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['prescaler']"];
	"214:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c69b710>",
		fillcolor=firebrick,
		label="214:NS
prescaler <= prescaler + 8'b00000001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c69b710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"213:AL" -> "214:NS"	 [cond="[]",
		lineno=None];
	"404:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c5806d0>",
		def_var="['write_FDRI']",
		fillcolor=deepskyblue,
		label="404:AS
write_FDRI = cfg_write_stb & (header[16:13] == 4'b0010);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_write_stb', 'header']"];
	"501:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c579a50>",
		def_var="['trace2']",
		fillcolor=deepskyblue,
		label="501:AS
trace2 = write_LBC | write_CMD | write_COR | write_CRC | write_FLR | write_FAR | write_CTL | write_STAT | write_FDRI | write_\
RES_E | write_MASK;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['write_LBC', 'write_CMD', 'write_COR', 'write_CRC', 'write_FLR', 'write_FAR', 'write_CTL', 'write_STAT', 'write_FDRI', 'write_RES_\
E', 'write_MASK']"];
	"404:AS" -> "501:AS";
	"458:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c586850>",
		fillcolor=springgreen,
		label="458:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"459:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c586a10>",
		fillcolor=firebrick,
		label="459:NS
FAR <= sr[3:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c586a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"458:IF" -> "459:NS"	 [cond="['write_FAR']",
		label=write_FAR,
		lineno=458];
	"184:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c6980d0>",
		fillcolor=springgreen,
		label="184:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"185:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c6981d0>",
		fillcolor=firebrick,
		label="185:NS
enable_internal_cclk <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c6981d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"184:IF" -> "185:NS"	 [cond="['M_latched']",
		label=M_latched,
		lineno=184];
	"Leaf_309:AL" -> "309:AL";
	"320:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c26f390>",
		def_var="['word_stb']",
		fillcolor=deepskyblue,
		label="320:AS
word_stb = shift_cnt32 == 5'b11111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['shift_cnt32']"];
	"Leaf_309:AL" -> "320:AS";
	"490:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c579550>",
		fillcolor=springgreen,
		label="490:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"491:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c579650>",
		fillcolor=firebrick,
		label="491:NS
CRC_from_cfg[15:0] <= sr[15:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c579650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"490:IF" -> "491:NS"	 [cond="['write_CRC']",
		label=write_CRC,
		lineno=490];
	"231:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c69bfd0>",
		def_var="['cclk_O']",
		fillcolor=deepskyblue,
		label="231:AS
cclk_O = (enable_internal_cclk)? cclk_master : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['enable_internal_cclk', 'cclk_master']"];
	"442:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c578ed0>",
		fillcolor=firebrick,
		label="442:NS
COR <= 31'h00000000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c578ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_440:AL"	 [def_var="['COR']",
		label="Leaf_440:AL"];
	"442:NS" -> "Leaf_440:AL"	 [cond="[]",
		lineno=None];
	"Leaf_487:AL"	 [def_var="['CRC_from_cfg']",
		label="Leaf_487:AL"];
	"232:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c69d210>",
		def_var="['cclk_T']",
		fillcolor=deepskyblue,
		label="232:AS
cclk_T = enable_internal_cclk;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['enable_internal_cclk']"];
	"137:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c5310>",
		fillcolor=firebrick,
		label="137:NS
config_clear_cnt <= config_clear_cnt + 8'b00000001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c5310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_133:AL"	 [def_var="['config_clear_cnt']",
		label="Leaf_133:AL"];
	"137:NS" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"350:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c2646d0>",
		def_var="['header_type_command']",
		fillcolor=deepskyblue,
		label="350:AS
header_type_command = header[31:29] == 3'b001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['header']"];
	"367:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c28f210>",
		def_var="['cfg_write_stb']",
		fillcolor=deepskyblue,
		label="367:AS
cfg_write_stb = header_type_command & header_op_write & word_stb;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['header_type_command', 'header_op_write', 'word_stb']"];
	"350:AS" -> "367:AS";
	"354:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c264cd0>",
		def_var="['command_header_stb']",
		fillcolor=deepskyblue,
		label="354:AS
command_header_stb = header_type_command & word_stb;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['header_type_command', 'word_stb']"];
	"350:AS" -> "354:AS";
	"398:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c572e90>",
		def_var="['write_MASK']",
		fillcolor=deepskyblue,
		label="398:AS
write_MASK = cfg_write_stb & (header[16:13] == 4'b0110);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_write_stb', 'header']"];
	"398:AS" -> "501:AS";
	"408:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c580ad0>",
		def_var="['write_RES_E']",
		fillcolor=deepskyblue,
		label="408:AS
write_RES_E = cfg_write_stb & (header[16:13] == 4'b1110);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_write_stb', 'header']"];
	"408:AS" -> "501:AS";
	"135:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c5090>",
		fillcolor=firebrick,
		label="135:NS
config_clear_cnt <= 8'b00000000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c5090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"135:NS" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"367:AS" -> "404:AS";
	"367:AS" -> "398:AS";
	"367:AS" -> "408:AS";
	"386:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c28fe50>",
		def_var="['write_FAR']",
		fillcolor=deepskyblue,
		label="386:AS
write_FAR = cfg_write_stb & (header[16:13] == 4'b0001);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_write_stb', 'header']"];
	"367:AS" -> "386:AS";
	"395:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c572a90>",
		def_var="['write_CTL']",
		fillcolor=deepskyblue,
		label="395:AS
write_CTL = cfg_write_stb & (header[16:13] == 4'b0101);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_write_stb', 'header']"];
	"367:AS" -> "395:AS";
	"382:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c28fa50>",
		def_var="['write_COR']",
		fillcolor=deepskyblue,
		label="382:AS
write_COR = cfg_write_stb & (header[16:13] == 4'b1001);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_write_stb', 'header']"];
	"367:AS" -> "382:AS";
	"377:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c28f650>",
		def_var="['write_CMD']",
		fillcolor=deepskyblue,
		label="377:AS
write_CMD = cfg_write_stb & (header[16:13] == 4'b0100);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_write_stb', 'header']"];
	"367:AS" -> "377:AS";
	"392:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c572690>",
		def_var="['write_CRC']",
		fillcolor=deepskyblue,
		label="392:AS
write_CRC = cfg_write_stb & (header[16:13] == 4'b0000);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_write_stb', 'header']"];
	"367:AS" -> "392:AS";
	"389:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c572290>",
		def_var="['write_FLR']",
		fillcolor=deepskyblue,
		label="389:AS
write_FLR = cfg_write_stb & (header[16:13] == 4'b1011);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_write_stb', 'header']"];
	"367:AS" -> "389:AS";
	"401:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c5802d0>",
		def_var="['write_STAT']",
		fillcolor=deepskyblue,
		label="401:AS
write_STAT = cfg_write_stb & (header[16:13] == 4'b0111);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_write_stb', 'header']"];
	"367:AS" -> "401:AS";
	"161:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c2c6210>",
		clk_sens=True,
		fillcolor=gold,
		label="161:AL",
		sens="['sys_clk100']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['M_latched', 'config_memory_cleared', 'internal_reset', 'M1', 'M0', 'M2']"];
	"162:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c2c6410>",
		fillcolor=springgreen,
		label="162:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"161:AL" -> "162:IF"	 [cond="[]",
		lineno=None];
	"455:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c586750>",
		fillcolor=springgreen,
		label="455:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"455:IF" -> "458:IF"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=455];
	"456:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c586710>",
		fillcolor=firebrick,
		label="456:NS
FAR <= 31'h00000000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c586710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"455:IF" -> "456:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=455];
	"301:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c250b50>",
		fillcolor=firebrick,
		label="301:NS
syn_det_ok <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c250b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_296:AL"	 [def_var="['syn_det_ok']",
		label="Leaf_296:AL"];
	"301:NS" -> "Leaf_296:AL"	 [cond="[]",
		lineno=None];
	"421:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c578210>",
		fillcolor=springgreen,
		label="421:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"422:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c5783d0>",
		fillcolor=firebrick,
		label="422:NS
CMD <= sr[3:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c5783d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"421:IF" -> "422:NS"	 [cond="['write_CMD']",
		label=write_CMD,
		lineno=421];
	"444:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c586050>",
		fillcolor=springgreen,
		label="444:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"445:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c586210>",
		fillcolor=firebrick,
		label="445:NS
COR <= sr[3:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c586210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"444:IF" -> "445:NS"	 [cond="['write_COR']",
		label=write_COR,
		lineno=444];
	"454:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c586550>",
		clk_sens=False,
		fillcolor=gold,
		label="454:AL",
		sens="['cclk', 'internal_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['internal_reset', 'write_FAR', 'sr']"];
	"386:AS" -> "454:AL";
	"386:AS" -> "501:AS";
	"Leaf_417:AL"	 [def_var="['CMD']",
		label="Leaf_417:AL"];
	"430:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c578910>",
		def_var="['cfg_state_RCRC']",
		fillcolor=deepskyblue,
		label="430:AS
cfg_state_RCRC = CMD == 4'b0111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CMD']"];
	"Leaf_417:AL" -> "430:AS";
	"427:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c578610>",
		def_var="['cfg_state_START']",
		fillcolor=deepskyblue,
		label="427:AS
cfg_state_START = CMD == 4'b0101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['CMD']"];
	"Leaf_417:AL" -> "427:AS";
	"166:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c6890>",
		fillcolor=firebrick,
		label="166:NS
M_r <= { M2, M1, M0 };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c6890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"166:NS" -> "Leaf_161:AL"	 [cond="[]",
		lineno=None];
	"330:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c26f850>",
		fillcolor=springgreen,
		label="330:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"331:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c26f890>",
		fillcolor=firebrick,
		label="331:NS
header <= 32'h00000000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c26f890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"330:IF" -> "331:NS"	 [cond="['syn_det_ok']",
		label="(!syn_det_ok)",
		lineno=330];
	"332:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c26f9d0>",
		fillcolor=springgreen,
		label="332:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"330:IF" -> "332:IF"	 [cond="['syn_det_ok']",
		label="!((!syn_det_ok))",
		lineno=330];
	"Leaf_329:AL"	 [def_var="['header']",
		label="Leaf_329:AL"];
	"Leaf_329:AL" -> "351:AS";
	"Leaf_329:AL" -> "404:AS";
	"Leaf_329:AL" -> "350:AS";
	"Leaf_329:AL" -> "398:AS";
	"Leaf_329:AL" -> "408:AS";
	"Leaf_329:AL" -> "386:AS";
	"Leaf_329:AL" -> "395:AS";
	"343:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c264210>",
		def_var="['header_op_read']",
		fillcolor=deepskyblue,
		label="343:AS
header_op_read = header[28:27] == 2'b01;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['header']"];
	"Leaf_329:AL" -> "343:AS";
	"Leaf_329:AL" -> "382:AS";
	"Leaf_329:AL" -> "377:AS";
	"Leaf_329:AL" -> "392:AS";
	"342:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c26ff10>",
		def_var="['header_op_write']",
		fillcolor=deepskyblue,
		label="342:AS
header_op_write = header[28:27] == 2'b10;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['header']"];
	"Leaf_329:AL" -> "342:AS";
	"Leaf_329:AL" -> "389:AS";
	"Leaf_329:AL" -> "401:AS";
	"487:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c579090>",
		clk_sens=False,
		fillcolor=gold,
		label="487:AL",
		sens="['cclk', 'internal_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['internal_reset', 'write_CRC', 'sr']"];
	"488:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c579210>",
		fillcolor=springgreen,
		label="488:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"487:AL" -> "488:IF"	 [cond="[]",
		lineno=None];
	"154:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c2c5ed0>",
		fillcolor=springgreen,
		label="154:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"155:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c5e90>",
		fillcolor=firebrick,
		label="155:NS
M_latched <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c5e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"154:IF" -> "155:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=154];
	"157:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c2c6050>",
		fillcolor=springgreen,
		label="157:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"154:IF" -> "157:IF"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=154];
	"418:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c578110>",
		fillcolor=springgreen,
		label="418:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"418:IF" -> "421:IF"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=418];
	"419:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c5780d0>",
		fillcolor=firebrick,
		label="419:NS
CMD <= 4'b0000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c5780d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"418:IF" -> "419:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=418];
	"163:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c63d0>",
		fillcolor=firebrick,
		label="163:NS
M_r <= 3'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c63d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"163:NS" -> "Leaf_161:AL"	 [cond="[]",
		lineno=None];
	"162:IF" -> "163:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=162];
	"165:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c2c6550>",
		fillcolor=springgreen,
		label="165:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"162:IF" -> "165:IF"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=162];
	"158:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c6190>",
		fillcolor=firebrick,
		label="158:NS
M_latched <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c6190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_153:AL"	 [def_var="['M_latched']",
		label="Leaf_153:AL"];
	"158:NS" -> "Leaf_153:AL"	 [cond="[]",
		lineno=None];
	"331:NS" -> "Leaf_329:AL"	 [cond="[]",
		lineno=None];
	"Leaf_213:AL"	 [def_var="['prescaler']",
		label="Leaf_213:AL"];
	"214:NS" -> "Leaf_213:AL"	 [cond="[]",
		lineno=None];
	"422:NS" -> "Leaf_417:AL"	 [cond="[]",
		lineno=None];
	"395:AS" -> "501:AS";
	"250:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c69d7d0>",
		fillcolor=firebrick,
		label="250:NS
sr <= 32'h00000000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c69d7d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_248:AL"	 [def_var="['sr']",
		label="Leaf_248:AL"];
	"250:NS" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"171:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c2c6a10>",
		def_var="['init_T']",
		fillcolor=deepskyblue,
		label="171:AS
init_T = !M_latched;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['M_latched']"];
	"313:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c26f150>",
		fillcolor=firebrick,
		label="313:NS
shift_cnt32 <= shift_cnt32 + 5'b00001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c26f150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"313:NS" -> "Leaf_309:AL"	 [cond="[]",
		lineno=None];
	"223:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c69bbd0>",
		def_var="['master_clock']",
		fillcolor=deepskyblue,
		label="223:AS
master_clock = 1'b1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"225:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c69bd90>",
		def_var="['cclk']",
		fillcolor=deepskyblue,
		label="225:AS
cclk = (master_clock)? cclk_master : cclk_I;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['master_clock', 'cclk_master', 'cclk_I']"];
	"223:AS" -> "225:AS";
	"497:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c579710>",
		def_var="['trace1']",
		fillcolor=deepskyblue,
		label="497:AS
trace1 = cfg_state_START;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_state_START']"];
	"155:NS" -> "Leaf_153:AL"	 [cond="[]",
		lineno=None];
	"Leaf_454:AL"	 [def_var="['FAR']",
		label="Leaf_454:AL"];
	"456:NS" -> "Leaf_454:AL"	 [cond="[]",
		lineno=None];
	"182:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c6ed0>",
		fillcolor=firebrick,
		label="182:NS
enable_internal_cclk <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c6ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_180:AL"	 [def_var="['enable_internal_cclk']",
		label="Leaf_180:AL"];
	"182:NS" -> "Leaf_180:AL"	 [cond="[]",
		lineno=None];
	"185:NS" -> "Leaf_180:AL"	 [cond="[]",
		lineno=None];
	"248:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c69d610>",
		clk_sens=False,
		fillcolor=gold,
		label="248:AL",
		sens="['cclk', 'internal_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['internal_reset', 'din', 'sr']"];
	"249:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c69d810>",
		fillcolor=springgreen,
		label="249:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"248:AL" -> "249:IF"	 [cond="[]",
		lineno=None];
	"153:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c2c5cd0>",
		clk_sens=True,
		fillcolor=gold,
		label="153:AL",
		sens="['sys_clk100']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['config_memory_cleared', 'internal_reset']"];
	"153:AL" -> "154:IF"	 [cond="[]",
		lineno=None];
	"417:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c580f10>",
		clk_sens=False,
		fillcolor=gold,
		label="417:AL",
		sens="['cclk', 'internal_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['internal_reset', 'sr', 'write_CMD']"];
	"417:AL" -> "418:IF"	 [cond="[]",
		lineno=None];
	"144:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c5990>",
		fillcolor=firebrick,
		label="144:NS
config_memory_cleared <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c5990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_139:AL"	 [def_var="['config_memory_cleared']",
		label="Leaf_139:AL"];
	"144:NS" -> "Leaf_139:AL"	 [cond="[]",
		lineno=None];
	"139:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c2c5410>",
		clk_sens=True,
		fillcolor=gold,
		label="139:AL",
		sens="['sys_clk100']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['internal_reset', 'config_clear_cnt']"];
	"140:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c2c5650>",
		fillcolor=springgreen,
		label="140:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"139:AL" -> "140:IF"	 [cond="[]",
		lineno=None];
	"310:IF" -> "311:NS"	 [cond="['syn_det_ok']",
		label="(!syn_det_ok)",
		lineno=310];
	"310:IF" -> "313:NS"	 [cond="['syn_det_ok']",
		label="!((!syn_det_ok))",
		lineno=310];
	"134:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c2c5150>",
		fillcolor=springgreen,
		label="134:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"134:IF" -> "137:NS"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=134];
	"134:IF" -> "135:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=134];
	"440:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c578d10>",
		clk_sens=False,
		fillcolor=gold,
		label="440:AL",
		sens="['cclk', 'internal_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['internal_reset', 'sr', 'write_COR']"];
	"382:AS" -> "440:AL";
	"382:AS" -> "501:AS";
	"445:NS" -> "Leaf_440:AL"	 [cond="[]",
		lineno=None];
	"491:NS" -> "Leaf_487:AL"	 [cond="[]",
		lineno=None];
	"Leaf_296:AL" -> "309:AL";
	"329:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c26f690>",
		clk_sens=False,
		fillcolor=gold,
		label="329:AL",
		sens="['cclk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['word_stb', 'sr', 'syn_det_ok']"];
	"Leaf_296:AL" -> "329:AL";
	"Leaf_213:AL" -> "213:AL";
	"216:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c69b910>",
		def_var="['cclk_master']",
		fillcolor=deepskyblue,
		label="216:AS
cclk_master = prescaler[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['prescaler']"];
	"Leaf_213:AL" -> "216:AS";
	"181:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c2c6f10>",
		fillcolor=springgreen,
		label="181:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"181:IF" -> "184:IF"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=181];
	"181:IF" -> "182:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=181];
	"377:AS" -> "417:AL";
	"377:AS" -> "501:AS";
	"333:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c26fb10>",
		fillcolor=firebrick,
		label="333:NS
header <= sr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c26fb10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"333:NS" -> "Leaf_329:AL"	 [cond="[]",
		lineno=None];
	"332:IF" -> "333:NS"	 [cond="['word_stb']",
		label=word_stb,
		lineno=332];
	"392:AS" -> "487:AL";
	"392:AS" -> "501:AS";
	"342:AS" -> "367:AS";
	"441:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c578f10>",
		fillcolor=springgreen,
		label="441:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"440:AL" -> "441:IF"	 [cond="[]",
		lineno=None];
	"298:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2508d0>",
		fillcolor=firebrick,
		label="298:NS
syn_det_ok <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2508d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"298:NS" -> "Leaf_296:AL"	 [cond="[]",
		lineno=None];
	"454:AL" -> "455:IF"	 [cond="[]",
		lineno=None];
	"300:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c250a10>",
		fillcolor=springgreen,
		label="300:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"300:IF" -> "301:NS"	 [cond="['syn_det']",
		label=syn_det,
		lineno=300];
	"141:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c5610>",
		fillcolor=firebrick,
		label="141:NS
config_memory_cleared <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2c5610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"141:NS" -> "Leaf_139:AL"	 [cond="[]",
		lineno=None];
	"143:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c2c5890>",
		fillcolor=springgreen,
		label="143:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"143:IF" -> "144:NS"	 [cond="['config_clear_cnt']",
		label="config_clear_cnt[7]",
		lineno=143];
	"Leaf_248:AL" -> "487:AL";
	"Leaf_248:AL" -> "248:AL";
	"Leaf_248:AL" -> "417:AL";
	"Leaf_248:AL" -> "440:AL";
	"Leaf_248:AL" -> "454:AL";
	"292:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c250410>",
		def_var="['syn_det']",
		fillcolor=deepskyblue,
		label="292:AS
syn_det = sr[31:0] == 32'hAA995566;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sr']"];
	"Leaf_248:AL" -> "292:AS";
	"Leaf_248:AL" -> "329:AL";
	"471:AS" -> "501:AS";
	"Leaf_153:AL" -> "161:AL";
	"Leaf_153:AL" -> "171:AS";
	"Leaf_153:AL" -> "195:AS";
	"Leaf_153:AL" -> "197:AS";
	"Leaf_153:AL" -> "196:AS";
	"170:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c2c67d0>",
		def_var="['init_0']",
		fillcolor=deepskyblue,
		label="170:AS
init_0 = M_latched;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['M_latched']"];
	"Leaf_153:AL" -> "170:AS";
	"Leaf_153:AL" -> "199:AS";
	"Leaf_153:AL" -> "198:AS";
	"180:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c2c6cd0>",
		clk_sens=True,
		fillcolor=gold,
		label="180:AL",
		sens="['sys_clk100']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['M_latched', 'internal_reset']"];
	"Leaf_153:AL" -> "180:AL";
	"499:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c579890>",
		def_var="['done']",
		fillcolor=deepskyblue,
		label="499:AS
done = cfg_state_START;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cfg_state_START']"];
	"249:IF" -> "250:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=249];
	"252:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1e2c26eed0>",
		fillcolor=turquoise,
		label="252:BL
sr[0] <= din;
sr[1] <= sr[0];
sr[2] <= sr[1];
sr[3] <= sr[2];
sr[4] <= sr[3];
sr[5] <= sr[4];
sr[6] <= sr[5];
sr[7] <= sr[\
6];
sr[8] <= sr[7];
sr[9] <= sr[8];
sr[10] <= sr[9];
sr[11] <= sr[10];
sr[12] <= sr[11];
sr[13] <= sr[12];
sr[14] <= sr[13];
sr[\
15] <= sr[14];
sr[16] <= sr[15];
sr[17] <= sr[16];
sr[18] <= sr[17];
sr[19] <= sr[18];
sr[20] <= sr[19];
sr[21] <= sr[20];
sr[22] <= \
sr[21];
sr[23] <= sr[22];
sr[24] <= sr[23];
sr[25] <= sr[24];
sr[26] <= sr[25];
sr[27] <= sr[26];
sr[28] <= sr[27];
sr[29] <= sr[\
28];
sr[30] <= sr[29];
sr[31] <= sr[30];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c69da10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f1e2c69dc50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c69de90>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c69f110>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c69f350>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c69f590>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c69f7d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c69fa10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c69fc50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c69fe90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c6a3110>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c6a3350>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c6a3590>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c6a37d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c6a3a10>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c6a3c50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c6a3e90>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c266110>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c266350>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c266590>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c2667d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c266a10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c266c50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c266e90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c26e110>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c26e350>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c26e590>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c26e7d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c26ea10>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c26ec50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c26ee90>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f1e2c250110>]",
		style=filled,
		typ=Block];
	"249:IF" -> "252:BL"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=249];
	"296:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c250750>",
		clk_sens=False,
		fillcolor=gold,
		label="296:AL",
		sens="['cclk', 'internal_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['internal_reset', 'syn_det']"];
	"292:AS" -> "296:AL";
	"320:AS" -> "367:AS";
	"320:AS" -> "354:AS";
	"320:AS" -> "471:AS";
	"320:AS" -> "329:AL";
	"165:IF" -> "166:NS"	 [cond="['M_latched', 'config_memory_cleared']",
		label="(!M_latched & config_memory_cleared)",
		lineno=165];
	"389:AS" -> "501:AS";
	"252:BL" -> "Leaf_248:AL"	 [cond="[]",
		lineno=None];
	"116:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c56f810>",
		def_var="['init']",
		fillcolor=deepskyblue,
		label="116:AS
init = init_I & init_O;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['init_I', 'init_O']"];
	"133:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1e2c56f6d0>",
		clk_sens=True,
		fillcolor=gold,
		label="133:AL",
		sens="['sys_clk100']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['internal_reset', 'config_clear_cnt']"];
	"133:AL" -> "134:IF"	 [cond="[]",
		lineno=None];
	"489:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c579250>",
		fillcolor=firebrick,
		label="489:NS
CRC_from_cfg <= 16'h0000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1e2c579250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"489:NS" -> "Leaf_487:AL"	 [cond="[]",
		lineno=None];
	"488:IF" -> "490:IF"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=488];
	"488:IF" -> "489:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=488];
	"297:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1e2c250910>",
		fillcolor=springgreen,
		label="297:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"297:IF" -> "298:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=297];
	"297:IF" -> "300:IF"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=297];
	"Leaf_139:AL" -> "161:AL";
	"Leaf_139:AL" -> "153:AL";
	"296:AL" -> "297:IF"	 [cond="[]",
		lineno=None];
	"459:NS" -> "Leaf_454:AL"	 [cond="[]",
		lineno=None];
	"157:IF" -> "158:NS"	 [cond="['config_memory_cleared']",
		label=config_memory_cleared,
		lineno=157];
	"123:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1e2c56f9d0>",
		def_var="['internal_reset']",
		fillcolor=deepskyblue,
		label="123:AS
internal_reset = !prog_b | !por;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['prog_b', 'por']"];
	"123:AS" -> "161:AL";
	"123:AS" -> "487:AL";
	"123:AS" -> "248:AL";
	"123:AS" -> "153:AL";
	"123:AS" -> "417:AL";
	"123:AS" -> "139:AL";
	"123:AS" -> "440:AL";
	"123:AS" -> "454:AL";
	"123:AS" -> "133:AL";
	"123:AS" -> "296:AL";
	"123:AS" -> "180:AL";
	"216:AS" -> "231:AS";
	"216:AS" -> "225:AS";
	"401:AS" -> "501:AS";
	"180:AL" -> "181:IF"	 [cond="[]",
		lineno=None];
	"140:IF" -> "141:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=140];
	"140:IF" -> "143:IF"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=140];
	"427:AS" -> "497:AS";
	"427:AS" -> "499:AS";
	"Leaf_180:AL" -> "231:AS";
	"Leaf_180:AL" -> "232:AS";
	"329:AL" -> "330:IF"	 [cond="[]",
		lineno=None];
	"Leaf_133:AL" -> "139:AL";
	"Leaf_133:AL" -> "133:AL";
	"441:IF" -> "442:NS"	 [cond="['internal_reset']",
		label=internal_reset,
		lineno=441];
	"441:IF" -> "444:IF"	 [cond="['internal_reset']",
		label="!(internal_reset)",
		lineno=441];
	"419:NS" -> "Leaf_417:AL"	 [cond="[]",
		lineno=None];
}
