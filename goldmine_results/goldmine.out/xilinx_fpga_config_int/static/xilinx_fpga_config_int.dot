digraph "" {
	write_FLR -> trace2	 [weight=1.0];
	syn_det_ok -> header	 [weight=2.0];
	syn_det_ok -> shift_cnt32	 [weight=2.0];
	enable_internal_cclk -> cclk_O	 [weight=1.0];
	enable_internal_cclk -> cclk_T	 [weight=1.0];
	write_CMD -> CMD	 [weight=1.0];
	write_CMD -> trace2	 [weight=1.0];
	write_COR -> COR	 [weight=1.0];
	write_COR -> trace2	 [weight=1.0];
	CMD -> cfg_state_START	 [weight=1.0];
	CMD -> cfg_state_RCRC	 [weight=1.0];
	por -> internal_reset	 [weight=1.0];
	cfg_state_START -> done	 [weight=1.0];
	cfg_state_START -> trace1	 [weight=1.0];
	header -> write_FLR	 [weight=1.0];
	header -> write_CMD	 [weight=1.0];
	header -> write_COR	 [weight=1.0];
	header -> write_CTL	 [weight=1.0];
	header -> write_CRC	 [weight=1.0];
	header -> write_FAR	 [weight=1.0];
	header -> header_type_large_block	 [weight=1.0];
	header -> header_op_read	 [weight=1.0];
	header -> write_STAT	 [weight=1.0];
	header -> write_MASK	 [weight=1.0];
	header -> write_RES_E	 [weight=1.0];
	header -> header_type_command	 [weight=1.0];
	header -> header_op_write	 [weight=1.0];
	header -> write_FDRI	 [weight=1.0];
	write_CTL -> trace2	 [weight=1.0];
	M0 -> M_r	 [weight=1.0];
	M_r -> mode_slave_parallel	 [weight=1.0];
	M_r -> mode_master_serial	 [weight=1.0];
	M_r -> mode_jtag	 [weight=1.0];
	M_r -> mode_slave_serial	 [weight=1.0];
	M_r -> mode_master_parallel	 [weight=1.0];
	write_CRC -> CRC_from_cfg	 [weight=1.0];
	write_CRC -> trace2	 [weight=1.0];
	cclk_master -> cclk_O	 [weight=1.0];
	cclk_master -> cclk	 [weight=1.0];
	write_FAR -> FAR	 [weight=1.0];
	write_FAR -> trace2	 [weight=1.0];
	header_type_large_block -> write_LBC	 [weight=1.0];
	prescaler -> cclk_master	 [weight=1.0];
	prescaler -> prescaler	 [weight=1.0];
	word_stb -> header	 [weight=1.0];
	word_stb -> write_LBC	 [weight=1.0];
	word_stb -> cfg_write_stb	 [weight=1.0];
	word_stb -> command_header_stb	 [weight=1.0];
	internal_reset -> syn_det_ok	 [weight=2.0];
	internal_reset -> enable_internal_cclk	 [weight=2.0];
	internal_reset -> CMD	 [weight=2.0];
	internal_reset -> COR	 [weight=2.0];
	internal_reset -> M_r	 [weight=2.0];
	internal_reset -> CRC_from_cfg	 [weight=2.0];
	internal_reset -> FAR	 [weight=2.0];
	internal_reset -> config_clear_cnt	 [weight=2.0];
	internal_reset -> M_latched	 [weight=2.0];
	internal_reset -> sr	 [weight=33.0];
	internal_reset -> config_memory_cleared	 [weight=2.0];
	cclk_I -> cclk	 [weight=1.0];
	write_LBC -> trace2	 [weight=1.0];
	cfg_write_stb -> write_FLR	 [weight=1.0];
	cfg_write_stb -> write_CMD	 [weight=1.0];
	cfg_write_stb -> write_COR	 [weight=1.0];
	cfg_write_stb -> write_CTL	 [weight=1.0];
	cfg_write_stb -> write_CRC	 [weight=1.0];
	cfg_write_stb -> write_FAR	 [weight=1.0];
	cfg_write_stb -> write_STAT	 [weight=1.0];
	cfg_write_stb -> write_MASK	 [weight=1.0];
	cfg_write_stb -> write_RES_E	 [weight=1.0];
	cfg_write_stb -> write_FDRI	 [weight=1.0];
	config_clear_cnt -> config_clear_cnt	 [weight=1.0];
	config_clear_cnt -> config_memory_cleared	 [weight=1.0];
	M_latched -> enable_internal_cclk	 [weight=1.0];
	M_latched -> M_r	 [weight=1.0];
	M_latched -> mode_slave_parallel	 [weight=1.0];
	M_latched -> mode_master_serial	 [weight=1.0];
	M_latched -> mode_jtag	 [weight=1.0];
	M_latched -> mode_slave_serial	 [weight=1.0];
	M_latched -> init_0	 [weight=1.0];
	M_latched -> mode_master_parallel	 [weight=1.0];
	M_latched -> init_T	 [weight=1.0];
	write_STAT -> trace2	 [weight=1.0];
	write_MASK -> trace2	 [weight=1.0];
	write_RES_E -> trace2	 [weight=1.0];
	header_type_command -> cfg_write_stb	 [weight=1.0];
	header_type_command -> command_header_stb	 [weight=1.0];
	master_clock -> cclk	 [weight=1.0];
	syn_det -> syn_det_ok	 [weight=1.0];
	header_op_write -> cfg_write_stb	 [weight=1.0];
	din -> sr	 [weight=1.0];
	sr -> CMD	 [weight=1.0];
	sr -> header	 [weight=1.0];
	sr -> COR	 [weight=1.0];
	sr -> CRC_from_cfg	 [weight=1.0];
	sr -> FAR	 [weight=1.0];
	sr -> syn_det	 [weight=1.0];
	sr -> sr	 [weight=31.0];
	config_memory_cleared -> M_r	 [weight=1.0];
	config_memory_cleared -> M_latched	 [weight=1.0];
	shift_cnt32 -> word_stb	 [weight=1.0];
	shift_cnt32 -> shift_cnt32	 [weight=1.0];
	write_FDRI -> trace2	 [weight=1.0];
	init_O -> init	 [weight=1.0];
	prog_b -> internal_reset	 [weight=1.0];
	init_I -> init	 [weight=1.0];
	M1 -> M_r	 [weight=1.0];
	M2 -> M_r	 [weight=1.0];
}
