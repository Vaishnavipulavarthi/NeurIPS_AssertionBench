strict digraph "compose( ,  )" {
	node [label="\N"];
	"node_u0.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u0.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u0.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u0.Leaf_95:AL"];
	"node_u0.103:BS" -> "node_u0.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u1.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u1.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u1.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u1.Leaf_95:AL"];
	"node_u1.103:BS" -> "node_u1.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u2.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u2.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u2.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u2.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u2.102:IF" -> "node_u2.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u10.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u10.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u10.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u10.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u10.107:IF" -> "node_u10.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u10.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u10.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u10.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u10.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u10.95:AL" -> "node_u10.96:BL"	 [cond="[]",
		lineno=None];
	"node_u8.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u8.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u8.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u8.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u8.102:IF" -> "node_u8.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u7.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u7.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u7.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u7.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u7.112:CA" -> "node_u7.113:BL"	 [cond="[]",
		lineno=None];
	"node_u6.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u6.Leaf_95:AL"];
	"node_u6.Leaf_95:AL" -> "node_u10.95:AL";
	"node_u10.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u10.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u6.Leaf_95:AL" -> "node_u10.85:AL";
	"186:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc8308d0>",
		def_var="['c1l']",
		fillcolor=deepskyblue,
		label="186:AS
c1l = node_u6_lo;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u6_lo']"];
	"node_u6.Leaf_95:AL" -> "186:AS";
	"node_u10.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u10.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u10.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u10.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u10.102:IF" -> "node_u10.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u11.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u11.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u11.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u11.Leaf_95:AL"];
	"node_u11.113:BL" -> "node_u11.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u1.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u1.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u1.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u1.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u1.98:CA" -> "node_u1.99:BL"	 [cond="[]",
		lineno=None];
	"node_u10.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u10.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u10.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u10.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u10.109:IF" -> "node_u10.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u6.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u6.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u6.113:BL" -> "node_u6.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u3.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u3.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u3.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u3.Leaf_85:AL"];
	"node_u3.89:BL" -> "node_u3.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u4.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u4.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u4.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u4.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u4.97:CS" -> "node_u4.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u4.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u4.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u4.97:CS" -> "node_u4.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u4.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u4.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u4.97:CS" -> "node_u4.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u7.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u7.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u7.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u7.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u7.98:CA" -> "node_u7.99:BL"	 [cond="[]",
		lineno=None];
	"node_u4.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u4.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u4.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u4.Leaf_85:AL"];
	"node_u4.87:BL" -> "node_u4.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u1.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u1.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u1.99:BL" -> "node_u1.102:IF"	 [cond="[]",
		lineno=None];
	"node_u1.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u1.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u1.99:BL" -> "node_u1.100:IF"	 [cond="[]",
		lineno=None];
	"node_u9.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u9.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u9.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u9.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u9.107:IF" -> "node_u9.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u3.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u3.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u3.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u3.Leaf_95:AL"];
	"node_u3.101:BS" -> "node_u3.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u5.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u5.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u5.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u5.Leaf_95:AL"];
	"node_u5.108:BS" -> "node_u5.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u9.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u9.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u9.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u9.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u9.112:CA" -> "node_u9.113:BL"	 [cond="[]",
		lineno=None];
	"node_u4.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u4.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u4.96:BL" -> "node_u4.97:CS"	 [cond="[]",
		lineno=None];
	"node_u6.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u6.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u6.101:BS" -> "node_u6.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u4.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u4.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u4.87:IF" -> "node_u4.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u4.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u4.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u4.87:IF" -> "node_u4.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u10.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u10.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u10.99:BL" -> "node_u10.102:IF"	 [cond="[]",
		lineno=None];
	"node_u10.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u10.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u10.99:BL" -> "node_u10.100:IF"	 [cond="[]",
		lineno=None];
	"node_u7.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u7.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u7.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u7.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u7.106:BL" -> "node_u7.107:IF"	 [cond="[]",
		lineno=None];
	"node_u7.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u7.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u7.106:BL" -> "node_u7.109:IF"	 [cond="[]",
		lineno=None];
	"183:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc830510>",
		def_var="['c2l']",
		fillcolor=deepskyblue,
		label="183:AS
c2l = node_u5_lo;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u5_lo']"];
	"node_u10.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u10.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u10.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u10.Leaf_95:AL"];
	"node_u10.101:BS" -> "node_u10.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u1.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u1.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u1.97:CS" -> "node_u1.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u1.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u1.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u1.97:CS" -> "node_u1.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u1.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u1.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u1.97:CS" -> "node_u1.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"184:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc830650>",
		def_var="['c2h']",
		fillcolor=deepskyblue,
		label="184:AS
c2h = node_u9_hi;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u9_hi']"];
	"node_u0.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u0.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u0.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u0.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u0.100:IF" -> "node_u0.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u10.100:IF" -> "node_u10.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u1.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u1.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u1.101:BS" -> "node_u1.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u11.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u11.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u11.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u11.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u11.85:AL" -> "node_u11.86:BL"	 [cond="[]",
		lineno=None];
	"node_u9.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u9.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u9.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u9.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u9.95:AL" -> "node_u9.96:BL"	 [cond="[]",
		lineno=None];
	"187:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc830a10>",
		def_var="['c1h']",
		fillcolor=deepskyblue,
		label="187:AS
c1h = node_u10_hi;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u10_hi']"];
	"node_u6.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u6.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u6.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u6.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u6.106:BL" -> "node_u6.107:IF"	 [cond="[]",
		lineno=None];
	"node_u6.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u6.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u6.106:BL" -> "node_u6.109:IF"	 [cond="[]",
		lineno=None];
	"node_u8.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u8.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u8.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u8.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u8.85:AL" -> "node_u8.86:BL"	 [cond="[]",
		lineno=None];
	"node_u5.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u5.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u5.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u5.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u5.98:CA" -> "node_u5.99:BL"	 [cond="[]",
		lineno=None];
	"node_u3.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u3.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u3.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u3.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u3.105:CA" -> "node_u3.106:BL"	 [cond="[]",
		lineno=None];
	"node_u4.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u4.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u4.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u4.Leaf_95:AL"];
	"node_u4.113:BL" -> "node_u4.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u10.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u10.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u10.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u10.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u10.86:BL" -> "node_u10.87:IF"	 [cond="[]",
		lineno=None];
	"node_u2.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u2.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u2.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u2.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u2.100:IF" -> "node_u2.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u9.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u9.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u9.96:BL" -> "node_u9.97:CS"	 [cond="[]",
		lineno=None];
	"node_u6.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u6.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u6.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u6.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u6.86:BL" -> "node_u6.87:IF"	 [cond="[]",
		lineno=None];
	"node_u8.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u8.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u8.86:BL" -> "node_u8.87:IF"	 [cond="[]",
		lineno=None];
	"node_u2.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u2.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u2.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u2.Leaf_95:AL"];
	"node_u2.108:BS" -> "node_u2.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u11.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u11.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u11.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u11.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u11.107:IF" -> "node_u11.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u10.108:BS" -> "node_u10.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u7.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u7.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u7.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u7.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u7.100:IF" -> "node_u7.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u3.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u3.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u3.103:BS" -> "node_u3.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u4.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u4.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u4.98:CA" -> "node_u4.99:BL"	 [cond="[]",
		lineno=None];
	"node_u3.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u3.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u3.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u3.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u3.112:CA" -> "node_u3.113:BL"	 [cond="[]",
		lineno=None];
	"node_u8.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u8.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u8.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u8.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u8.97:CS" -> "node_u8.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u8.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u8.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u8.97:CS" -> "node_u8.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u8.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u8.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u8.97:CS" -> "node_u8.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u0.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u0.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u0.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u0.Leaf_85:AL"];
	"node_u0.87:BL" -> "node_u0.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u7.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u7.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u7.97:CS" -> "node_u7.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u7.97:CS" -> "node_u7.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u7.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u7.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u7.97:CS" -> "node_u7.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u4.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u4.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u4.105:CA" -> "node_u4.106:BL"	 [cond="[]",
		lineno=None];
	"node_u3.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u3.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u3.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u3.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u3.85:AL" -> "node_u3.86:BL"	 [cond="[]",
		lineno=None];
	"node_u9.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u9.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u9.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u9.Leaf_95:AL"];
	"node_u9.101:BS" -> "node_u9.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u0.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u0.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u0.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u0.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u0.112:CA" -> "node_u0.113:BL"	 [cond="[]",
		lineno=None];
	"node_u7.105:CA" -> "node_u7.106:BL"	 [cond="[]",
		lineno=None];
	"node_u5.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u5.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u5.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u5.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u5.112:CA" -> "node_u5.113:BL"	 [cond="[]",
		lineno=None];
	"node_u8.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u8.Leaf_95:AL"];
	"181:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc830290>",
		def_var="['c3h']",
		fillcolor=deepskyblue,
		label="181:AS
c3h = node_u8_hi;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u8_hi']"];
	"node_u8.Leaf_95:AL" -> "181:AS";
	"182:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc8303d0>",
		def_var="['c3m']",
		fillcolor=deepskyblue,
		label="182:AS
c3m = node_u8_lo;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u8_lo']"];
	"node_u8.Leaf_95:AL" -> "182:AS";
	"node_u7.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u7.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u7.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u7.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u7.86:BL" -> "node_u7.87:IF"	 [cond="[]",
		lineno=None];
	"node_u6.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u6.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u6.107:IF" -> "node_u6.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u7.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u7.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u7.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u7.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u7.102:IF" -> "node_u7.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u8.103:BS" -> "node_u8.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u9.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u9.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u9.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u9.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u9.99:BL" -> "node_u9.100:IF"	 [cond="[]",
		lineno=None];
	"node_u9.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u9.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u9.99:BL" -> "node_u9.102:IF"	 [cond="[]",
		lineno=None];
	"191:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc830f10>",
		def_var="['c0l']",
		fillcolor=deepskyblue,
		label="191:AS
c0l = node_u7_lo;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u7_lo']"];
	"node_u11.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u11.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u11.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u11.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u11.95:AL" -> "node_u11.96:BL"	 [cond="[]",
		lineno=None];
	"node_u7.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u7.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u7.96:BL" -> "node_u7.97:CS"	 [cond="[]",
		lineno=None];
	"node_u10.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u10.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u10.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u10.Leaf_85:AL"];
	"node_u10.89:BL" -> "node_u10.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u5.113:BL" -> "node_u5.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u1.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u1.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u1.113:BL" -> "node_u1.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u9.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u9.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u9.103:BS" -> "node_u9.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u1.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u1.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u1.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u1.Leaf_85:AL"];
	"node_u1.87:BL" -> "node_u1.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u11.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u11.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u11.96:BL" -> "node_u11.97:CS"	 [cond="[]",
		lineno=None];
	"node_u1.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u1.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u1.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u1.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u1.95:AL" -> "node_u1.96:BL"	 [cond="[]",
		lineno=None];
	"node_u4.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u4.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u4.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u4.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u4.85:AL" -> "node_u4.86:BL"	 [cond="[]",
		lineno=None];
	"node_u11.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u11.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u11.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u11.Leaf_85:AL"];
	"node_u11.87:BL" -> "node_u11.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u1.112:CA" -> "node_u1.113:BL"	 [cond="[]",
		lineno=None];
	"node_u10.Leaf_85:AL" -> "node_u10.95:AL";
	"node_u5.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u5.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u5.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u5.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u5.96:BL" -> "node_u5.97:CS"	 [cond="[]",
		lineno=None];
	"node_u5.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u5.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u5.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u5.Leaf_85:AL"];
	"node_u5.87:BL" -> "node_u5.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u2.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u2.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u2.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u2.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u2.85:AL" -> "node_u2.86:BL"	 [cond="[]",
		lineno=None];
	"node_u0.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u0.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u0.110:BS" -> "node_u0.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u6.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u6.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u6.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u6.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u6.95:AL" -> "node_u6.96:BL"	 [cond="[]",
		lineno=None];
	"node_u2.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u2.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u2.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u2.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u2.112:CA" -> "node_u2.113:BL"	 [cond="[]",
		lineno=None];
	"node_u5.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u5.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u5.89:BL" -> "node_u5.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u4.86:BL" -> "node_u4.87:IF"	 [cond="[]",
		lineno=None];
	"node_u2.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u2.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u2.97:CS" -> "node_u2.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u2.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u2.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u2.97:CS" -> "node_u2.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u2.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u2.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u2.97:CS" -> "node_u2.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u2.103:BS" -> "node_u2.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u2.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u2.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u2.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u2.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u2.95:AL" -> "node_u2.96:BL"	 [cond="[]",
		lineno=None];
	"node_u0.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u0.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u0.108:BS" -> "node_u0.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u3.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u3.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u3.108:BS" -> "node_u3.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u2.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u2.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u2.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u2.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u2.106:BL" -> "node_u2.107:IF"	 [cond="[]",
		lineno=None];
	"node_u2.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u2.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u2.106:BL" -> "node_u2.109:IF"	 [cond="[]",
		lineno=None];
	"node_u9.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u9.Leaf_85:AL"];
	"node_u9.Leaf_85:AL" -> "node_u9.95:AL";
	"node_u10.Leaf_95:AL" -> "187:AS";
	"188:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc830b50>",
		def_var="['c1m']",
		fillcolor=deepskyblue,
		label="188:AS
c1m = node_u10_lo;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u10_lo']"];
	"node_u10.Leaf_95:AL" -> "188:AS";
	"189:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc830c90>",
		def_var="['c0h']",
		fillcolor=deepskyblue,
		label="189:AS
c0h = node_u11_hi;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u11_hi']"];
	"node_u10.110:BS" -> "node_u10.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u4.112:CA" -> "node_u4.113:BL"	 [cond="[]",
		lineno=None];
	"node_u9.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u9.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u9.87:BL" -> "node_u9.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u4.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u4.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u4.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u4.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u4.107:IF" -> "node_u4.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u0.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u0.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u0.109:IF" -> "node_u0.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u8.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u8.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u8.99:BL" -> "node_u8.102:IF"	 [cond="[]",
		lineno=None];
	"node_u8.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u8.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u8.99:BL" -> "node_u8.100:IF"	 [cond="[]",
		lineno=None];
	"node_u0.101:BS" -> "node_u0.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u7.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u7.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u7.Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="node_u7.Leaf_95:AL"];
	"node_u7.110:BS" -> "node_u7.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u9.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u9.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u9.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u9.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u9.105:CA" -> "node_u9.106:BL"	 [cond="[]",
		lineno=None];
	"node_u9.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u9.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u9.110:BS" -> "node_u9.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u0.113:BL" -> "node_u0.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u0.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u0.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u0.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u0.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u0.98:CA" -> "node_u0.99:BL"	 [cond="[]",
		lineno=None];
	"node_u5.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u5.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u5.95:AL" -> "node_u5.96:BL"	 [cond="[]",
		lineno=None];
	"node_u3.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u3.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u3.87:IF" -> "node_u3.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u3.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u3.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u3.87:IF" -> "node_u3.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u7.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u7.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u7.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u7.Leaf_85:AL"];
	"node_u7.87:BL" -> "node_u7.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u2.107:IF" -> "node_u2.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u1.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u1.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u1.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u1.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u1.107:IF" -> "node_u1.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u6.108:BS" -> "node_u6.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u0.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u0.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u0.102:IF" -> "node_u0.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u8.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u8.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u8.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u8.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u8.107:IF" -> "node_u8.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u5.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u5.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u5.99:BL" -> "node_u5.100:IF"	 [cond="[]",
		lineno=None];
	"node_u5.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u5.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u5.99:BL" -> "node_u5.102:IF"	 [cond="[]",
		lineno=None];
	"node_u0.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u0.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u0.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u0.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u0.86:BL" -> "node_u0.87:IF"	 [cond="[]",
		lineno=None];
	"node_u2.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u2.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u2.98:CA" -> "node_u2.99:BL"	 [cond="[]",
		lineno=None];
	"node_u10.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u10.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u10.113:BL" -> "node_u10.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u9.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u9.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u9.87:IF" -> "node_u9.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u9.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u9.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u9.87:IF" -> "node_u9.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u9.100:IF" -> "node_u9.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u5.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u5.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u5.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u5.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u5.106:BL" -> "node_u5.107:IF"	 [cond="[]",
		lineno=None];
	"node_u5.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u5.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u5.106:BL" -> "node_u5.109:IF"	 [cond="[]",
		lineno=None];
	"node_u2.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u2.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u2.109:IF" -> "node_u2.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u8.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u8.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u8.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u8.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u8.95:AL" -> "node_u8.96:BL"	 [cond="[]",
		lineno=None];
	"node_u9.102:IF" -> "node_u9.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u5.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u5.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u5.110:BS" -> "node_u5.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u2.99:BL" -> "node_u2.102:IF"	 [cond="[]",
		lineno=None];
	"node_u2.99:BL" -> "node_u2.100:IF"	 [cond="[]",
		lineno=None];
	"node_u4.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u4.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u4.101:BS" -> "node_u4.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u7.108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="node_u7.108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u7.108:BS" -> "node_u7.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u8.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u8.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u8.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u8.Leaf_85:AL"];
	"node_u8.89:BL" -> "node_u8.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u4.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u4.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u4.110:BS" -> "node_u4.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u3.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u3.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u3.106:BL" -> "node_u3.109:IF"	 [cond="[]",
		lineno=None];
	"node_u3.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u3.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u3.106:BL" -> "node_u3.107:IF"	 [cond="[]",
		lineno=None];
	"node_u9.108:BS" -> "node_u9.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u8.96:BL" -> "node_u8.97:CS"	 [cond="[]",
		lineno=None];
	"node_u10.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u10.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u10.96:BL" -> "node_u10.97:CS"	 [cond="[]",
		lineno=None];
	"node_u7.113:BL" -> "node_u7.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u7.107:IF" -> "node_u7.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u11.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u11.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u11.112:CA" -> "node_u11.113:BL"	 [cond="[]",
		lineno=None];
	"node_u11.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u11.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u11.86:BL" -> "node_u11.87:IF"	 [cond="[]",
		lineno=None];
	"node_u6.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u6.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u6.112:CA" -> "node_u6.113:BL"	 [cond="[]",
		lineno=None];
	"node_u2.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u2.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u2.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u2.Leaf_85:AL"];
	"node_u2.89:BL" -> "node_u2.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u2.Leaf_95:AL" -> "node_u10.95:AL";
	"node_u2.Leaf_95:AL" -> "node_u6.95:AL";
	"node_u2.Leaf_95:AL" -> "node_u10.85:AL";
	"node_u6.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u6.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u2.Leaf_95:AL" -> "node_u6.85:AL";
	"node_u10.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u10.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u10.87:BL" -> "node_u10.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u0.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u0.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u0.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u0.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u0.105:CA" -> "node_u0.106:BL"	 [cond="[]",
		lineno=None];
	"node_u3.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u3.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u3.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u3.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u3.95:AL" -> "node_u3.96:BL"	 [cond="[]",
		lineno=None];
	"node_u10.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u10.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u10.97:CS" -> "node_u10.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u10.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u10.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u10.97:CS" -> "node_u10.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u10.112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="node_u10.112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u10.97:CS" -> "node_u10.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u7.101:BS" -> "node_u7.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u2.110:BS" -> "node_u2.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u1.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u1.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u1.106:BL" -> "node_u1.107:IF"	 [cond="[]",
		lineno=None];
	"node_u1.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u1.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u1.106:BL" -> "node_u1.109:IF"	 [cond="[]",
		lineno=None];
	"node_u3.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u3.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u3.110:BS" -> "node_u3.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u10.98:CA" -> "node_u10.99:BL"	 [cond="[]",
		lineno=None];
	"node_u3.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u3.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u3.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u3.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u3.99:BL" -> "node_u3.100:IF"	 [cond="[]",
		lineno=None];
	"node_u3.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u3.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u3.99:BL" -> "node_u3.102:IF"	 [cond="[]",
		lineno=None];
	"node_u6.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u6.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u6.Leaf_85:AL"	 [def_var="['sel0']",
		label="node_u6.Leaf_85:AL"];
	"node_u6.87:BL" -> "node_u6.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u1.96:BL" -> "node_u1.97:CS"	 [cond="[]",
		lineno=None];
	"node_u1.102:IF" -> "node_u1.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u1.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u1.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u1.109:IF" -> "node_u1.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u8.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u8.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u8.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u8.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u8.109:IF" -> "node_u8.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u6.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u6.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u6.97:CS" -> "node_u6.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u6.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u6.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u6.97:CS" -> "node_u6.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u6.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u6.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u6.97:CS" -> "node_u6.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u4.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u4.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u4.Leaf_85:AL" -> "node_u4.95:AL";
	"node_u6.87:IF" -> "node_u6.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u6.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u6.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u6.87:IF" -> "node_u6.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u0.106:BL" -> "node_u0.109:IF"	 [cond="[]",
		lineno=None];
	"node_u0.107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="node_u0.107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u0.106:BL" -> "node_u0.107:IF"	 [cond="[]",
		lineno=None];
	"node_u1.105:CA" -> "node_u1.106:BL"	 [cond="[]",
		lineno=None];
	"node_u9.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u9.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u9.86:BL" -> "node_u9.87:IF"	 [cond="[]",
		lineno=None];
	"node_u5.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u5.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u5.103:BS" -> "node_u5.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u0.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u0.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u0.85:AL" -> "node_u0.86:BL"	 [cond="[]",
		lineno=None];
	"node_u5.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u5.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u5.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u5.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u5.86:BL" -> "node_u5.87:IF"	 [cond="[]",
		lineno=None];
	"190:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc830dd0>",
		def_var="['c0m']",
		fillcolor=deepskyblue,
		label="190:AS
c0m = node_u11_lo;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u11_lo']"];
	"node_u10.85:AL" -> "node_u10.86:BL"	 [cond="[]",
		lineno=None];
	"node_u9.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u9.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u9.85:AL" -> "node_u9.86:BL"	 [cond="[]",
		lineno=None];
	"node_u2.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u2.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u2.87:BL" -> "node_u2.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u5.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u5.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u5.85:AL" -> "node_u5.86:BL"	 [cond="[]",
		lineno=None];
	"node_u8.113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="node_u8.113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"node_u8.112:CA" -> "node_u8.113:BL"	 [cond="[]",
		lineno=None];
	"node_u6.Leaf_85:AL" -> "node_u6.95:AL";
	"node_u11.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u11.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u11.89:BL" -> "node_u11.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u1.86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="node_u1.86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u1.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u1.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u1.86:BL" -> "node_u1.87:IF"	 [cond="[]",
		lineno=None];
	"node_u0.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u0.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u0.97:CS" -> "node_u0.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u0.97:CS" -> "node_u0.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u0.97:CS" -> "node_u0.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u0.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u0.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u0.96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="node_u0.96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u0.95:AL" -> "node_u0.96:BL"	 [cond="[]",
		lineno=None];
	"node_u3.109:IF" -> "node_u3.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u11.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u11.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u11.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u11.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u11.99:BL" -> "node_u11.102:IF"	 [cond="[]",
		lineno=None];
	"node_u11.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u11.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u11.99:BL" -> "node_u11.100:IF"	 [cond="[]",
		lineno=None];
	"node_u3.86:BL" -> "node_u3.87:IF"	 [cond="[]",
		lineno=None];
	"node_u2.105:CA" -> "node_u2.106:BL"	 [cond="[]",
		lineno=None];
	"node_u4.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u4.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u4.99:BL" -> "node_u4.102:IF"	 [cond="[]",
		lineno=None];
	"node_u4.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u4.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u4.99:BL" -> "node_u4.100:IF"	 [cond="[]",
		lineno=None];
	"node_u3.113:BL" -> "node_u3.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u6.99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="node_u6.99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u6.98:CA" -> "node_u6.99:BL"	 [cond="[]",
		lineno=None];
	"node_u8.113:BL" -> "node_u8.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u6.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u6.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u6.109:IF" -> "node_u6.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u9.97:CS" -> "node_u9.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u9.97:CS" -> "node_u9.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u9.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u9.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u9.97:CS" -> "node_u9.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u1.87:IF" -> "node_u1.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u1.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u1.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u1.87:IF" -> "node_u1.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u8.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u8.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u8.106:BL" -> "node_u8.107:IF"	 [cond="[]",
		lineno=None];
	"node_u8.106:BL" -> "node_u8.109:IF"	 [cond="[]",
		lineno=None];
	"node_u9.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u9.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u9.109:IF" -> "node_u9.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u3.Leaf_95:AL" -> "node_u11.85:AL";
	"node_u3.Leaf_95:AL" -> "node_u11.95:AL";
	"node_u7.95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u7.95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"node_u3.Leaf_95:AL" -> "node_u7.95:AL";
	"node_u7.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u7.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u3.Leaf_95:AL" -> "node_u7.85:AL";
	"node_u5.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u5.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u5.101:BS" -> "node_u5.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u4.Leaf_95:AL" -> "node_u8.85:AL";
	"node_u4.Leaf_95:AL" -> "node_u8.95:AL";
	"180:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc830150>",
		def_var="['c3l']",
		fillcolor=deepskyblue,
		label="180:AS
c3l = node_u4_lo;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u4_lo']"];
	"node_u4.Leaf_95:AL" -> "180:AS";
	"node_u0.Leaf_95:AL" -> "node_u8.85:AL";
	"node_u0.Leaf_95:AL" -> "node_u4.85:AL";
	"node_u0.Leaf_95:AL" -> "node_u8.95:AL";
	"node_u0.Leaf_95:AL" -> "node_u4.95:AL";
	"node_u2.96:BL" -> "node_u2.97:CS"	 [cond="[]",
		lineno=None];
	"node_u10.87:IF" -> "node_u10.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u10.87:IF" -> "node_u10.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u11.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u11.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u11.106:BL" -> "node_u11.107:IF"	 [cond="[]",
		lineno=None];
	"node_u11.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u11.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u11.106:BL" -> "node_u11.109:IF"	 [cond="[]",
		lineno=None];
	"node_u7.99:BL" -> "node_u7.100:IF"	 [cond="[]",
		lineno=None];
	"node_u7.99:BL" -> "node_u7.102:IF"	 [cond="[]",
		lineno=None];
	"node_u8.Leaf_85:AL" -> "node_u8.95:AL";
	"node_u9.106:BL" -> "node_u9.107:IF"	 [cond="[]",
		lineno=None];
	"node_u9.106:BL" -> "node_u9.109:IF"	 [cond="[]",
		lineno=None];
	"node_u5.100:IF" -> "node_u5.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u11.110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="node_u11.110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u11.109:IF" -> "node_u11.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u11.97:CS" -> "node_u11.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u11.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u11.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u11.97:CS" -> "node_u11.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u11.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u11.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u11.97:CS" -> "node_u11.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u2.101:BS" -> "node_u2.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u3.97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="node_u3.97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"node_u3.96:BL" -> "node_u3.97:CS"	 [cond="[]",
		lineno=None];
	"node_u1.Leaf_85:AL" -> "node_u1.95:AL";
	"node_u6.85:AL" -> "node_u6.86:BL"	 [cond="[]",
		lineno=None];
	"node_u7.95:AL" -> "node_u7.96:BL"	 [cond="[]",
		lineno=None];
	"node_u8.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u8.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u8.101:BS" -> "node_u8.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u0.96:BL" -> "node_u0.97:CS"	 [cond="[]",
		lineno=None];
	"node_u6.102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="node_u6.102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u6.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u6.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u6.102:IF" -> "node_u6.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u6.110:BS" -> "node_u6.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u7.85:AL" -> "node_u7.86:BL"	 [cond="[]",
		lineno=None];
	"node_u6.103:BS" -> "node_u6.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u11.87:IF" -> "node_u11.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u11.87:IF" -> "node_u11.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u4.89:BL" -> "node_u4.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u2.Leaf_85:AL" -> "node_u2.95:AL";
	"node_u5.87:IF" -> "node_u5.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u5.87:IF" -> "node_u5.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u1.108:BS" -> "node_u1.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"185:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f85dc830790>",
		def_var="['c2m']",
		fillcolor=deepskyblue,
		label="185:AS
c2m = node_u9_lo;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['node_u9_lo']"];
	"node_u8.110:BS" -> "node_u8.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u0.107:IF" -> "node_u0.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u9.Leaf_95:AL" -> "184:AS";
	"node_u9.Leaf_95:AL" -> "185:AS";
	"node_u7.Leaf_95:AL" -> "node_u11.85:AL";
	"node_u7.Leaf_95:AL" -> "191:AS";
	"node_u7.Leaf_95:AL" -> "node_u11.95:AL";
	"node_u5.107:IF" -> "node_u5.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u1.85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="node_u1.85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"node_u1.85:AL" -> "node_u1.86:BL"	 [cond="[]",
		lineno=None];
	"node_u1.110:BS" -> "node_u1.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u4.95:AL" -> "node_u4.96:BL"	 [cond="[]",
		lineno=None];
	"node_u6.89:BL" -> "node_u6.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u11.98:CA" -> "node_u11.99:BL"	 [cond="[]",
		lineno=None];
	"node_u4.109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="node_u4.109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u4.109:IF" -> "node_u4.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u6.105:CA" -> "node_u6.106:BL"	 [cond="[]",
		lineno=None];
	"node_u4.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u4.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u4.102:IF" -> "node_u4.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u1.100:IF" -> "node_u1.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u3.107:IF" -> "node_u3.108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"node_u11.110:BS" -> "node_u11.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u0.87:IF" -> "node_u0.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u0.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u0.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u0.87:IF" -> "node_u0.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u2.87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="node_u2.87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u2.86:BL" -> "node_u2.87:IF"	 [cond="[]",
		lineno=None];
	"node_u0.99:BL" -> "node_u0.100:IF"	 [cond="[]",
		lineno=None];
	"node_u0.99:BL" -> "node_u0.102:IF"	 [cond="[]",
		lineno=None];
	"node_u5.Leaf_95:AL" -> "183:AS";
	"node_u5.Leaf_95:AL" -> "node_u9.95:AL";
	"node_u5.Leaf_95:AL" -> "node_u9.85:AL";
	"node_u10.106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="node_u10.106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"node_u10.106:BL" -> "node_u10.107:IF"	 [cond="[]",
		lineno=None];
	"node_u10.106:BL" -> "node_u10.109:IF"	 [cond="[]",
		lineno=None];
	"node_u3.100:IF" -> "node_u3.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u4.100:IF" -> "node_u4.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u11.105:CA" -> "node_u11.106:BL"	 [cond="[]",
		lineno=None];
	"node_u0.Leaf_85:AL" -> "node_u0.95:AL";
	"node_u5.97:CS" -> "node_u5.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u5.97:CS" -> "node_u5.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u5.105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="node_u5.105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u5.97:CS" -> "node_u5.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u10.103:BS" -> "node_u10.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u6.96:BL" -> "node_u6.97:CS"	 [cond="[]",
		lineno=None];
	"node_u5.102:IF" -> "node_u5.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u4.106:BL" -> "node_u4.107:IF"	 [cond="[]",
		lineno=None];
	"node_u4.106:BL" -> "node_u4.109:IF"	 [cond="[]",
		lineno=None];
	"node_u3.102:IF" -> "node_u3.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u2.113:BL" -> "node_u2.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u9.113:BL" -> "node_u9.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u3.87:BL" -> "node_u3.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u11.Leaf_85:AL" -> "node_u11.95:AL";
	"node_u3.97:CS" -> "node_u3.105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u3.97:CS" -> "node_u3.112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u3.98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="node_u3.98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"node_u3.97:CS" -> "node_u3.98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"node_u7.103:BS" -> "node_u7.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u9.89:BL" -> "node_u9.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u9.98:CA" -> "node_u9.99:BL"	 [cond="[]",
		lineno=None];
	"node_u7.89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="node_u7.89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"node_u7.89:BL" -> "node_u7.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u8.108:BS" -> "node_u8.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u8.98:CA" -> "node_u8.99:BL"	 [cond="[]",
		lineno=None];
	"node_u7.109:IF" -> "node_u7.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u8.105:CA" -> "node_u8.106:BL"	 [cond="[]",
		lineno=None];
	"node_u5.109:IF" -> "node_u5.110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"node_u0.89:BL" -> "node_u0.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u10.105:CA" -> "node_u10.106:BL"	 [cond="[]",
		lineno=None];
	"node_u11.103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="node_u11.103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u11.102:IF" -> "node_u11.103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"node_u6.99:BL" -> "node_u6.102:IF"	 [cond="[]",
		lineno=None];
	"node_u6.100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="node_u6.100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"node_u6.99:BL" -> "node_u6.100:IF"	 [cond="[]",
		lineno=None];
	"node_u4.103:BS" -> "node_u4.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u11.108:BS" -> "node_u11.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u4.108:BS" -> "node_u4.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u8.87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="node_u8.87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"node_u8.87:BL" -> "node_u8.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u6.100:IF" -> "node_u6.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u1.Leaf_95:AL" -> "node_u9.95:AL";
	"node_u1.Leaf_95:AL" -> "node_u5.95:AL";
	"node_u1.Leaf_95:AL" -> "node_u9.85:AL";
	"node_u1.Leaf_95:AL" -> "node_u5.85:AL";
	"node_u11.101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="node_u11.101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"node_u11.100:IF" -> "node_u11.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u5.105:CA" -> "node_u5.106:BL"	 [cond="[]",
		lineno=None];
	"node_u8.87:IF" -> "node_u8.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u8.87:IF" -> "node_u8.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u1.89:BL" -> "node_u1.Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"node_u7.87:IF" -> "node_u7.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u7.87:IF" -> "node_u7.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u7.Leaf_85:AL" -> "node_u7.95:AL";
	"node_u3.Leaf_85:AL" -> "node_u3.95:AL";
	"node_u5.Leaf_85:AL" -> "node_u5.95:AL";
	"node_u3.98:CA" -> "node_u3.99:BL"	 [cond="[]",
		lineno=None];
	"node_u11.101:BS" -> "node_u11.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u10.112:CA" -> "node_u10.113:BL"	 [cond="[]",
		lineno=None];
	"node_u11.103:BS" -> "node_u11.Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"node_u8.100:IF" -> "node_u8.101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"node_u2.87:IF" -> "node_u2.89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"node_u2.87:IF" -> "node_u2.87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"node_u11.Leaf_95:AL" -> "189:AS";
	"node_u11.Leaf_95:AL" -> "190:AS";
}
