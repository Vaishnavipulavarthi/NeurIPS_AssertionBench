strict digraph "" {
	node [label="\N"];
	"99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85fdd5d190>",
		fillcolor=turquoise,
		label="99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85fdd5d1d0>",
		fillcolor=springgreen,
		label="100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"99:BL" -> "100:IF"	 [cond="[]",
		lineno=None];
	"102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85fdd5d410>",
		fillcolor=springgreen,
		label="102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"99:BL" -> "102:IF"	 [cond="[]",
		lineno=None];
	"109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85fdd57d90>",
		fillcolor=springgreen,
		label="109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85fdd57dd0>",
		fillcolor=cadetblue,
		label="110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85fdd57dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"109:IF" -> "110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85fdd57fd0>",
		fillcolor=turquoise,
		label="96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85fdd5d050>",
		fillcolor=linen,
		label="97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"96:BL" -> "97:CS"	 [cond="[]",
		lineno=None];
	"101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85fdd5d210>",
		fillcolor=cadetblue,
		label="101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85fdd5d210>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="Leaf_95:AL"];
	"101:BS" -> "Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85fdd5db90>",
		clk_sens=False,
		fillcolor=gold,
		label="95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"95:AL" -> "96:BL"	 [cond="[]",
		lineno=None];
	"110:BS" -> "Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85fdd5d710>",
		fillcolor=lightcyan,
		label="112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"97:CS" -> "112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85fdd5d110>",
		fillcolor=lightcyan,
		label="98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"97:CS" -> "98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85fdd5d650>",
		fillcolor=lightcyan,
		label="105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"97:CS" -> "105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"100:IF" -> "101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85fdd5d750>",
		fillcolor=turquoise,
		label="113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85fdd5d790>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85fdd5d8d0>]",
		style=filled,
		typ=Block];
	"113:BL" -> "Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"112:CA" -> "113:BL"	 [cond="[]",
		lineno=None];
	"106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85fdd5d6d0>",
		fillcolor=turquoise,
		label="106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"106:BL" -> "109:IF"	 [cond="[]",
		lineno=None];
	"107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85fdd57150>",
		fillcolor=springgreen,
		label="107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"106:BL" -> "107:IF"	 [cond="[]",
		lineno=None];
	"103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85fdd5d450>",
		fillcolor=cadetblue,
		label="103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85fdd5d450>]",
		style=filled,
		typ=BlockingSubstitution];
	"102:IF" -> "103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"98:CA" -> "99:BL"	 [cond="[]",
		lineno=None];
	"108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85fdd57b50>",
		fillcolor=cadetblue,
		label="108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85fdd57b50>]",
		style=filled,
		typ=BlockingSubstitution];
	"107:IF" -> "108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
	"105:CA" -> "106:BL"	 [cond="[]",
		lineno=None];
	"103:BS" -> "Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"108:BS" -> "Leaf_95:AL"	 [cond="[]",
		lineno=None];
}
