strict digraph "compose( ,  )" {
	node [label="\N"];
	"89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78b50>",
		fillcolor=turquoise,
		label="89:BL
sel0 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78150>]",
		style=filled,
		typ=Block];
	"Leaf_85:AL"	 [def_var="['sel0']",
		label="Leaf_85:AL"];
	"89:BL" -> "Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"95:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcca2350>",
		clk_sens=False,
		fillcolor=gold,
		label="95:AL",
		sens="['data_b', 'data_a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a', 'HI_MUX', 'sel0', 'LOW_MUX']"];
	"Leaf_85:AL" -> "95:AL";
	"102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30650>",
		fillcolor=springgreen,
		label="102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"103:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>",
		fillcolor=cadetblue,
		label="103:BS
data_hi = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"102:IF" -> "103:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=102];
	"101:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>",
		fillcolor=cadetblue,
		label="101:BS
data_lo = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30850>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_95:AL"	 [def_var="['data_hi', 'data_lo']",
		label="Leaf_95:AL"];
	"101:BS" -> "Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"110:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>",
		fillcolor=cadetblue,
		label="110:BS
data_hi = data_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30dd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"110:BS" -> "Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"106:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30190>",
		fillcolor=turquoise,
		label="106:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb303d0>",
		fillcolor=springgreen,
		label="109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"106:BL" -> "109:IF"	 [cond="[]",
		lineno=None];
	"107:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcb30e50>",
		fillcolor=springgreen,
		label="107:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"106:BL" -> "107:IF"	 [cond="[]",
		lineno=None];
	"87:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcc78050>",
		fillcolor=springgreen,
		label="87:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"87:IF" -> "89:BL"	 [cond="['data_a', 'data_b']",
		label="!((data_a < data_b))",
		lineno=87];
	"87:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc78450>",
		fillcolor=turquoise,
		label="87:BL
sel0 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcc78550>]",
		style=filled,
		typ=Block];
	"87:IF" -> "87:BL"	 [cond="['data_a', 'data_b']",
		label="(data_a < data_b)",
		lineno=87];
	"99:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcf58910>",
		fillcolor=turquoise,
		label="99:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"99:BL" -> "102:IF"	 [cond="[]",
		lineno=None];
	"100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f85dcf58450>",
		fillcolor=springgreen,
		label="100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"99:BL" -> "100:IF"	 [cond="[]",
		lineno=None];
	"109:IF" -> "110:BS"	 [cond="['HI_MUX']",
		label="(HI_MUX == 1)",
		lineno=109];
	"96:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcfc5c10>",
		fillcolor=turquoise,
		label="96:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"97:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f85dcb30750>",
		fillcolor=linen,
		label="97:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"96:BL" -> "97:CS"	 [cond="[]",
		lineno=None];
	"98:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcf58950>",
		fillcolor=lightcyan,
		label="98:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"97:CS" -> "98:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"105:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb302d0>",
		fillcolor=lightcyan,
		label="105:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"97:CS" -> "105:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"112:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f85dcb309d0>",
		fillcolor=lightcyan,
		label="112:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"97:CS" -> "112:CA"	 [cond="['sel0']",
		label=sel0,
		lineno=97];
	"100:IF" -> "101:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=100];
	"103:BS" -> "Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"98:CA" -> "99:BL"	 [cond="[]",
		lineno=None];
	"85:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f85dcc902d0>",
		clk_sens=False,
		fillcolor=gold,
		label="85:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_b', 'data_a']"];
	"86:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcc900d0>",
		fillcolor=turquoise,
		label="86:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"85:AL" -> "86:BL"	 [cond="[]",
		lineno=None];
	"105:CA" -> "106:BL"	 [cond="[]",
		lineno=None];
	"108:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>",
		fillcolor=cadetblue,
		label="108:BS
data_lo = data_b;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"108:BS" -> "Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"95:AL" -> "96:BL"	 [cond="[]",
		lineno=None];
	"87:BL" -> "Leaf_85:AL"	 [cond="[]",
		lineno=None];
	"113:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f85dcb30450>",
		fillcolor=turquoise,
		label="113:BL
data_lo = { DATA_WIDTH{ 1'b0 } };
data_hi = { DATA_WIDTH{ 1'b0 } };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30b90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85dcb30d90>]",
		style=filled,
		typ=Block];
	"113:BL" -> "Leaf_95:AL"	 [cond="[]",
		lineno=None];
	"86:BL" -> "87:IF"	 [cond="[]",
		lineno=None];
	"112:CA" -> "113:BL"	 [cond="[]",
		lineno=None];
	"107:IF" -> "108:BS"	 [cond="['LOW_MUX']",
		label="(LOW_MUX == 1)",
		lineno=107];
}
