strict digraph "compose( ,  )" {
	node [label="\N"];
	"89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8dacea13d0>",
		fillcolor=turquoise,
		label="89:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"90:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8dacea1550>",
		fillcolor=springgreen,
		label="90:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"89:BL" -> "90:IF"	 [cond="[]",
		lineno=None];
	"68:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8dacac4710>",
		fillcolor=turquoise,
		label="68:BL
z1 <= INIT_Z1;
z2 <= INIT_Z2;
z3 <= INIT_Z3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacac4610>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8dacac4750>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacac4890>]",
		style=filled,
		typ=Block];
	"Leaf_67:AL"	 [def_var="['z1', 'z2', 'z3']",
		label="Leaf_67:AL"];
	"68:BL" -> "Leaf_67:AL"	 [cond="[]",
		lineno=None];
	"Leaf_82:AL"	 [def_var="['valid_out']",
		label="Leaf_82:AL"];
	"91:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacea1590>",
		fillcolor=firebrick,
		label="91:NS
data_out <= 64'd0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacea1590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"90:IF" -> "91:NS"	 [cond="['rstn']",
		label="(!rstn)",
		lineno=90];
	"93:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacea1790>",
		fillcolor=firebrick,
		label="93:NS
data_out <= z1_next ^ z2_next ^ z3_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacea1790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"90:IF" -> "93:NS"	 [cond="['rstn']",
		label="!((!rstn))",
		lineno=90];
	"86:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacea1210>",
		fillcolor=firebrick,
		label="86:NS
valid_out <= ce;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacea1210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"86:NS" -> "Leaf_82:AL"	 [cond="[]",
		lineno=None];
	"63:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f8daceb9c10>",
		def_var="['z1_next']",
		fillcolor=deepskyblue,
		label="63:AS
z1_next = { z1[39:1], z1[58:34] ^ z1[63:39] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['z1', 'z1', 'z1']"];
	"Leaf_67:AL" -> "63:AS";
	"65:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f8dacac42d0>",
		def_var="['z3_next']",
		fillcolor=deepskyblue,
		label="65:AS
z3_next = { z3[56:9], z3[39:24] ^ z3[63:48] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['z3', 'z3', 'z3']"];
	"Leaf_67:AL" -> "65:AS";
	"64:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f8dad199d90>",
		def_var="['z2_next']",
		fillcolor=deepskyblue,
		label="64:AS
z2_next = { z2[50:6], z2[44:26] ^ z2[63:45] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['z2', 'z2', 'z2']"];
	"Leaf_67:AL" -> "64:AS";
	"Leaf_89:AL"	 [def_var="['data_out']",
		label="Leaf_89:AL"];
	"91:NS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"67:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8dacac4390>",
		clk_sens=True,
		fillcolor=gold,
		label="67:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['z2_next', 'rstn', 'z3_next', 'z1_next', 'ce']"];
	"67:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8dacac4450>",
		fillcolor=turquoise,
		label="67:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"67:AL" -> "67:BL"	 [cond="[]",
		lineno=None];
	"93:NS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"68:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8dacac4910>",
		fillcolor=springgreen,
		label="68:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"68:IF" -> "68:BL"	 [cond="['rstn']",
		label="(!rstn)",
		lineno=68];
	"73:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8dacac49d0>",
		fillcolor=springgreen,
		label="73:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"68:IF" -> "73:IF"	 [cond="['rstn']",
		label="!((!rstn))",
		lineno=68];
	"73:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8dacac4c50>",
		fillcolor=turquoise,
		label="73:BL
z1 <= z1_next;
z2 <= z2_next;
z3 <= z3_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacac4b50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f8dacac4c90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacac4dd0>]",
		style=filled,
		typ=Block];
	"73:IF" -> "73:BL"	 [cond="['ce']",
		label=ce,
		lineno=73];
	"89:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8dacea1350>",
		clk_sens=True,
		fillcolor=gold,
		label="89:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['z2_next', 'rstn', 'z3_next', 'z1_next']"];
	"89:AL" -> "89:BL"	 [cond="[]",
		lineno=None];
	"63:AS" -> "67:AL";
	"63:AS" -> "89:AL";
	"84:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacea1090>",
		fillcolor=firebrick,
		label="84:NS
valid_out <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8dacea1090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"84:NS" -> "Leaf_82:AL"	 [cond="[]",
		lineno=None];
	"83:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8dacea1050>",
		fillcolor=springgreen,
		label="83:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"83:IF" -> "86:NS"	 [cond="['rstn']",
		label="!((!rstn))",
		lineno=83];
	"83:IF" -> "84:NS"	 [cond="['rstn']",
		label="(!rstn)",
		lineno=83];
	"82:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f8dacac4e50>",
		clk_sens=True,
		fillcolor=gold,
		label="82:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rstn', 'ce']"];
	"82:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f8dacac4e90>",
		fillcolor=turquoise,
		label="82:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"82:AL" -> "82:BL"	 [cond="[]",
		lineno=None];
	"65:AS" -> "67:AL";
	"65:AS" -> "89:AL";
	"64:AS" -> "67:AL";
	"64:AS" -> "89:AL";
	"67:BL" -> "68:IF"	 [cond="[]",
		lineno=None];
	"82:BL" -> "83:IF"	 [cond="[]",
		lineno=None];
	"73:BL" -> "Leaf_67:AL"	 [cond="[]",
		lineno=None];
}
