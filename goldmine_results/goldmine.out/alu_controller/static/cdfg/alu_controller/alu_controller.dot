strict digraph "compose( ,  )" {
	node [label="\N"];
	"145:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8adfcc90>",
		fillcolor=lightcyan,
		label="145:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"146:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8adfcf90>",
		fillcolor=turquoise,
		label="146:BL
opcode_sel[0] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8adfce50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8adfcfd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8b1da190>]",
		style=filled,
		typ=Block];
	"145:CA" -> "146:BL"	 [cond="[]",
		lineno=None];
	"140:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f7a8ad9ae10>",
		fillcolor=linen,
		label="140:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"140:CS" -> "145:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"239:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ada5dd0>",
		fillcolor=lightcyan,
		label="239:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "239:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"207:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ad86790>",
		fillcolor=lightcyan,
		label="207:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "207:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"199:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ad86210>",
		fillcolor=lightcyan,
		label="199:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "199:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"168:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8b1dad10>",
		fillcolor=lightcyan,
		label="168:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "168:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"152:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8b1da250>",
		fillcolor=lightcyan,
		label="152:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "152:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"184:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ad9c850>",
		fillcolor=lightcyan,
		label="184:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "184:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"223:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ada52d0>",
		fillcolor=lightcyan,
		label="223:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "223:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"141:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8adfc950>",
		fillcolor=lightcyan,
		label="141:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "141:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"160:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8b1da790>",
		fillcolor=lightcyan,
		label="160:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "160:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"247:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ad9a390>",
		fillcolor=lightcyan,
		label="247:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "247:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"255:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ad9a910>",
		fillcolor=lightcyan,
		label="255:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "255:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"231:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ada5850>",
		fillcolor=lightcyan,
		label="231:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "231:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"215:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ad86d10>",
		fillcolor=lightcyan,
		label="215:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "215:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"192:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ad9cdd0>",
		fillcolor=lightcyan,
		label="192:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "192:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"263:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ad9ae90>",
		fillcolor=lightcyan,
		label="263:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "263:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"176:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7a8ad9c2d0>",
		fillcolor=lightcyan,
		label="176:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"140:CS" -> "176:CA"	 [cond="['this_opcode']",
		label=this_opcode,
		lineno=140];
	"240:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ad9a110>",
		fillcolor=turquoise,
		label="240:BL
opcode_sel[15] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ada5f90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ad9a150>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9a2d0>]",
		style=filled,
		typ=Block];
	"239:CA" -> "240:BL"	 [cond="[]",
		lineno=None];
	"104:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfa7d0>",
		def_var="['sl_AB']",
		fillcolor=deepskyblue,
		label="104:AS
sl_AB = opcode_sel[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"101:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfa290>",
		def_var="['inc_B']",
		fillcolor=deepskyblue,
		label="101:AS
inc_B = opcode_sel[9];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"208:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ad86a90>",
		fillcolor=turquoise,
		label="208:BL
opcode_sel[13] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad86950>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ad86ad0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad86c50>]",
		style=filled,
		typ=Block];
	"207:CA" -> "208:BL"	 [cond="[]",
		lineno=None];
	"126:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8adfc2d0>",
		fillcolor=firebrick,
		label="126:NS
this_opcode <= 6;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8adfc2d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_123:AL"	 [def_var="['this_opcode']",
		label="Leaf_123:AL"];
	"126:NS" -> "Leaf_123:AL"	 [cond="[]",
		lineno=None];
	"216:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ada5050>",
		fillcolor=turquoise,
		label="216:BL
opcode_sel[14] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad86ed0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ada5090>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ada5210>]",
		style=filled,
		typ=Block];
	"Leaf_133:AL"	 [def_var="['opcode_sel', 'load_outputs', 'next_opcode', 'load_inputs']",
		label="Leaf_133:AL"];
	"216:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"185:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ad9cb50>",
		fillcolor=turquoise,
		label="185:BL
opcode_sel[2] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9ca10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ad9cb90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9cd10>]",
		style=filled,
		typ=Block];
	"185:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"100:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfa0d0>",
		def_var="['inc_A']",
		fillcolor=deepskyblue,
		label="100:AS
inc_A = opcode_sel[1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"161:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8b1daa90>",
		fillcolor=turquoise,
		label="161:BL
opcode_sel[9] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8b1da950>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8b1daad0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8b1dac50>]",
		style=filled,
		typ=Block];
	"161:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"200:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ad86510>",
		fillcolor=turquoise,
		label="200:BL
opcode_sel[12] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad863d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ad86550>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad866d0>]",
		style=filled,
		typ=Block];
	"199:CA" -> "200:BL"	 [cond="[]",
		lineno=None];
	"153:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8b1da510>",
		fillcolor=turquoise,
		label="153:BL
opcode_sel[1] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8b1da410>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8b1da550>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8b1da6d0>]",
		style=filled,
		typ=Block];
	"153:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"118:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfbd10>",
		def_var="['clr_V']",
		fillcolor=deepskyblue,
		label="118:AS
clr_V = opcode_sel[1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"119:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfbed0>",
		def_var="['clr_C']",
		fillcolor=deepskyblue,
		label="119:AS
clr_C = opcode_sel[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"134:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8adfc810>",
		fillcolor=turquoise,
		label="134:BL
opcode_sel <= 'h0;
load_inputs <= 'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8adfc610>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8adfc790>]",
		style=filled,
		typ=Block];
	"134:BL" -> "140:CS"	 [cond="[]",
		lineno=None];
	"169:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ad9c050>",
		fillcolor=turquoise,
		label="169:BL
opcode_sel[7] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8b1daed0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ad9c090>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9c210>]",
		style=filled,
		typ=Block];
	"168:CA" -> "169:BL"	 [cond="[]",
		lineno=None];
	"152:CA" -> "153:BL"	 [cond="[]",
		lineno=None];
	"184:CA" -> "185:BL"	 [cond="[]",
		lineno=None];
	"109:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfb0d0>",
		def_var="['mul_AB']",
		fillcolor=deepskyblue,
		label="109:AS
mul_AB = opcode_sel[10];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"106:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfab50>",
		def_var="['clr']",
		fillcolor=deepskyblue,
		label="106:AS
clr = opcode_sel[6];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"146:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"114:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfb990>",
		def_var="['cpl_B']",
		fillcolor=deepskyblue,
		label="114:AS
cpl_B = opcode_sel[15];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"224:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ada55d0>",
		fillcolor=turquoise,
		label="224:BL
opcode_sel[10] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ada5490>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ada5610>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ada5790>]",
		style=filled,
		typ=Block];
	"223:CA" -> "224:BL"	 [cond="[]",
		lineno=None];
	"111:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfb450>",
		def_var="['and_AB']",
		fillcolor=deepskyblue,
		label="111:AS
and_AB = opcode_sel[12];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"142:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8adfcad0>",
		fillcolor=turquoise,
		label="142:BL
opcode_sel[6] <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8adfcb10>]",
		style=filled,
		typ=Block];
	"141:CA" -> "142:BL"	 [cond="[]",
		lineno=None];
	"160:CA" -> "161:BL"	 [cond="[]",
		lineno=None];
	"256:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ad9ac10>",
		fillcolor=turquoise,
		label="256:BL
opcode_sel[5] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9aad0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ad9ac50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9add0>]",
		style=filled,
		typ=Block];
	"256:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"105:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfa990>",
		def_var="['sr_AB']",
		fillcolor=deepskyblue,
		label="105:AS
sr_AB = opcode_sel[5];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"128:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8adfc450>",
		fillcolor=firebrick,
		label="128:NS
this_opcode <= opcode;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8adfc450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"128:NS" -> "Leaf_123:AL"	 [cond="[]",
		lineno=None];
	"99:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8b4b7ed0>",
		def_var="['add_AB']",
		fillcolor=deepskyblue,
		label="99:AS
add_AB = opcode_sel[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"103:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfa610>",
		def_var="['cmp_AB']",
		fillcolor=deepskyblue,
		label="103:AS
cmp_AB = opcode_sel[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"177:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ad9c5d0>",
		fillcolor=turquoise,
		label="177:BL
opcode_sel[8] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9c490>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ad9c610>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9c790>]",
		style=filled,
		typ=Block];
	"177:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"232:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ada5b50>",
		fillcolor=turquoise,
		label="232:BL
opcode_sel[11] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ada5a10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ada5b90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ada5d10>]",
		style=filled,
		typ=Block];
	"232:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"133:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7a8ad9af90>",
		clk_sens=False,
		fillcolor=gold,
		label="133:AL",
		sens="['this_opcode']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['this_opcode']"];
	"Leaf_123:AL" -> "133:AL";
	"248:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ad9a690>",
		fillcolor=turquoise,
		label="248:BL
opcode_sel[4] <= 1'b1;
load_inputs <= 1'b1;
load_outputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9a550>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ad9a6d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9a850>]",
		style=filled,
		typ=Block];
	"247:CA" -> "248:BL"	 [cond="[]",
		lineno=None];
	"133:AL" -> "134:BL"	 [cond="[]",
		lineno=None];
	"102:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfa450>",
		def_var="['sub_AB']",
		fillcolor=deepskyblue,
		label="102:AS
sub_AB = opcode_sel[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"255:CA" -> "256:BL"	 [cond="[]",
		lineno=None];
	"108:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfaed0>",
		def_var="['dec_B']",
		fillcolor=deepskyblue,
		label="108:AS
dec_B = opcode_sel[8];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"208:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"142:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"248:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"231:CA" -> "232:BL"	 [cond="[]",
		lineno=None];
	"193:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ad9cfd0>",
		fillcolor=turquoise,
		label="193:BL
opcode_sel[3] <= 1'b1;
load_inputs <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9cf90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7a8ad86150>]",
		style=filled,
		typ=Block];
	"193:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"224:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"240:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"113:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfb7d0>",
		def_var="['xor_AB']",
		fillcolor=deepskyblue,
		label="113:AS
xor_AB = opcode_sel[14];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"215:CA" -> "216:BL"	 [cond="[]",
		lineno=None];
	"192:CA" -> "193:BL"	 [cond="[]",
		lineno=None];
	"125:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7a8adfc290>",
		fillcolor=springgreen,
		label="125:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"125:IF" -> "126:NS"	 [cond="['reset']",
		label=reset,
		lineno=125];
	"125:IF" -> "128:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=125];
	"123:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7a8adfc190>",
		clk_sens=True,
		fillcolor=gold,
		label="123:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'opcode']"];
	"124:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8adfc150>",
		fillcolor=turquoise,
		label="124:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"123:AL" -> "124:BL"	 [cond="[]",
		lineno=None];
	"264:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7a8ad9ad90>",
		fillcolor=turquoise,
		label="264:BL
next_opcode <= this_opcode;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7a8ad9afd0>]",
		style=filled,
		typ=Block];
	"263:CA" -> "264:BL"	 [cond="[]",
		lineno=None];
	"176:CA" -> "177:BL"	 [cond="[]",
		lineno=None];
	"200:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"112:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfb610>",
		def_var="['or_AB']",
		fillcolor=deepskyblue,
		label="112:AS
or_AB = opcode_sel[13];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"110:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfb290>",
		def_var="['cpl_A']",
		fillcolor=deepskyblue,
		label="110:AS
cpl_A = opcode_sel[11];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"117:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfbb50>",
		def_var="['clr_Z']",
		fillcolor=deepskyblue,
		label="117:AS
clr_Z = opcode_sel[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"169:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"107:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7a8adfad10>",
		def_var="['dec_A']",
		fillcolor=deepskyblue,
		label="107:AS
dec_A = opcode_sel[7];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['opcode_sel']"];
	"124:BL" -> "125:IF"	 [cond="[]",
		lineno=None];
	"264:BL" -> "Leaf_133:AL"	 [cond="[]",
		lineno=None];
	"Leaf_133:AL" -> "104:AS";
	"Leaf_133:AL" -> "101:AS";
	"Leaf_133:AL" -> "100:AS";
	"Leaf_133:AL" -> "118:AS";
	"Leaf_133:AL" -> "119:AS";
	"Leaf_133:AL" -> "109:AS";
	"Leaf_133:AL" -> "106:AS";
	"Leaf_133:AL" -> "114:AS";
	"Leaf_133:AL" -> "111:AS";
	"Leaf_133:AL" -> "105:AS";
	"Leaf_133:AL" -> "99:AS";
	"Leaf_133:AL" -> "103:AS";
	"Leaf_133:AL" -> "102:AS";
	"Leaf_133:AL" -> "108:AS";
	"Leaf_133:AL" -> "113:AS";
	"Leaf_133:AL" -> "112:AS";
	"Leaf_133:AL" -> "110:AS";
	"Leaf_133:AL" -> "117:AS";
	"Leaf_133:AL" -> "107:AS";
}
