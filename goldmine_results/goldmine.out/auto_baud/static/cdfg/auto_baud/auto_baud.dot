strict digraph "compose( ,  )" {
	node [label="\N"];
	"477:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012d990>",
		fillcolor=firebrick,
		label="477:NS
m1_next_state <= m1_measure_1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012d990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_448:AL"	 [def_var="['verify', 'run', 'm1_next_state', 'clear_counters', 'idle', 'measure']",
		label="Leaf_448:AL"];
	"477:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"315:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f78601979d0>",
		clk_sens=True,
		fillcolor=gold,
		label="315:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['clock_count_rollover', 'clear_counters', 'enable_clock_count', 'clock_count', 'reset_i']"];
	"316:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860197a10>",
		fillcolor=turquoise,
		label="316:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"315:AL" -> "316:BL"	 [cond="[]",
		lineno=None];
	"525:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860156f90>",
		fillcolor=firebrick,
		label="525:NS
m1_next_state <= m1_verify_1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860156f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"525:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"Leaf_349:AL"	 [def_var="['main_count']",
		label="Leaf_349:AL"];
	"408:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f786056d1d0>",
		clk_sens=True,
		fillcolor=gold,
		label="408:AL",
		sens="['clk_i', 'idle']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['idle', 'clear_counters', 'main_count']"];
	"Leaf_349:AL" -> "408:AL";
	"423:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f786056d7d0>",
		def_var="['main_count_rollover']",
		fillcolor=deepskyblue,
		label="423:AS
main_count_rollover = main_count == measurement;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['main_count', 'measurement']"];
	"Leaf_349:AL" -> "423:AS";
	"349:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f786018ab50>",
		clk_sens=True,
		fillcolor=gold,
		label="349:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['run', 'verify', 'clear_counters', 'main_count', 'main_count_rollover', 'measure', 'reset_i', 'mid_bit_count']"];
	"Leaf_349:AL" -> "349:AL";
	"353:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f786018ad90>",
		fillcolor=turquoise,
		label="353:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"355:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f786018af90>",
		fillcolor=springgreen,
		label="355:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"353:BL" -> "355:IF"	 [cond="[]",
		lineno=None];
	"480:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012df50>",
		fillcolor=firebrick,
		label="480:NS
m1_next_state <= m1_measure_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012df50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"480:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"469:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012d390>",
		fillcolor=firebrick,
		label="469:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012d390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"469:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"357:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78605643d0>",
		fillcolor=firebrick,
		label="357:NS
main_count <= main_count + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78605643d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"357:NS" -> "Leaf_349:AL"	 [cond="[]",
		lineno=None];
	"444:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860135090>",
		fillcolor=firebrick,
		label="444:NS
m1_state <= m1_next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860135090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_441:AL"	 [def_var="['m1_state']",
		label="Leaf_441:AL"];
	"444:NS" -> "Leaf_441:AL"	 [cond="[]",
		lineno=None];
	"508:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860156610>",
		fillcolor=springgreen,
		label="508:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"511:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860156750>",
		fillcolor=firebrick,
		label="511:NS
m1_next_state <= m1_measure_3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860156750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"508:IF" -> "511:NS"	 [cond="['serial_dat_i']",
		label="!((!serial_dat_i))",
		lineno=508];
	"508:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860156550>",
		fillcolor=firebrick,
		label="508:NS
m1_next_state <= m1_measure_4;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860156550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"508:IF" -> "508:NS"	 [cond="['serial_dat_i']",
		label="(!serial_dat_i)",
		lineno=508];
	"484:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f786012df90>",
		fillcolor=turquoise,
		label="484:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860136050>]",
		style=filled,
		typ=Block];
	"487:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860136410>",
		fillcolor=springgreen,
		label="487:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"484:BL" -> "487:IF"	 [cond="[]",
		lineno=None];
	"314:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7860197790>",
		def_var="['enable_clock_count']",
		fillcolor=deepskyblue,
		label="314:AS
enable_clock_count = measure || verify && main_count_rollover;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['measure', 'verify', 'main_count_rollover']"];
	"314:AS" -> "315:AL";
	"335:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f786018a990>",
		def_var="['mid_bit_count']",
		fillcolor=deepskyblue,
		label="335:AS
mid_bit_count = (clock_count == (CLOCK_FACTOR_PP >> 1) - 1) && enable_clock_count;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['clock_count', 'enable_clock_count']"];
	"314:AS" -> "335:AS";
	"355:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786018afd0>",
		fillcolor=firebrick,
		label="355:NS
main_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786018afd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"355:NS" -> "Leaf_349:AL"	 [cond="[]",
		lineno=None];
	"409:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f786056d190>",
		fillcolor=turquoise,
		label="409:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"408:AL" -> "409:BL"	 [cond="[]",
		lineno=None];
	"523:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860156d50>",
		fillcolor=turquoise,
		label="523:BL
verify <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860156cd0>]",
		style=filled,
		typ=Block];
	"525:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860152090>",
		fillcolor=springgreen,
		label="525:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"523:BL" -> "525:IF"	 [cond="[]",
		lineno=None];
	"398:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860567ed0>",
		fillcolor=springgreen,
		label="398:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"399:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786056d050>",
		fillcolor=firebrick,
		label="399:NS
character_miscompare <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786056d050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"398:IF" -> "399:NS"	 [cond="['verify', 'mid_bit_count', 'target_bits', 'serial_dat_i']",
		label="(verify && mid_bit_count && target_bits[0] ^ serial_dat_i)",
		lineno=398];
	"553:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860155050>",
		fillcolor=firebrick,
		label="553:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860155050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"553:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"322:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786018a490>",
		fillcolor=firebrick,
		label="322:NS
clock_count <= clock_count + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786018a490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_315:AL"	 [def_var="['clock_count']",
		label="Leaf_315:AL"];
	"322:NS" -> "Leaf_315:AL"	 [cond="[]",
		lineno=None];
	"490:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860136550>",
		fillcolor=firebrick,
		label="490:NS
m1_next_state <= m1_measure_1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860136550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"490:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"448:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860135450>",
		clk_sens=False,
		fillcolor=gold,
		label="448:AL",
		sens="['m1_state', 'mid_bit_count', 'serial_dat_i', 'verify_done', 'character_miscompare']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['m1_state', 'verify_done', 'serial_dat_i', 'character_miscompare', 'mid_bit_count']"];
	"335:AS" -> "448:AL";
	"381:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7860567510>",
		def_var="['verify_done']",
		fillcolor=deepskyblue,
		label="381:AS
verify_done = (target_bits == 1) && verify && mid_bit_count;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['target_bits', 'verify', 'mid_bit_count']"];
	"335:AS" -> "381:AS";
	"392:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f78605676d0>",
		clk_sens=True,
		fillcolor=gold,
		label="392:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['verify', 'serial_dat_i', 'idle', 'target_bits', 'reset_i', 'mid_bit_count']"];
	"335:AS" -> "392:AL";
	"335:AS" -> "349:AL";
	"371:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7860564590>",
		clk_sens=True,
		fillcolor=gold,
		label="371:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['verify', 'target_bits', 'reset_i', 'mid_bit_count']"];
	"335:AS" -> "371:AL";
	"466:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860135e50>",
		fillcolor=turquoise,
		label="466:BL
idle <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860135dd0>]",
		style=filled,
		typ=Block];
	"468:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f786012d290>",
		fillcolor=springgreen,
		label="468:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"466:BL" -> "468:IF"	 [cond="[]",
		lineno=None];
	"393:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860567710>",
		fillcolor=turquoise,
		label="393:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"394:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f78605678d0>",
		fillcolor=springgreen,
		label="394:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"393:BL" -> "394:IF"	 [cond="[]",
		lineno=None];
	"377:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860567350>",
		fillcolor=firebrick,
		label="377:NS
target_bits <= { 0, target_bits >> 1 };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860567350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_371:AL"	 [def_var="['target_bits']",
		label="Leaf_371:AL"];
	"377:NS" -> "Leaf_371:AL"	 [cond="[]",
		lineno=None];
	"351:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f786018ad10>",
		fillcolor=springgreen,
		label="351:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"351:IF" -> "353:BL"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=351];
	"351:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786018acd0>",
		fillcolor=firebrick,
		label="351:NS
main_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786018acd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"351:IF" -> "351:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=351];
	"516:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7860156710>",
		fillcolor=lightcyan,
		label="516:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"517:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f78601569d0>",
		fillcolor=turquoise,
		label="517:BL
clear_counters <= 1'b1;
m1_next_state <= m1_verify_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860156910>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7860156ad0>]",
		style=filled,
		typ=Block];
	"516:CA" -> "517:BL"	 [cond="[]",
		lineno=None];
	"494:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860136750>",
		fillcolor=turquoise,
		label="494:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78601366d0>]",
		style=filled,
		typ=Block];
	"498:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860136a90>",
		fillcolor=springgreen,
		label="498:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"494:BL" -> "498:IF"	 [cond="[]",
		lineno=None];
	"362:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860564850>",
		fillcolor=firebrick,
		label="362:NS
main_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860564850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"362:NS" -> "Leaf_349:AL"	 [cond="[]",
		lineno=None];
	"534:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860152490>",
		fillcolor=firebrick,
		label="534:NS
m1_next_state <= m1_verify_failed;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860152490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"534:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"454:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860135b50>",
		fillcolor=turquoise,
		label="454:BL
idle <= 1'b0;
run <= 1'b0;
measure <= 1'b0;
clear_counters <= 1'b0;
verify <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860135590>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f78601356d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860135810>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f7860135990>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860135ad0>]",
		style=filled,
		typ=Block];
	"448:AL" -> "454:BL"	 [cond="[]",
		lineno=None];
	"443:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786056de90>",
		fillcolor=firebrick,
		label="443:NS
m1_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786056de90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"443:NS" -> "Leaf_441:AL"	 [cond="[]",
		lineno=None];
	"526:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860152190>",
		fillcolor=firebrick,
		label="526:NS
m1_next_state <= m1_verify_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860152190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"526:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"Leaf_392:AL"	 [def_var="['character_miscompare']",
		label="Leaf_392:AL"];
	"Leaf_392:AL" -> "448:AL";
	"397:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860567b90>",
		fillcolor=firebrick,
		label="397:NS
character_miscompare <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860567b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"397:NS" -> "Leaf_392:AL"	 [cond="[]",
		lineno=None];
	"396:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860567c10>",
		fillcolor=turquoise,
		label="396:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"394:IF" -> "396:BL"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=394];
	"394:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860567890>",
		fillcolor=firebrick,
		label="394:NS
character_miscompare <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860567890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"394:IF" -> "394:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=394];
	"411:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f786056d350>",
		fillcolor=springgreen,
		label="411:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"417:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f786056d550>",
		fillcolor=springgreen,
		label="417:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"411:IF" -> "417:IF"	 [cond="['idle']",
		label="!(idle)",
		lineno=411];
	"411:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786056d390>",
		fillcolor=firebrick,
		label="411:NS
measurement <= -1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786056d390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"411:IF" -> "411:NS"	 [cond="['idle']",
		label=idle,
		lineno=411];
	"487:IF" -> "490:NS"	 [cond="['serial_dat_i']",
		label="!(serial_dat_i)",
		lineno=487];
	"487:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860136350>",
		fillcolor=firebrick,
		label="487:NS
m1_next_state <= m1_measure_2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860136350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"487:IF" -> "487:NS"	 [cond="['serial_dat_i']",
		label=serial_dat_i,
		lineno=487];
	"493:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7860136510>",
		fillcolor=lightcyan,
		label="493:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"493:CA" -> "494:BL"	 [cond="[]",
		lineno=None];
	"320:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860197f90>",
		fillcolor=turquoise,
		label="320:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"321:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f786018a2d0>",
		fillcolor=springgreen,
		label="321:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"320:BL" -> "321:IF"	 [cond="[]",
		lineno=None];
	"321:IF" -> "322:NS"	 [cond="['clock_count_rollover']",
		label="!(clock_count_rollover)",
		lineno=321];
	"321:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786018a290>",
		fillcolor=firebrick,
		label="321:NS
clock_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786018a290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"321:IF" -> "321:NS"	 [cond="['clock_count_rollover']",
		label=clock_count_rollover,
		lineno=321];
	"547:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7860152b10>",
		fillcolor=lightcyan,
		label="547:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"548:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860152d10>",
		fillcolor=turquoise,
		label="548:BL
run <= 1'b1;
m1_next_state <= m1_run;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860152c50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7860152e10>]",
		style=filled,
		typ=Block];
	"547:CA" -> "548:BL"	 [cond="[]",
		lineno=None];
	"Leaf_315:AL" -> "315:AL";
	"Leaf_315:AL" -> "335:AS";
	"326:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7860197f50>",
		def_var="['clock_count_rollover']",
		fillcolor=deepskyblue,
		label="326:AS
clock_count_rollover = clock_count == CLOCK_FACTOR_PP - 1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['clock_count']"];
	"Leaf_315:AL" -> "326:AS";
	"465:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7860135c90>",
		fillcolor=lightcyan,
		label="465:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"465:CA" -> "466:BL"	 [cond="[]",
		lineno=None];
	"396:BL" -> "398:IF"	 [cond="[]",
		lineno=None];
	"397:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860567a90>",
		fillcolor=springgreen,
		label="397:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"396:BL" -> "397:IF"	 [cond="[]",
		lineno=None];
	"351:NS" -> "Leaf_349:AL"	 [cond="[]",
		lineno=None];
	"468:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012d1d0>",
		fillcolor=firebrick,
		label="468:NS
m1_next_state <= m1_measure_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012d1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"468:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"479:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f786012de10>",
		fillcolor=springgreen,
		label="479:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"479:IF" -> "480:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && serial_dat_i))",
		lineno=479];
	"479:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012dd50>",
		fillcolor=firebrick,
		label="479:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012dd50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"479:IF" -> "479:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && serial_dat_i)",
		lineno=479];
	"558:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f7860155090>",
		def_var="['auto_baud_locked_o']",
		fillcolor=deepskyblue,
		label="558:AS
auto_baud_locked_o = run;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['run']"];
	"522:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7860156b90>",
		fillcolor=lightcyan,
		label="522:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"522:CA" -> "523:BL"	 [cond="[]",
		lineno=None];
	"373:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860564b90>",
		fillcolor=firebrick,
		label="373:NS
target_bits <= 9'h086;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860564b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"373:NS" -> "Leaf_371:AL"	 [cond="[]",
		lineno=None];
	"424:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f786056d9d0>",
		def_var="['baud_clk_o']",
		fillcolor=deepskyblue,
		label="424:AS
baud_clk_o = main_count_rollover && run;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['main_count_rollover', 'run']"];
	"472:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f786012d3d0>",
		fillcolor=lightcyan,
		label="472:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"473:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f786012d5d0>",
		fillcolor=turquoise,
		label="473:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786012d550>]",
		style=filled,
		typ=Block];
	"472:CA" -> "473:BL"	 [cond="[]",
		lineno=None];
	"357:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860564390>",
		fillcolor=springgreen,
		label="357:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"357:IF" -> "357:NS"	 [cond="['measure', 'mid_bit_count']",
		label="(measure && mid_bit_count)",
		lineno=357];
	"360:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f78605645d0>",
		fillcolor=springgreen,
		label="360:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"357:IF" -> "360:IF"	 [cond="['measure', 'mid_bit_count']",
		label="!((measure && mid_bit_count))",
		lineno=357];
	"483:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f786012da10>",
		fillcolor=lightcyan,
		label="483:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CA" -> "484:BL"	 [cond="[]",
		lineno=None];
	"373:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860564bd0>",
		fillcolor=springgreen,
		label="373:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"373:IF" -> "373:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=373];
	"375:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860564f10>",
		fillcolor=turquoise,
		label="375:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"373:IF" -> "375:BL"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=373];
	"361:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860564610>",
		fillcolor=turquoise,
		label="361:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"362:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860564890>",
		fillcolor=springgreen,
		label="362:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"361:BL" -> "362:IF"	 [cond="[]",
		lineno=None];
	"487:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"381:AS" -> "448:AL";
	"553:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7860152f10>",
		fillcolor=lightcyan,
		label="553:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"553:CA" -> "553:NS"	 [cond="[]",
		lineno=None];
	"538:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7860152710>",
		fillcolor=lightcyan,
		label="538:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"539:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860152950>",
		fillcolor=turquoise,
		label="539:BL
clear_counters <= 1'b1;
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860152890>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f7860152a50>]",
		style=filled,
		typ=Block];
	"538:CA" -> "539:BL"	 [cond="[]",
		lineno=None];
	"442:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f786056dd50>",
		fillcolor=turquoise,
		label="442:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"443:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f786056ded0>",
		fillcolor=springgreen,
		label="443:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"442:BL" -> "443:IF"	 [cond="[]",
		lineno=None];
	"326:AS" -> "315:AL";
	"500:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860136f90>",
		fillcolor=springgreen,
		label="500:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"501:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860156110>",
		fillcolor=firebrick,
		label="501:NS
m1_next_state <= m1_measure_2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860156110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"500:IF" -> "501:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && ~serial_dat_i))",
		lineno=500];
	"500:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860136ed0>",
		fillcolor=firebrick,
		label="500:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860136ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"500:IF" -> "500:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && ~serial_dat_i)",
		lineno=500];
	"498:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860136ad0>",
		fillcolor=firebrick,
		label="498:NS
m1_next_state <= m1_measure_3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860136ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"498:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"423:AS" -> "314:AS";
	"423:AS" -> "424:AS";
	"423:AS" -> "349:AL";
	"355:IF" -> "355:NS"	 [cond="['clear_counters']",
		label=clear_counters,
		lineno=355];
	"355:IF" -> "357:IF"	 [cond="['clear_counters']",
		label="!(clear_counters)",
		lineno=355];
	"511:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"350:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f786018ab10>",
		fillcolor=turquoise,
		label="350:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"350:BL" -> "351:IF"	 [cond="[]",
		lineno=None];
	"417:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786056d6d0>",
		fillcolor=firebrick,
		label="417:NS
measurement <= main_count >> 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f786056d6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_408:AL"	 [def_var="['measurement']",
		label="Leaf_408:AL"];
	"417:NS" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"505:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860156210>",
		fillcolor=turquoise,
		label="505:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78601561d0>]",
		style=filled,
		typ=Block];
	"505:BL" -> "508:IF"	 [cond="[]",
		lineno=None];
	"392:AL" -> "393:BL"	 [cond="[]",
		lineno=None];
	"Leaf_441:AL" -> "448:AL";
	"463:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f7860152e50>",
		fillcolor=linen,
		label="463:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"463:CS" -> "516:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "493:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "547:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "465:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "522:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "472:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "483:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "553:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "538:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"532:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7860152210>",
		fillcolor=lightcyan,
		label="532:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"463:CS" -> "532:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"504:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7860136d10>",
		fillcolor=lightcyan,
		label="504:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"463:CS" -> "504:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"Leaf_448:AL" -> "315:AL";
	"Leaf_448:AL" -> "314:AS";
	"Leaf_448:AL" -> "408:AL";
	"Leaf_448:AL" -> "558:AS";
	"Leaf_448:AL" -> "424:AS";
	"Leaf_448:AL" -> "381:AS";
	"Leaf_448:AL" -> "392:AL";
	"Leaf_448:AL" -> "349:AL";
	"Leaf_448:AL" -> "371:AL";
	"441:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f786056dc50>",
		clk_sens=True,
		fillcolor=gold,
		label="441:AL",
		sens="['clk_i', 'reset_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['m1_next_state', 'reset_i']"];
	"Leaf_448:AL" -> "441:AL";
	"317:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860197b50>",
		fillcolor=firebrick,
		label="317:NS
clock_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860197b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"317:NS" -> "Leaf_315:AL"	 [cond="[]",
		lineno=None];
	"318:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860197dd0>",
		fillcolor=springgreen,
		label="318:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"319:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860197fd0>",
		fillcolor=springgreen,
		label="319:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"318:IF" -> "319:IF"	 [cond="['clear_counters']",
		label="!(clear_counters)",
		lineno=318];
	"318:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860197e10>",
		fillcolor=firebrick,
		label="318:NS
clock_count <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860197e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"318:IF" -> "318:NS"	 [cond="['clear_counters']",
		label=clear_counters,
		lineno=318];
	"376:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860564e90>",
		fillcolor=firebrick,
		label="376:NS
target_bits <= 9'h086;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860564e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"376:NS" -> "Leaf_371:AL"	 [cond="[]",
		lineno=None];
	"394:NS" -> "Leaf_392:AL"	 [cond="[]",
		lineno=None];
	"399:NS" -> "Leaf_392:AL"	 [cond="[]",
		lineno=None];
	"477:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f786012d950>",
		fillcolor=springgreen,
		label="477:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"477:IF" -> "477:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && ~serial_dat_i)",
		lineno=477];
	"477:IF" -> "479:IF"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && ~serial_dat_i))",
		lineno=477];
	"321:NS" -> "Leaf_315:AL"	 [cond="[]",
		lineno=None];
	"443:IF" -> "444:NS"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=443];
	"443:IF" -> "443:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=443];
	"349:AL" -> "350:BL"	 [cond="[]",
		lineno=None];
	"362:IF" -> "362:NS"	 [cond="['main_count_rollover']",
		label=main_count_rollover,
		lineno=362];
	"363:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860564a50>",
		fillcolor=firebrick,
		label="363:NS
main_count <= main_count + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860564a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"362:IF" -> "363:NS"	 [cond="['main_count_rollover']",
		label="!(main_count_rollover)",
		lineno=362];
	"548:BL" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"397:IF" -> "397:NS"	 [cond="['idle']",
		label=idle,
		lineno=397];
	"417:IF" -> "417:NS"	 [cond="['clear_counters']",
		label=clear_counters,
		lineno=417];
	"539:BL" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"533:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7860152050>",
		fillcolor=turquoise,
		label="533:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"532:CA" -> "533:BL"	 [cond="[]",
		lineno=None];
	"525:IF" -> "525:NS"	 [cond="['verify_done']",
		label=verify_done,
		lineno=525];
	"525:IF" -> "526:NS"	 [cond="['verify_done']",
		label="!(verify_done)",
		lineno=525];
	"376:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860564d90>",
		fillcolor=springgreen,
		label="376:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"376:IF" -> "376:NS"	 [cond="['verify']",
		label="(~verify)",
		lineno=376];
	"508:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"501:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"479:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"411:NS" -> "Leaf_408:AL"	 [cond="[]",
		lineno=None];
	"360:IF" -> "361:BL"	 [cond="['verify', 'run']",
		label="(verify || run)",
		lineno=360];
	"504:CA" -> "505:BL"	 [cond="[]",
		lineno=None];
	"534:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860152550>",
		fillcolor=springgreen,
		label="534:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"533:BL" -> "534:IF"	 [cond="[]",
		lineno=None];
	"454:BL" -> "463:CS"	 [cond="[]",
		lineno=None];
	"409:BL" -> "411:IF"	 [cond="[]",
		lineno=None];
	"317:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860197b10>",
		fillcolor=springgreen,
		label="317:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"316:BL" -> "317:IF"	 [cond="[]",
		lineno=None];
	"372:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f78605648d0>",
		fillcolor=turquoise,
		label="372:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"371:AL" -> "372:BL"	 [cond="[]",
		lineno=None];
	"Leaf_371:AL" -> "381:AS";
	"Leaf_371:AL" -> "392:AL";
	"Leaf_371:AL" -> "371:AL";
	"500:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"363:NS" -> "Leaf_349:AL"	 [cond="[]",
		lineno=None];
	"535:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860152650>",
		fillcolor=firebrick,
		label="535:NS
m1_next_state <= m1_run;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7860152650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"535:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"375:BL" -> "376:IF"	 [cond="[]",
		lineno=None];
	"377:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7860567050>",
		fillcolor=springgreen,
		label="377:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"375:BL" -> "377:IF"	 [cond="[]",
		lineno=None];
	"377:IF" -> "377:NS"	 [cond="['verify', 'mid_bit_count']",
		label="(verify && mid_bit_count)",
		lineno=377];
	"468:IF" -> "469:NS"	 [cond="['serial_dat_i']",
		label="!((serial_dat_i == 0))",
		lineno=468];
	"468:IF" -> "468:NS"	 [cond="['serial_dat_i']",
		label="(serial_dat_i == 0)",
		lineno=468];
	"372:BL" -> "373:IF"	 [cond="[]",
		lineno=None];
	"473:BL" -> "477:IF"	 [cond="[]",
		lineno=None];
	"498:IF" -> "500:IF"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && serial_dat_i))",
		lineno=498];
	"498:IF" -> "498:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && serial_dat_i)",
		lineno=498];
	"517:BL" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"317:IF" -> "317:NS"	 [cond="['reset_i']",
		label=reset_i,
		lineno=317];
	"317:IF" -> "318:IF"	 [cond="['reset_i']",
		label="!(reset_i)",
		lineno=317];
	"319:IF" -> "320:BL"	 [cond="['enable_clock_count']",
		label=enable_clock_count,
		lineno=319];
	"441:AL" -> "442:BL"	 [cond="[]",
		lineno=None];
	"Leaf_408:AL" -> "423:AS";
	"534:IF" -> "534:NS"	 [cond="['character_miscompare']",
		label=character_miscompare,
		lineno=534];
	"534:IF" -> "535:NS"	 [cond="['character_miscompare']",
		label="!(character_miscompare)",
		lineno=534];
	"318:NS" -> "Leaf_315:AL"	 [cond="[]",
		lineno=None];
}
