strict digraph "" {
	node [label="\N"];
	"494:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7881758b10>",
		fillcolor=turquoise,
		label="494:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758b50>]",
		style=filled,
		typ=Block];
	"498:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7881758c90>",
		fillcolor=springgreen,
		label="498:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"494:BL" -> "498:IF"	 [cond="[]",
		lineno=None];
	"534:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881749310>",
		fillcolor=firebrick,
		label="534:NS
m1_next_state <= m1_verify_failed;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881749310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_448:AL"	 [def_var="['verify', 'run', 'm1_next_state', 'clear_counters', 'idle', 'measure']",
		label="Leaf_448:AL"];
	"534:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"448:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f788174f6d0>",
		clk_sens=False,
		fillcolor=gold,
		label="448:AL",
		sens="['m1_state', 'mid_bit_count', 'serial_dat_i', 'verify_done', 'character_miscompare']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['m1_state', 'verify_done', 'serial_dat_i', 'character_miscompare', 'mid_bit_count']"];
	"454:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f788174fa90>",
		fillcolor=turquoise,
		label="454:BL
idle <= 1'b0;
run <= 1'b0;
measure <= 1'b0;
clear_counters <= 1'b0;
verify <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f788174fb10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f788174fc50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f788174fd90>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f788174fed0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881750090>]",
		style=filled,
		typ=Block];
	"448:AL" -> "454:BL"	 [cond="[]",
		lineno=None];
	"526:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e0e50>",
		fillcolor=firebrick,
		label="526:NS
m1_next_state <= m1_verify_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e0e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"526:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"504:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f78816e0490>",
		fillcolor=lightcyan,
		label="504:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"505:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f78816e0550>",
		fillcolor=turquoise,
		label="505:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e0590>]",
		style=filled,
		typ=Block];
	"504:CA" -> "505:BL"	 [cond="[]",
		lineno=None];
	"498:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e0210>",
		fillcolor=firebrick,
		label="498:NS
m1_next_state <= m1_measure_3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e0210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"498:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"469:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78817504d0>",
		fillcolor=firebrick,
		label="469:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78817504d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"469:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"487:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7881758610>",
		fillcolor=springgreen,
		label="487:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"490:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758650>",
		fillcolor=firebrick,
		label="490:NS
m1_next_state <= m1_measure_1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"487:IF" -> "490:NS"	 [cond="['serial_dat_i']",
		label="!(serial_dat_i)",
		lineno=487];
	"487:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758810>",
		fillcolor=firebrick,
		label="487:NS
m1_next_state <= m1_measure_2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"487:IF" -> "487:NS"	 [cond="['serial_dat_i']",
		label=serial_dat_i,
		lineno=487];
	"522:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f78816e0c10>",
		fillcolor=lightcyan,
		label="522:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"523:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f78816e0c90>",
		fillcolor=turquoise,
		label="523:BL
verify <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e0cd0>]",
		style=filled,
		typ=Block];
	"522:CA" -> "523:BL"	 [cond="[]",
		lineno=None];
	"508:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f78816e06d0>",
		fillcolor=springgreen,
		label="508:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"505:BL" -> "508:IF"	 [cond="[]",
		lineno=None];
	"533:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f78816e9250>",
		fillcolor=turquoise,
		label="533:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"534:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f78816e9290>",
		fillcolor=springgreen,
		label="534:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"533:BL" -> "534:IF"	 [cond="[]",
		lineno=None];
	"511:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e0710>",
		fillcolor=firebrick,
		label="511:NS
m1_next_state <= m1_measure_3;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e0710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"511:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"480:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881750bd0>",
		fillcolor=firebrick,
		label="480:NS
m1_next_state <= m1_measure_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881750bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"480:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"493:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7881758a50>",
		fillcolor=lightcyan,
		label="493:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"493:CA" -> "494:BL"	 [cond="[]",
		lineno=None];
	"463:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f78817501d0>",
		fillcolor=linen,
		label="463:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"454:BL" -> "463:CS"	 [cond="[]",
		lineno=None];
	"547:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f78816e98d0>",
		fillcolor=lightcyan,
		label="547:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"548:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f78816e9950>",
		fillcolor=turquoise,
		label="548:BL
run <= 1'b1;
m1_next_state <= m1_run;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e9990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f78816e9b10>]",
		style=filled,
		typ=Block];
	"547:CA" -> "548:BL"	 [cond="[]",
		lineno=None];
	"463:CS" -> "504:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "522:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "493:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"463:CS" -> "547:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"465:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7881750290>",
		fillcolor=lightcyan,
		label="465:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"463:CS" -> "465:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"472:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7881750910>",
		fillcolor=lightcyan,
		label="472:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"463:CS" -> "472:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"483:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f78817583d0>",
		fillcolor=lightcyan,
		label="483:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"463:CS" -> "483:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"532:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f78816e91d0>",
		fillcolor=lightcyan,
		label="532:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"463:CS" -> "532:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"516:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f78816e0b50>",
		fillcolor=lightcyan,
		label="516:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"463:CS" -> "516:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"553:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f78816e9c90>",
		fillcolor=lightcyan,
		label="553:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"463:CS" -> "553:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"538:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f78816e9490>",
		fillcolor=lightcyan,
		label="538:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"463:CS" -> "538:CA"	 [cond="['m1_state']",
		label=m1_state,
		lineno=463];
	"477:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758090>",
		fillcolor=firebrick,
		label="477:NS
m1_next_state <= m1_measure_1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"477:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"500:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758ed0>",
		fillcolor=firebrick,
		label="500:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"500:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"466:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7881750310>",
		fillcolor=turquoise,
		label="466:BL
idle <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881750350>]",
		style=filled,
		typ=Block];
	"465:CA" -> "466:BL"	 [cond="[]",
		lineno=None];
	"508:IF" -> "511:NS"	 [cond="['serial_dat_i']",
		label="!((!serial_dat_i))",
		lineno=508];
	"508:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e08d0>",
		fillcolor=firebrick,
		label="508:NS
m1_next_state <= m1_measure_4;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e08d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"508:IF" -> "508:NS"	 [cond="['serial_dat_i']",
		label="(!serial_dat_i)",
		lineno=508];
	"484:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7881758490>",
		fillcolor=turquoise,
		label="484:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78817584d0>]",
		style=filled,
		typ=Block];
	"484:BL" -> "487:IF"	 [cond="[]",
		lineno=None];
	"468:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881750650>",
		fillcolor=firebrick,
		label="468:NS
m1_next_state <= m1_measure_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881750650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"468:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"500:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7881758cd0>",
		fillcolor=springgreen,
		label="500:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"500:IF" -> "500:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && ~serial_dat_i)",
		lineno=500];
	"501:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758d10>",
		fillcolor=firebrick,
		label="501:NS
m1_next_state <= m1_measure_2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881758d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"500:IF" -> "501:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && ~serial_dat_i))",
		lineno=500];
	"477:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7881750b50>",
		fillcolor=springgreen,
		label="477:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"477:IF" -> "477:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && ~serial_dat_i)",
		lineno=477];
	"479:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7881750b90>",
		fillcolor=springgreen,
		label="479:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"477:IF" -> "479:IF"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && ~serial_dat_i))",
		lineno=477];
	"479:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881750d90>",
		fillcolor=firebrick,
		label="479:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881750d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"479:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"535:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e92d0>",
		fillcolor=firebrick,
		label="535:NS
m1_next_state <= m1_run;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e92d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"535:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"525:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e0fd0>",
		fillcolor=firebrick,
		label="525:NS
m1_next_state <= m1_verify_1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e0fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"525:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"468:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7881750490>",
		fillcolor=springgreen,
		label="468:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"468:IF" -> "469:NS"	 [cond="['serial_dat_i']",
		label="!((serial_dat_i == 0))",
		lineno=468];
	"468:IF" -> "468:NS"	 [cond="['serial_dat_i']",
		label="(serial_dat_i == 0)",
		lineno=468];
	"473:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f78817509d0>",
		fillcolor=turquoise,
		label="473:BL
measure <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7881750a10>]",
		style=filled,
		typ=Block];
	"472:CA" -> "473:BL"	 [cond="[]",
		lineno=None];
	"473:BL" -> "477:IF"	 [cond="[]",
		lineno=None];
	"548:BL" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"525:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f78816e0e10>",
		fillcolor=springgreen,
		label="525:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"523:BL" -> "525:IF"	 [cond="[]",
		lineno=None];
	"498:IF" -> "498:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && serial_dat_i)",
		lineno=498];
	"498:IF" -> "500:IF"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && serial_dat_i))",
		lineno=498];
	"553:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e9cd0>",
		fillcolor=firebrick,
		label="553:NS
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e9cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"553:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"539:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f78816e9550>",
		fillcolor=turquoise,
		label="539:BL
clear_counters <= 1'b1;
m1_next_state <= m1_idle;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f78816e9590>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f78816e9750>]",
		style=filled,
		typ=Block];
	"539:BL" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"483:CA" -> "484:BL"	 [cond="[]",
		lineno=None];
	"490:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"517:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f788174f490>",
		fillcolor=turquoise,
		label="517:BL
clear_counters <= 1'b1;
m1_next_state <= m1_verify_0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f788174f190>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f788174f310>]",
		style=filled,
		typ=Block];
	"517:BL" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"532:CA" -> "533:BL"	 [cond="[]",
		lineno=None];
	"525:IF" -> "526:NS"	 [cond="['verify_done']",
		label="!(verify_done)",
		lineno=525];
	"525:IF" -> "525:NS"	 [cond="['verify_done']",
		label=verify_done,
		lineno=525];
	"516:CA" -> "517:BL"	 [cond="[]",
		lineno=None];
	"479:IF" -> "480:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="!((mid_bit_count && serial_dat_i))",
		lineno=479];
	"479:IF" -> "479:NS"	 [cond="['mid_bit_count', 'serial_dat_i']",
		label="(mid_bit_count && serial_dat_i)",
		lineno=479];
	"534:IF" -> "534:NS"	 [cond="['character_miscompare']",
		label=character_miscompare,
		lineno=534];
	"534:IF" -> "535:NS"	 [cond="['character_miscompare']",
		label="!(character_miscompare)",
		lineno=534];
	"508:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"487:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"501:NS" -> "Leaf_448:AL"	 [cond="[]",
		lineno=None];
	"553:CA" -> "553:NS"	 [cond="[]",
		lineno=None];
	"538:CA" -> "539:BL"	 [cond="[]",
		lineno=None];
	"466:BL" -> "468:IF"	 [cond="[]",
		lineno=None];
}
