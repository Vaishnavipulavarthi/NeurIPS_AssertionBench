strict digraph "compose( ,  )" {
	node [label="\N"];
	"684:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7feacfedbe50>",
		fillcolor=firebrick,
		label="684:NS
mem0[addr] <= di[7:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7feacfedbe50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_675:AL"	 [def_var="['mem1', 'mem0', 'mem3', 'mem2']",
		label="Leaf_675:AL"];
	"684:NS" -> "Leaf_675:AL"	 [cond="[]",
		lineno=None];
	"667:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7feacfacf690>",
		fillcolor=firebrick,
		label="667:NS
raddr <= addr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7feacfacf690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_665:AL"	 [def_var="['raddr']",
		label="Leaf_665:AL"];
	"667:NS" -> "Leaf_665:AL"	 [cond="[]",
		lineno=None];
	"683:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7feacfedbc90>",
		fillcolor=springgreen,
		label="683:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"683:IF" -> "684:NS"	 [cond="['ce', 'we']",
		label="(ce && we[0])",
		lineno=683];
	"675:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7feacfacfe10>",
		clk_sens=True,
		fillcolor=gold,
		label="675:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['we', 'ce', 'di']"];
	"676:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7feacfedbb10>",
		fillcolor=turquoise,
		label="676:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"675:AL" -> "676:BL"	 [cond="[]",
		lineno=None];
	"677:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7feacfedb050>",
		fillcolor=springgreen,
		label="677:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"678:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7feacfedb210>",
		fillcolor=firebrick,
		label="678:NS
mem3[addr] <= di[31:24];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7feacfedb210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"677:IF" -> "678:NS"	 [cond="['ce', 'we']",
		label="(ce && we[3])",
		lineno=677];
	"679:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7feacfedb490>",
		fillcolor=springgreen,
		label="679:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"680:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7feacfedb650>",
		fillcolor=firebrick,
		label="680:NS
mem2[addr] <= di[23:16];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7feacfedb650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"679:IF" -> "680:NS"	 [cond="['ce', 'we']",
		label="(ce && we[2])",
		lineno=679];
	"681:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7feacfedb890>",
		fillcolor=springgreen,
		label="681:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"682:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7feacfedba50>",
		fillcolor=firebrick,
		label="682:NS
mem1[addr] <= di[15:8];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7feacfedba50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"681:IF" -> "682:NS"	 [cond="['ce', 'we']",
		label="(ce && we[1])",
		lineno=681];
	"669:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7feacfacf990>",
		def_var="['q']",
		fillcolor=deepskyblue,
		label="669:AS
q = (rst)? { 32{ 1'b0 } } : { mem3[raddr], mem2[raddr], mem1[raddr], mem0[raddr] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rst', 'mem3', 'raddr', 'mem2', 'raddr', 'mem1', 'raddr', 'mem0', 'raddr']"];
	"Leaf_665:AL" -> "669:AS";
	"658:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7feacfacf2d0>",
		def_var="['dato']",
		fillcolor=deepskyblue,
		label="658:AS
dato = (oe & ce)? q : { 32{ 1'bz } };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['oe', 'ce', 'q']"];
	"669:AS" -> "658:AS";
	"678:NS" -> "Leaf_675:AL"	 [cond="[]",
		lineno=None];
	"676:BL" -> "683:IF"	 [cond="[]",
		lineno=None];
	"676:BL" -> "677:IF"	 [cond="[]",
		lineno=None];
	"676:BL" -> "679:IF"	 [cond="[]",
		lineno=None];
	"676:BL" -> "681:IF"	 [cond="[]",
		lineno=None];
	"665:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7feacfacf510>",
		clk_sens=True,
		fillcolor=gold,
		label="665:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['addr', 'ce']"];
	"666:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7feacfacf450>",
		fillcolor=springgreen,
		label="666:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"665:AL" -> "666:IF"	 [cond="[]",
		lineno=None];
	"666:IF" -> "667:NS"	 [cond="['ce']",
		label=ce,
		lineno=666];
	"Leaf_675:AL" -> "669:AS";
	"682:NS" -> "Leaf_675:AL"	 [cond="[]",
		lineno=None];
	"680:NS" -> "Leaf_675:AL"	 [cond="[]",
		lineno=None];
}
