strict digraph "compose( ,  )" {
	node [label="\N"];
	"1659:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cdf7d0>",
		def_var="['pid_DATA']",
		fillcolor=deepskyblue,
		label="1659:AS
pid_DATA = pid_DATA0 | pid_DATA1 | pid_DATA2 | pid_MDATA;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']"];
	"1777:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394a48e50>",
		clk_sens=False,
		fillcolor=gold,
		label="1777:AL",
		sens="['state', 'rx_valid', 'rx_active', 'rx_err', 'pid_ACK', 'pid_TOKEN', 'pid_DATA']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_err', 'rx_valid', 'state', 'rx_active', 'pid_TOKEN', 'pid_DATA', 'pid_ACK']"];
	"1659:AS" -> "1777:AL";
	"1751:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a2c850>",
		fillcolor=firebrick,
		label="1751:NS
crc16_sum <= 16'hffff;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a2c850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1750:AL"	 [def_var="['crc16_sum']",
		label="Leaf_1750:AL"];
	"1751:NS" -> "Leaf_1750:AL"	 [cond="[]",
		lineno=None];
	"1665:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394cdfd50>",
		clk_sens=True,
		fillcolor=gold,
		label="1665:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_le_2', 'rx_data']"];
	"1666:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394cdfc90>",
		fillcolor=springgreen,
		label="1666:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1665:AL" -> "1666:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1731:AL"	 [def_var="['d2', 'd0', 'd1']",
		label="Leaf_1731:AL"];
	"1731:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394a47650>",
		clk_sens=True,
		fillcolor=gold,
		label="1731:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_valid_d', 'rx_data', 'd0', 'd1']"];
	"Leaf_1731:AL" -> "1731:AL";
	"1738:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394a47d90>",
		def_var="['rx_data_st']",
		fillcolor=deepskyblue,
		label="1738:AS
rx_data_st = d2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['d2']"];
	"Leaf_1731:AL" -> "1738:AS";
	"1842:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a3b810>",
		fillcolor=turquoise,
		label="1842:BL
data_done = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a3b790>]",
		style=filled,
		typ=Block];
	"1844:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a3b950>",
		fillcolor=springgreen,
		label="1844:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1842:BL" -> "1844:IF"	 [cond="[]",
		lineno=None];
	"1715:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a40a50>",
		fillcolor=springgreen,
		label="1715:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1715:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a40b50>",
		fillcolor=firebrick,
		label="1715:NS
rxv1 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a40b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1715:IF" -> "1715:NS"	 [cond="['data_done']",
		label=data_done,
		lineno=1715];
	"1821:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a4f850>",
		fillcolor=cadetblue,
		label="1821:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a4f850>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_1777:AL"	 [def_var="['got_pid_ack', 'data_done', 'seq_err', 'data_valid_d', 'token_le_1', 'token_le_2', 'pid_le_sm', 'next_state']",
		label="Leaf_1777:AL"];
	"1821:BS" -> "Leaf_1777:AL"	 [cond="[]",
		lineno=None];
	"1762:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394a48510>",
		def_var="['crc16_err']",
		fillcolor=deepskyblue,
		label="1762:AS
crc16_err = data_done & (crc16_sum != 16'h800d);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_done', 'crc16_sum']"];
	"Leaf_1750:AL" -> "1762:AS";
	"1709:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394a40450>",
		clk_sens=True,
		fillcolor=gold,
		label="1709:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'data_done', 'data_valid_d']"];
	"1711:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a40650>",
		fillcolor=springgreen,
		label="1711:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1709:AL" -> "1711:IF"	 [cond="[]",
		lineno=None];
	"1713:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a408d0>",
		fillcolor=firebrick,
		label="1713:NS
rxv1 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a408d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1709:AL"	 [def_var="['rxv1']",
		label="Leaf_1709:AL"];
	"1713:NS" -> "Leaf_1709:AL"	 [cond="[]",
		lineno=None];
	"1798:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a26290>",
		fillcolor=turquoise,
		label="1798:BL
got_pid_ack = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a26210>]",
		style=filled,
		typ=Block];
	"1800:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a263d0>",
		fillcolor=springgreen,
		label="1800:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1798:BL" -> "1800:IF"	 [cond="[]",
		lineno=None];
	"1678:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cdb8d0>",
		def_var="['crc5_err']",
		fillcolor=deepskyblue,
		label="1678:AS
crc5_err = token_valid & (crc5_out2 != token_crc5);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token_valid', 'crc5_out2', 'token_crc5']"];
	"Leaf_1665:AL"	 [def_var="['token1']",
		label="Leaf_1665:AL"];
	"1701:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394a40090>",
		def_var="['token_endp']",
		fillcolor=deepskyblue,
		label="1701:AS
token_endp = { token1[2:0], token0[7] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token1', 'token0']"];
	"Leaf_1665:AL" -> "1701:AS";
	"1699:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394a34b50>",
		def_var="['frame_no']",
		fillcolor=deepskyblue,
		label="1699:AS
frame_no = { token1[2:0], token0 };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token1', 'token0']"];
	"Leaf_1665:AL" -> "1699:AS";
	"1702:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394a40290>",
		def_var="['token_crc5']",
		fillcolor=deepskyblue,
		label="1702:AS
token_crc5 = token1[7:3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token1']"];
	"Leaf_1665:AL" -> "1702:AS";
	"1817:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a4f310>",
		fillcolor=springgreen,
		label="1817:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1819:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a4f650>",
		fillcolor=turquoise,
		label="1819:BL
seq_err = !rx_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a4f5d0>]",
		style=filled,
		typ=Block];
	"1817:IF" -> "1819:BL"	 [cond="['rx_active', 'rx_err', 'rx_valid', 'pid_TOKEN', 'pid_DATA']",
		label="(!rx_active || rx_err || rx_valid && !(pid_TOKEN || pid_DATA))",
		lineno=1817];
	"1644:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394ccd450>",
		def_var="['pid_DATA0']",
		fillcolor=deepskyblue,
		label="1644:AS
pid_DATA0 = pid[3:0] == 4'b0011;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1644:AS" -> "1659:AS";
	"1775:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a489d0>",
		fillcolor=firebrick,
		label="1775:NS
state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a489d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1772:AL"	 [def_var="['state']",
		label="Leaf_1772:AL"];
	"1775:NS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1751:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a2c890>",
		fillcolor=springgreen,
		label="1751:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1751:IF" -> "1751:NS"	 [cond="['crc16_clr']",
		label=crc16_clr,
		lineno=1751];
	"1753:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a2ca10>",
		fillcolor=springgreen,
		label="1753:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1751:IF" -> "1753:IF"	 [cond="['crc16_clr']",
		label="!(crc16_clr)",
		lineno=1751];
	"1788:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f1394a26350>",
		fillcolor=linen,
		label="1788:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1789:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1394a289d0>",
		fillcolor=lightcyan,
		label="1789:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1788:CS" -> "1789:CA"	 [cond="['state']",
		label=state,
		lineno=1788];
	"1824:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1394a26250>",
		fillcolor=lightcyan,
		label="1824:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1788:CS" -> "1824:CA"	 [cond="['state']",
		label=state,
		lineno=1788];
	"1838:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1394a4fb90>",
		fillcolor=lightcyan,
		label="1838:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1788:CS" -> "1838:CA"	 [cond="['state']",
		label=state,
		lineno=1788];
	"1794:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1394a28e50>",
		fillcolor=lightcyan,
		label="1794:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1788:CS" -> "1794:CA"	 [cond="['state']",
		label=state,
		lineno=1788];
	"1745:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394a2c090>",
		clk_sens=True,
		fillcolor=gold,
		label="1745:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_active']"];
	"1746:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a2c2d0>",
		fillcolor=firebrick,
		label="1746:NS
rx_active_r <= rx_active;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a2c2d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1745:AL" -> "1746:NS"	 [cond="[]",
		lineno=None];
	"1833:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a4ff50>",
		fillcolor=turquoise,
		label="1833:BL
seq_err = !rx_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a4fed0>]",
		style=filled,
		typ=Block];
	"1835:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a3b090>",
		fillcolor=springgreen,
		label="1835:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1833:BL" -> "1835:IF"	 [cond="[]",
		lineno=None];
	"1840:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a3b390>",
		fillcolor=springgreen,
		label="1840:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1840:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a3b490>",
		fillcolor=cadetblue,
		label="1840:BS
data_valid_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a3b490>]",
		style=filled,
		typ=BlockingSubstitution];
	"1840:IF" -> "1840:BS"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="(rx_valid && rx_active && !rx_err)",
		lineno=1840];
	"1779:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a28890>",
		fillcolor=turquoise,
		label="1779:BL
next_state = state;
pid_le_sm = 1'b0;
token_le_1 = 1'b0;
token_le_2 = 1'b0;
data_valid_d = 1'b0;
data_done = 1'b0;
seq_err = \
1'b0;
got_pid_ack = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a48ed0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a28050>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a28190>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a282d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a28450>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a28590>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a286d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a28810>]",
		style=filled,
		typ=Block];
	"1779:BL" -> "1788:CS"	 [cond="[]",
		lineno=None];
	"1669:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cdb150>",
		fillcolor=firebrick,
		label="1669:NS
token_valid_r1 <= token_le_2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cdb150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1668:AL"	 [def_var="['token_valid_r1']",
		label="Leaf_1668:AL"];
	"1669:NS" -> "Leaf_1668:AL"	 [cond="[]",
		lineno=None];
	"1797:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a26490>",
		fillcolor=springgreen,
		label="1797:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1797:IF" -> "1798:BL"	 [cond="['pid_ACK', 'rx_err']",
		label="(pid_ACK && !rx_err)",
		lineno=1797];
	"1804:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a26ad0>",
		fillcolor=springgreen,
		label="1804:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1797:IF" -> "1804:IF"	 [cond="['pid_ACK', 'rx_err']",
		label="!((pid_ACK && !rx_err))",
		lineno=1797];
	"1825:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a26750>",
		fillcolor=turquoise,
		label="1825:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1826:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a4fad0>",
		fillcolor=springgreen,
		label="1826:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1825:BL" -> "1826:IF"	 [cond="[]",
		lineno=None];
	"1634:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394cc52d0>",
		fillcolor=springgreen,
		label="1634:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1634:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cc5290>",
		fillcolor=firebrick,
		label="1634:NS
pid <= 8'hf0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cc5290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1634:IF" -> "1634:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1634];
	"1636:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394cc5410>",
		fillcolor=springgreen,
		label="1636:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1634:IF" -> "1636:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1634];
	"1674:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cdb690>",
		def_var="['token_valid']",
		fillcolor=deepskyblue,
		label="1674:AS
token_valid = token_valid_str1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token_valid_str1']"];
	"1674:AS" -> "1678:AS";
	"Leaf_1728:AL"	 [def_var="['data_valid0']",
		label="Leaf_1728:AL"];
	"1739:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394a47f10>",
		def_var="['rx_data_valid']",
		fillcolor=deepskyblue,
		label="1739:AS
rx_data_valid = data_valid0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_valid0']"];
	"Leaf_1728:AL" -> "1739:AS";
	"1734:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a47990>",
		fillcolor=springgreen,
		label="1734:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1734:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47a90>",
		fillcolor=firebrick,
		label="1734:NS
d1 <= d0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1734:IF" -> "1734:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1734];
	"1832:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a4fd50>",
		fillcolor=springgreen,
		label="1832:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1832:IF" -> "1833:BL"	 [cond="['rx_active', 'rx_err']",
		label="(!rx_active || rx_err)",
		lineno=1832];
	"1654:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394ccad90>",
		def_var="['pid_SPLIT']",
		fillcolor=deepskyblue,
		label="1654:AS
pid_SPLIT = pid[3:0] == 4'b1000;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1720:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394a409d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1720:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'rxv1', 'data_valid_d', 'data_done']"];
	"1722:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a40d50>",
		fillcolor=springgreen,
		label="1722:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1720:AL" -> "1722:IF"	 [cond="[]",
		lineno=None];
	"1666:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cdfed0>",
		fillcolor=firebrick,
		label="1666:NS
token1 <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cdfed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1666:NS" -> "Leaf_1665:AL"	 [cond="[]",
		lineno=None];
	"1668:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394cdfe10>",
		clk_sens=True,
		fillcolor=gold,
		label="1668:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_le_2']"];
	"1668:AL" -> "1669:NS"	 [cond="[]",
		lineno=None];
	"1655:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cdf050>",
		def_var="['pid_PING']",
		fillcolor=deepskyblue,
		label="1655:AS
pid_PING = pid[3:0] == 4'b0100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1658:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cdf490>",
		def_var="['pid_TOKEN']",
		fillcolor=deepskyblue,
		label="1658:AS
pid_TOKEN = pid_OUT | pid_IN | pid_SOF | pid_SETUP | pid_PING;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid_OUT', 'pid_IN', 'pid_SOF', 'pid_SETUP', 'pid_PING']"];
	"1655:AS" -> "1658:AS";
	"1844:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a3ba50>",
		fillcolor=cadetblue,
		label="1844:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a3ba50>]",
		style=filled,
		typ=BlockingSubstitution];
	"1844:IF" -> "1844:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1844];
	"Leaf_1632:AL"	 [def_var="['pid']",
		label="Leaf_1632:AL"];
	"1634:NS" -> "Leaf_1632:AL"	 [cond="[]",
		lineno=None];
	"1827:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a4f9d0>",
		fillcolor=turquoise,
		label="1827:BL
token_le_2 = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a4f990>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a4fb10>]",
		style=filled,
		typ=Block];
	"1827:BL" -> "Leaf_1777:AL"	 [cond="[]",
		lineno=None];
	"1711:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a40610>",
		fillcolor=firebrick,
		label="1711:NS
rxv1 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a40610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1711:NS" -> "Leaf_1709:AL"	 [cond="[]",
		lineno=None];
	"1722:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a40d10>",
		fillcolor=firebrick,
		label="1722:NS
rxv2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a40d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1720:AL"	 [def_var="['rxv2']",
		label="Leaf_1720:AL"];
	"1722:NS" -> "Leaf_1720:AL"	 [cond="[]",
		lineno=None];
	"1724:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47090>",
		fillcolor=firebrick,
		label="1724:NS
rxv2 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1724:NS" -> "Leaf_1720:AL"	 [cond="[]",
		lineno=None];
	"1726:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a47210>",
		fillcolor=springgreen,
		label="1726:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1726:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47310>",
		fillcolor=firebrick,
		label="1726:NS
rxv2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1726:IF" -> "1726:NS"	 [cond="['data_done']",
		label=data_done,
		lineno=1726];
	"1648:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394ccde50>",
		def_var="['pid_ACK']",
		fillcolor=deepskyblue,
		label="1648:AS
pid_ACK = pid[3:0] == 4'b0010;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1648:AS" -> "1777:AL";
	"Leaf_1671:AL"	 [def_var="['token_valid_str1']",
		label="Leaf_1671:AL"];
	"Leaf_1671:AL" -> "1674:AS";
	"1645:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394ccd6d0>",
		def_var="['pid_DATA1']",
		fillcolor=deepskyblue,
		label="1645:AS
pid_DATA1 = pid[3:0] == 4'b1011;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1645:AS" -> "1659:AS";
	"1805:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a26890>",
		fillcolor=turquoise,
		label="1805:BL
token_le_1 = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a268d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a26a10>]",
		style=filled,
		typ=Block];
	"1805:BL" -> "Leaf_1777:AL"	 [cond="[]",
		lineno=None];
	"1651:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cca610>",
		def_var="['pid_NYET']",
		fillcolor=deepskyblue,
		label="1651:AS
pid_NYET = pid[3:0] == 4'b0110;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1662:AL"	 [def_var="['token0']",
		label="Leaf_1662:AL"];
	"Leaf_1662:AL" -> "1701:AS";
	"Leaf_1662:AL" -> "1699:AS";
	"1700:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394a34d50>",
		def_var="['token_fadr']",
		fillcolor=deepskyblue,
		label="1700:AS
token_fadr = token0[6:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token0']"];
	"Leaf_1662:AL" -> "1700:AS";
	"1711:IF" -> "1711:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1711];
	"1713:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a40910>",
		fillcolor=springgreen,
		label="1713:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1711:IF" -> "1713:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1711];
	"1734:NS" -> "Leaf_1731:AL"	 [cond="[]",
		lineno=None];
	"1642:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cc5f10>",
		def_var="['pid_SOF']",
		fillcolor=deepskyblue,
		label="1642:AS
pid_SOF = pid[3:0] == 4'b0101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1642:AS" -> "1658:AS";
	"1724:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a470d0>",
		fillcolor=springgreen,
		label="1724:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1724:IF" -> "1724:NS"	 [cond="['rxv1', 'data_valid_d']",
		label="(rxv1 && data_valid_d)",
		lineno=1724];
	"1724:IF" -> "1726:IF"	 [cond="['rxv1', 'data_valid_d']",
		label="!((rxv1 && data_valid_d))",
		lineno=1724];
	"1732:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a47b10>",
		fillcolor=turquoise,
		label="1732:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1732:BL" -> "1734:IF"	 [cond="[]",
		lineno=None];
	"1733:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a47590>",
		fillcolor=springgreen,
		label="1733:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1732:BL" -> "1733:IF"	 [cond="[]",
		lineno=None];
	"1735:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a47b90>",
		fillcolor=springgreen,
		label="1735:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1732:BL" -> "1735:IF"	 [cond="[]",
		lineno=None];
	"1632:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394cc50d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1632:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'rx_data', 'pid_ld_en']"];
	"1632:AL" -> "1634:IF"	 [cond="[]",
		lineno=None];
	"1649:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cca110>",
		def_var="['pid_NACK']",
		fillcolor=deepskyblue,
		label="1649:AS
pid_NACK = pid[3:0] == 4'b1010;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1826:IF" -> "1832:IF"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="!((rx_valid && rx_active && !rx_err))",
		lineno=1826];
	"1826:IF" -> "1827:BL"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="(rx_valid && rx_active && !rx_err)",
		lineno=1826];
	"1726:NS" -> "Leaf_1720:AL"	 [cond="[]",
		lineno=None];
	"1790:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a28b90>",
		fillcolor=turquoise,
		label="1790:BL
pid_le_sm = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a28b10>]",
		style=filled,
		typ=Block];
	"1789:CA" -> "1790:BL"	 [cond="[]",
		lineno=None];
	"1650:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cca390>",
		def_var="['pid_STALL']",
		fillcolor=deepskyblue,
		label="1650:AS
pid_STALL = pid[3:0] == 4'b1110;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1824:CA" -> "1825:BL"	 [cond="[]",
		lineno=None];
	"1662:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394cdfa50>",
		clk_sens=True,
		fillcolor=gold,
		label="1662:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_le_1', 'rx_data']"];
	"1663:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394cdf9d0>",
		fillcolor=springgreen,
		label="1663:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1662:AL" -> "1663:IF"	 [cond="[]",
		lineno=None];
	"1840:BS" -> "Leaf_1777:AL"	 [cond="[]",
		lineno=None];
	"1774:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a48890>",
		fillcolor=springgreen,
		label="1774:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1774:IF" -> "1775:NS"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1774];
	"1774:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a48850>",
		fillcolor=firebrick,
		label="1774:NS
state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a48850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1774:IF" -> "1774:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1774];
	"1800:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a264d0>",
		fillcolor=cadetblue,
		label="1800:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a264d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1800:BS" -> "Leaf_1777:AL"	 [cond="[]",
		lineno=None];
	"1792:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a28e10>",
		fillcolor=cadetblue,
		label="1792:BS
next_state = ACTIVE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a28e10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1792:BS" -> "Leaf_1777:AL"	 [cond="[]",
		lineno=None];
	"1722:IF" -> "1722:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1722];
	"1722:IF" -> "1724:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1722];
	"1804:IF" -> "1805:BL"	 [cond="['pid_TOKEN', 'rx_valid', 'rx_active', 'rx_err']",
		label="(pid_TOKEN && rx_valid && rx_active && !rx_err)",
		lineno=1804];
	"1811:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a26fd0>",
		fillcolor=springgreen,
		label="1811:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1804:IF" -> "1811:IF"	 [cond="['pid_TOKEN', 'rx_valid', 'rx_active', 'rx_err']",
		label="!((pid_TOKEN && rx_valid && rx_active && !rx_err))",
		lineno=1804];
	"1729:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47450>",
		fillcolor=firebrick,
		label="1729:NS
data_valid0 <= rxv2 & data_valid_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1729:NS" -> "Leaf_1728:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1777:AL" -> "1665:AL";
	"Leaf_1777:AL" -> "1709:AL";
	"Leaf_1777:AL" -> "1720:AL";
	"Leaf_1777:AL" -> "1668:AL";
	"Leaf_1777:AL" -> "1662:AL";
	"Leaf_1777:AL" -> "1731:AL";
	"1671:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394cdb1d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1671:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['got_pid_ack', 'token_valid_r1']"];
	"Leaf_1777:AL" -> "1671:AL";
	"1740:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394a2c0d0>",
		def_var="['rx_data_done']",
		fillcolor=deepskyblue,
		label="1740:AS
rx_data_done = data_done;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_done']"];
	"Leaf_1777:AL" -> "1740:AS";
	"1728:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394a40c50>",
		clk_sens=True,
		fillcolor=gold,
		label="1728:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rxv2', 'data_valid_d']"];
	"Leaf_1777:AL" -> "1728:AL";
	"1627:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13949dee90>",
		def_var="['pid_ld_en']",
		fillcolor=deepskyblue,
		label="1627:AS
pid_ld_en = pid_le_sm & rx_active & rx_valid;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid_le_sm', 'rx_active', 'rx_valid']"];
	"Leaf_1777:AL" -> "1627:AS";
	"1772:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394a48690>",
		clk_sens=True,
		fillcolor=gold,
		label="1772:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'next_state']"];
	"Leaf_1777:AL" -> "1772:AL";
	"1750:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394a2c6d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1750:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_valid_d', 'crc16_out', 'crc16_clr']"];
	"Leaf_1777:AL" -> "1750:AL";
	"Leaf_1777:AL" -> "1762:AS";
	"1731:AL" -> "1732:BL"	 [cond="[]",
		lineno=None];
	"1663:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cdfbd0>",
		fillcolor=firebrick,
		label="1663:NS
token0 <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cdfbd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1663:NS" -> "Leaf_1662:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1745:AL"	 [def_var="['rx_active_r']",
		label="Leaf_1745:AL"];
	"1746:NS" -> "Leaf_1745:AL"	 [cond="[]",
		lineno=None];
	"1774:NS" -> "Leaf_1772:AL"	 [cond="[]",
		lineno=None];
	"1821:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a4f750>",
		fillcolor=springgreen,
		label="1821:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1819:BL" -> "1821:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1720:AL" -> "1728:AL";
	"1672:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cdb4d0>",
		fillcolor=firebrick,
		label="1672:NS
token_valid_str1 <= token_valid_r1 | got_pid_ack;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cdb4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1671:AL" -> "1672:NS"	 [cond="[]",
		lineno=None];
	"1647:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394ccdbd0>",
		def_var="['pid_MDATA']",
		fillcolor=deepskyblue,
		label="1647:AS
pid_MDATA = pid[3:0] == 4'b1111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1647:AS" -> "1659:AS";
	"1643:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394ccd1d0>",
		def_var="['pid_SETUP']",
		fillcolor=deepskyblue,
		label="1643:AS
pid_SETUP = pid[3:0] == 4'b1101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1643:AS" -> "1658:AS";
	"1728:AL" -> "1729:NS"	 [cond="[]",
		lineno=None];
	"1627:AS" -> "1632:AL";
	"1733:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47850>",
		fillcolor=firebrick,
		label="1733:NS
d0 <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1733:NS" -> "Leaf_1731:AL"	 [cond="[]",
		lineno=None];
	"1696:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394a34810>",
		def_var="['crc5_out2']",
		fillcolor=deepskyblue,
		label="1696:AS
crc5_out2 = ~{ crc5_out[0], crc5_out[1], crc5_out[2], crc5_out[3], crc5_out[4] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc5_out', 'crc5_out', 'crc5_out', 'crc5_out', 'crc5_out']"];
	"1696:AS" -> "1678:AS";
	"1835:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a3b190>",
		fillcolor=cadetblue,
		label="1835:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a3b190>]",
		style=filled,
		typ=BlockingSubstitution];
	"1835:IF" -> "1835:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1835];
	"1636:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cc5510>",
		fillcolor=firebrick,
		label="1636:NS
pid <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394cc5510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1636:NS" -> "Leaf_1632:AL"	 [cond="[]",
		lineno=None];
	"1792:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a28d10>",
		fillcolor=springgreen,
		label="1792:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1792:IF" -> "1792:BS"	 [cond="['rx_valid', 'rx_active']",
		label="(rx_valid && rx_active)",
		lineno=1792];
	"1790:BL" -> "1792:IF"	 [cond="[]",
		lineno=None];
	"1638:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cc5810>",
		def_var="['pid_cks_err']",
		fillcolor=deepskyblue,
		label="1638:AS
pid_cks_err = pid[3:0] != ~pid[7:4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid', 'pid']"];
	"1772:AL" -> "1774:IF"	 [cond="[]",
		lineno=None];
	"1663:IF" -> "1663:NS"	 [cond="['token_le_1']",
		label=token_le_1,
		lineno=1663];
	"1750:AL" -> "1751:IF"	 [cond="[]",
		lineno=None];
	"1821:IF" -> "1821:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1821];
	"1735:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47c90>",
		fillcolor=firebrick,
		label="1735:NS
d2 <= d1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a47c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1735:NS" -> "Leaf_1731:AL"	 [cond="[]",
		lineno=None];
	"1839:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a3b510>",
		fillcolor=turquoise,
		label="1839:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1838:CA" -> "1839:BL"	 [cond="[]",
		lineno=None];
	"1795:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a28dd0>",
		fillcolor=turquoise,
		label="1795:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1795:BL" -> "1797:IF"	 [cond="[]",
		lineno=None];
	"1672:NS" -> "Leaf_1671:AL"	 [cond="[]",
		lineno=None];
	"1811:IF" -> "1817:IF"	 [cond="['pid_DATA', 'rx_valid', 'rx_active', 'rx_err']",
		label="!((pid_DATA && rx_valid && rx_active && !rx_err))",
		lineno=1811];
	"1812:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1394a26e90>",
		fillcolor=turquoise,
		label="1812:BL
data_valid_d = 1'b1;
next_state = DATA;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a26ed0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1394a4f050>]",
		style=filled,
		typ=Block];
	"1811:IF" -> "1812:BL"	 [cond="['pid_DATA', 'rx_valid', 'rx_active', 'rx_err']",
		label="(pid_DATA && rx_valid && rx_active && !rx_err)",
		lineno=1811];
	"1733:IF" -> "1733:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1733];
	"1844:BS" -> "Leaf_1777:AL"	 [cond="[]",
		lineno=None];
	"1658:AS" -> "1777:AL";
	"1646:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394ccd950>",
		def_var="['pid_DATA2']",
		fillcolor=deepskyblue,
		label="1646:AS
pid_DATA2 = pid[3:0] == 4'b0111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1646:AS" -> "1659:AS";
	"1800:IF" -> "1800:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1800];
	"Leaf_1632:AL" -> "1644:AS";
	"Leaf_1632:AL" -> "1654:AS";
	"Leaf_1632:AL" -> "1655:AS";
	"Leaf_1632:AL" -> "1648:AS";
	"Leaf_1632:AL" -> "1645:AS";
	"Leaf_1632:AL" -> "1651:AS";
	"Leaf_1632:AL" -> "1642:AS";
	"Leaf_1632:AL" -> "1649:AS";
	"Leaf_1632:AL" -> "1650:AS";
	"Leaf_1632:AL" -> "1647:AS";
	"Leaf_1632:AL" -> "1643:AS";
	"Leaf_1632:AL" -> "1638:AS";
	"Leaf_1632:AL" -> "1646:AS";
	"1656:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cdf2d0>",
		def_var="['pid_RES']",
		fillcolor=deepskyblue,
		label="1656:AS
pid_RES = pid[3:0] == 4'b0000;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1632:AL" -> "1656:AS";
	"1641:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cc5c90>",
		def_var="['pid_IN']",
		fillcolor=deepskyblue,
		label="1641:AS
pid_IN = pid[3:0] == 4'b1001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1632:AL" -> "1641:AS";
	"1640:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cc5a10>",
		def_var="['pid_OUT']",
		fillcolor=deepskyblue,
		label="1640:AS
pid_OUT = pid[3:0] == 4'b0001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1632:AL" -> "1640:AS";
	"1652:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394cca890>",
		def_var="['pid_PRE']",
		fillcolor=deepskyblue,
		label="1652:AS
pid_PRE = pid[3:0] == 4'b1100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1632:AL" -> "1652:AS";
	"1653:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394ccab10>",
		def_var="['pid_ERR']",
		fillcolor=deepskyblue,
		label="1653:AS
pid_ERR = pid[3:0] == 4'b1100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1632:AL" -> "1653:AS";
	"1636:IF" -> "1636:NS"	 [cond="['pid_ld_en']",
		label=pid_ld_en,
		lineno=1636];
	"1702:AS" -> "1678:AS";
	"1748:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394a2c510>",
		def_var="['crc16_clr']",
		fillcolor=deepskyblue,
		label="1748:AS
crc16_clr = rx_active & !rx_active_r;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_active', 'rx_active_r']"];
	"Leaf_1745:AL" -> "1748:AS";
	"1835:BS" -> "Leaf_1777:AL"	 [cond="[]",
		lineno=None];
	"1735:IF" -> "1735:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1735];
	"1794:CA" -> "1795:BL"	 [cond="[]",
		lineno=None];
	"1641:AS" -> "1658:AS";
	"1753:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a2cb10>",
		fillcolor=firebrick,
		label="1753:NS
crc16_sum <= crc16_out;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394a2cb10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1753:NS" -> "Leaf_1750:AL"	 [cond="[]",
		lineno=None];
	"1640:AS" -> "1658:AS";
	"1839:BL" -> "1840:IF"	 [cond="[]",
		lineno=None];
	"1841:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1394a3b650>",
		fillcolor=springgreen,
		label="1841:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1839:BL" -> "1841:IF"	 [cond="[]",
		lineno=None];
	"1777:AL" -> "1779:BL"	 [cond="[]",
		lineno=None];
	"Leaf_1668:AL" -> "1671:AL";
	"1812:BL" -> "Leaf_1777:AL"	 [cond="[]",
		lineno=None];
	"1841:IF" -> "1842:BL"	 [cond="['rx_active', 'rx_err']",
		label="(!rx_active || rx_err)",
		lineno=1841];
	"1666:IF" -> "1666:NS"	 [cond="['token_le_2']",
		label=token_le_2,
		lineno=1666];
	"1715:NS" -> "Leaf_1709:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1709:AL" -> "1720:AL";
	"1713:IF" -> "1715:IF"	 [cond="['data_valid_d']",
		label="!(data_valid_d)",
		lineno=1713];
	"1713:IF" -> "1713:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1713];
	"Leaf_1772:AL" -> "1777:AL";
	"1748:AS" -> "1750:AL";
	"1753:IF" -> "1753:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1753];
}
