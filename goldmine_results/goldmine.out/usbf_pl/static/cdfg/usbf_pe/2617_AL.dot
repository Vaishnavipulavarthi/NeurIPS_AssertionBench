strict digraph "" {
	node [label="\N"];
	"2618:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f13b559bfd0>",
		fillcolor=linen,
		label="2618:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"2622:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5542650>",
		fillcolor=lightcyan,
		label="2622:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2618:CS" -> "2622:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=2618];
	"2619:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b55420d0>",
		fillcolor=lightcyan,
		label="2619:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2618:CS" -> "2619:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=2618];
	"2621:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5542490>",
		fillcolor=lightcyan,
		label="2621:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2618:CS" -> "2621:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=2618];
	"2620:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b55422d0>",
		fillcolor=lightcyan,
		label="2620:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2618:CS" -> "2620:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=2618];
	"2622:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b55426d0>",
		fillcolor=cadetblue,
		label="2622:BS
allow_pid = 2'b11;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b55426d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"2622:CA" -> "2622:BS"	 [cond="[]",
		lineno=None];
	"2619:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5542150>",
		fillcolor=cadetblue,
		label="2619:BS
allow_pid = 2'b00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5542150>]",
		style=filled,
		typ=BlockingSubstitution];
	"2619:CA" -> "2619:BS"	 [cond="[]",
		lineno=None];
	"2621:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5542510>",
		fillcolor=cadetblue,
		label="2621:BS
allow_pid = 2'b10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5542510>]",
		style=filled,
		typ=BlockingSubstitution];
	"2621:CA" -> "2621:BS"	 [cond="[]",
		lineno=None];
	"2617:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b559bd50>",
		clk_sens=False,
		fillcolor=gold,
		label="2617:AL",
		sens="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_MDATA', 'pid_DATA2', 'pid_DATA1', 'pid_DATA0']"];
	"2617:AL" -> "2618:CS"	 [cond="[]",
		lineno=None];
	"Leaf_2617:AL"	 [def_var="['allow_pid']",
		label="Leaf_2617:AL"];
	"2620:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5542350>",
		fillcolor=cadetblue,
		label="2620:BS
allow_pid = 2'b01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5542350>]",
		style=filled,
		typ=BlockingSubstitution];
	"2620:CA" -> "2620:BS"	 [cond="[]",
		lineno=None];
	"2622:BS" -> "Leaf_2617:AL"	 [cond="[]",
		lineno=None];
	"2620:BS" -> "Leaf_2617:AL"	 [cond="[]",
		lineno=None];
	"2621:BS" -> "Leaf_2617:AL"	 [cond="[]",
		lineno=None];
	"2619:BS" -> "Leaf_2617:AL"	 [cond="[]",
		lineno=None];
}
