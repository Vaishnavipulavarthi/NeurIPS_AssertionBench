strict digraph "" {
	node [label="\N"];
	"3064:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54cc350>",
		fillcolor=springgreen,
		label="3064:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3065:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54cc3d0>",
		fillcolor=cadetblue,
		label="3065:BS
next_state = IN2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54cc3d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"3064:IF" -> "3065:BS"	 [cond="['txfr_iso']",
		label="!(txfr_iso)",
		lineno=3064];
	"3064:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54cc590>",
		fillcolor=cadetblue,
		label="3064:BS
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54cc590>]",
		style=filled,
		typ=BlockingSubstitution];
	"3064:IF" -> "3064:BS"	 [cond="['txfr_iso']",
		label=txfr_iso,
		lineno=3064];
	"3076:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54cc710>",
		fillcolor=springgreen,
		label="3076:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3076:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54cc750>",
		fillcolor=aquamarine,
		label="3076:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3076:IF" -> "3076:SS"	 [cond="['rx_ack_to']",
		label="(rx_ack_to === 1'bx)",
		lineno=3076];
	"3025:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54cc950>",
		fillcolor=springgreen,
		label="3025:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3032:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54cc990>",
		fillcolor=springgreen,
		label="3032:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3025:IF" -> "3032:IF"	 [cond="['IN_ep', 'CTRL_ep', 'pid_IN']",
		label="!((IN_ep || CTRL_ep && pid_IN))",
		lineno=3025];
	"3026:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54cce50>",
		fillcolor=turquoise,
		label="3026:BL
tx_dma_en = 1'b1;
next_state = IN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54d6150>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54d6290>]",
		style=filled,
		typ=Block];
	"3025:IF" -> "3026:BL"	 [cond="['IN_ep', 'CTRL_ep', 'pid_IN']",
		label="(IN_ep || CTRL_ep && pid_IN)",
		lineno=3025];
	"3027:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54cce90>",
		fillcolor=springgreen,
		label="3027:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3027:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54cced0>",
		fillcolor=cadetblue,
		label="3027:BS
send_zero_length = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54cced0>]",
		style=filled,
		typ=BlockingSubstitution];
	"3027:IF" -> "3027:BS"	 [cond="['max_pl_sz']",
		label="(max_pl_sz == 11'h0)",
		lineno=3027];
	"3033:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54cc9d0>",
		fillcolor=turquoise,
		label="3033:BL
rx_dma_en = 1'b1;
next_state = OUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54cca10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54ccb50>]",
		style=filled,
		typ=Block];
	"Leaf_2950:AL"	 [def_var="['uc_stat_set_d', 'buf0_rl_d', 'rx_dma_en', 'int_set_en', 'send_zero_length', 'int_seqerr_set_d', 'rx_ack_to_clr_d', 'buf_set_d', '\
token_pid_sel_d', 'send_token_d', 'tx_dma_en', 'next_state']",
		label="Leaf_2950:AL"];
	"3033:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3099:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54d6710>",
		fillcolor=springgreen,
		label="3099:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3099:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54d6750>",
		fillcolor=aquamarine,
		label="3099:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3099:IF" -> "3099:SS"	 [cond="['crc16_err']",
		label="(crc16_err === 1'bx)",
		lineno=3099];
	"3182:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54d6b90>",
		fillcolor=turquoise,
		label="3182:BL
int_set_en = 1'b1;
next_state = UPDATE2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54d6910>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54d6a50>]",
		style=filled,
		typ=Block];
	"3195:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54d6fd0>",
		fillcolor=springgreen,
		label="3195:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3182:BL" -> "3195:IF"	 [cond="[]",
		lineno=None];
	"3189:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54d6dd0>",
		fillcolor=springgreen,
		label="3189:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3182:BL" -> "3189:IF"	 [cond="[]",
		lineno=None];
	"3188:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54d6bd0>",
		fillcolor=springgreen,
		label="3188:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3182:BL" -> "3188:IF"	 [cond="[]",
		lineno=None];
	"3092:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54e1490>",
		fillcolor=turquoise,
		label="3092:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3092:BL" -> "3099:IF"	 [cond="[]",
		lineno=None];
	"3102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54e1b10>",
		fillcolor=springgreen,
		label="3102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3092:BL" -> "3102:IF"	 [cond="[]",
		lineno=None];
	"3103:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54e1d10>",
		fillcolor=springgreen,
		label="3103:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3092:BL" -> "3103:IF"	 [cond="[]",
		lineno=None];
	"3106:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54e1f10>",
		fillcolor=springgreen,
		label="3106:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3092:BL" -> "3106:IF"	 [cond="[]",
		lineno=None];
	"3100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54e16d0>",
		fillcolor=springgreen,
		label="3100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3092:BL" -> "3100:IF"	 [cond="[]",
		lineno=None];
	"3098:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54e14d0>",
		fillcolor=springgreen,
		label="3098:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3092:BL" -> "3098:IF"	 [cond="[]",
		lineno=None];
	"3101:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54e18d0>",
		fillcolor=springgreen,
		label="3101:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3092:BL" -> "3101:IF"	 [cond="[]",
		lineno=None];
	"2992:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54ea890>",
		fillcolor=aquamarine,
		label="2992:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2992:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3078:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54ea9d0>",
		fillcolor=aquamarine,
		label="3078:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3078:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3107:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54ea610>",
		fillcolor=cadetblue,
		label="3107:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54ea610>]",
		style=filled,
		typ=BlockingSubstitution];
	"3107:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3057:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54eac50>",
		fillcolor=springgreen,
		label="3057:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3057:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54eac90>",
		fillcolor=aquamarine,
		label="3057:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3057:IF" -> "3057:SS"	 [cond="['idma_done']",
		label="(idma_done === 1'bx)",
		lineno=3057];
	"2987:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54eae50>",
		fillcolor=springgreen,
		label="2987:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2987:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54eae90>",
		fillcolor=aquamarine,
		label="2987:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2987:IF" -> "2987:SS"	 [cond="['CTRL_ep']",
		label="(CTRL_ep === 1'bx)",
		lineno=2987];
	"2956:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5486390>",
		fillcolor=turquoise,
		label="2956:BL
next_state = state;
token_pid_sel_d = ACK;
send_token_d = 1'b0;
rx_dma_en = 1'b0;
tx_dma_en = 1'b0;
buf_set_d = 1'b0;
uc_\
stat_set_d = 1'b0;
buf0_rl_d = 1'b0;
int_set_en = 1'b0;
rx_ack_to_clr_d = 1'b1;
int_seqerr_set_d = 1'b0;
send_zero_length = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54742d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5474410>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5474590>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5474710>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5474850>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5474990>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5474ad0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5474c50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5474d90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5474ed0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5486090>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5486210>]",
		style=filled,
		typ=Block];
	"2970:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f13b5506f10>",
		fillcolor=linen,
		label="2970:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"2956:BL" -> "2970:CS"	 [cond="[]",
		lineno=None];
	"2983:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54d6550>",
		fillcolor=aquamarine,
		label="2983:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2983:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3058:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54f3250>",
		fillcolor=aquamarine,
		label="3058:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3058:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2991:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54f3350>",
		fillcolor=aquamarine,
		label="2991:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2991:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3027:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2981:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54f3490>",
		fillcolor=springgreen,
		label="2981:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2981:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54f3450>",
		fillcolor=aquamarine,
		label="2981:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2981:IF" -> "2981:SS"	 [cond="['ep_disabled']",
		label="(ep_disabled === 1'bx)",
		lineno=2981];
	"3128:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5462a50>",
		fillcolor=aquamarine,
		label="3128:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3128:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3077:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54f3790>",
		fillcolor=springgreen,
		label="3077:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3077:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54f37d0>",
		fillcolor=aquamarine,
		label="3077:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3077:IF" -> "3077:SS"	 [cond="['token_valid']",
		label="(token_valid === 1'bx)",
		lineno=3077];
	"2992:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54f3990>",
		fillcolor=springgreen,
		label="2992:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2992:IF" -> "2992:SS"	 [cond="['mode_hs']",
		label="(mode_hs === 1'bx)",
		lineno=2992];
	"3196:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54e1210>",
		fillcolor=turquoise,
		label="3196:BL
buf0_rl_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54e1250>]",
		style=filled,
		typ=Block];
	"3196:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3101:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54e1910>",
		fillcolor=aquamarine,
		label="3101:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3101:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3134:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b54f3b50>",
		fillcolor=lightcyan,
		label="3134:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"3135:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54f3c10>",
		fillcolor=turquoise,
		label="3135:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3134:CA" -> "3135:BL"	 [cond="[]",
		lineno=None];
	"3188:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54d6c10>",
		fillcolor=aquamarine,
		label="3188:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3188:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2986:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5506b10>",
		fillcolor=aquamarine,
		label="2986:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2986:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2988:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5506c10>",
		fillcolor=aquamarine,
		label="2988:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2988:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2990:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5506d10>",
		fillcolor=aquamarine,
		label="2990:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2990:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3165:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54fdb50>",
		fillcolor=cadetblue,
		label="3165:BS
token_pid_sel_d = NYET;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54fdb50>]",
		style=filled,
		typ=BlockingSubstitution];
	"3165:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2984:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5506e10>",
		fillcolor=aquamarine,
		label="2984:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2984:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2970:CS" -> "3134:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"3069:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b54621d0>",
		fillcolor=lightcyan,
		label="3069:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2970:CS" -> "3069:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"2971:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5506f90>",
		fillcolor=lightcyan,
		label="2971:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2970:CS" -> "2971:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"3181:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5462e10>",
		fillcolor=lightcyan,
		label="3181:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2970:CS" -> "3181:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"3205:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5462ed0>",
		fillcolor=lightcyan,
		label="3205:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2970:CS" -> "3205:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"3050:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b546ad90>",
		fillcolor=lightcyan,
		label="3050:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2970:CS" -> "3050:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"3040:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b546ab10>",
		fillcolor=lightcyan,
		label="3040:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2970:CS" -> "3040:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"3091:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5462890>",
		fillcolor=lightcyan,
		label="3091:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2970:CS" -> "3091:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"3172:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b54f3a90>",
		fillcolor=lightcyan,
		label="3172:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2970:CS" -> "3172:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"3120:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5462950>",
		fillcolor=lightcyan,
		label="3120:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2970:CS" -> "3120:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"3131:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5462c90>",
		fillcolor=cadetblue,
		label="3131:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5462c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"3131:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2980:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510110>",
		fillcolor=springgreen,
		label="2980:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2980:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5510150>",
		fillcolor=aquamarine,
		label="2980:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2980:IF" -> "2980:SS"	 [cond="['match_r']",
		label="(match_r === 1'bx)",
		lineno=2980];
	"3102:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54e1b50>",
		fillcolor=aquamarine,
		label="3102:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3102:IF" -> "3102:SS"	 [cond="['txfr_iso']",
		label="(txfr_iso === 1'bx)",
		lineno=3102];
	"3110:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54e1f90>",
		fillcolor=turquoise,
		label="3110:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3111:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54e1fd0>",
		fillcolor=springgreen,
		label="3111:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3110:BL" -> "3111:IF"	 [cond="[]",
		lineno=None];
	"3141:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54f3bd0>",
		fillcolor=springgreen,
		label="3141:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3141:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54f3c90>",
		fillcolor=aquamarine,
		label="3141:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3141:IF" -> "3141:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=3141];
	"3113:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54ea210>",
		fillcolor=cadetblue,
		label="3113:BS
int_seqerr_set_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54ea210>]",
		style=filled,
		typ=BlockingSubstitution];
	"3113:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3077:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3149:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5506910>",
		fillcolor=cadetblue,
		label="3149:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5506910>]",
		style=filled,
		typ=BlockingSubstitution];
	"3149:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3151:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54fd8d0>",
		fillcolor=springgreen,
		label="3151:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3157:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54fd910>",
		fillcolor=springgreen,
		label="3157:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3151:IF" -> "3157:IF"	 [cond="['to_small', 'to_large']",
		label="!((to_small || to_large))",
		lineno=3151];
	"3152:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5506550>",
		fillcolor=turquoise,
		label="3152:BL
token_pid_sel_d = NACK;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5506590>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5506710>]",
		style=filled,
		typ=Block];
	"3151:IF" -> "3152:BL"	 [cond="['to_small', 'to_large']",
		label="(to_small || to_large)",
		lineno=3151];
	"2999:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b551c4d0>",
		fillcolor=springgreen,
		label="2999:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3000:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b551c510>",
		fillcolor=turquoise,
		label="3000:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2999:IF" -> "3000:BL"	 [cond="['match_r', 'ep_disabled', 'pid_SOF']",
		label="(match_r && !ep_disabled && !pid_SOF)",
		lineno=2999];
	"3019:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b551c610>",
		fillcolor=turquoise,
		label="3019:BL
token_pid_sel_d = ACK;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b551c650>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b551c7d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b551c950>]",
		style=filled,
		typ=Block];
	"3019:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3146:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54fd6d0>",
		fillcolor=aquamarine,
		label="3146:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3146:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3085:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5462590>",
		fillcolor=springgreen,
		label="3085:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3086:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54625d0>",
		fillcolor=turquoise,
		label="3086:BL
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5462610>]",
		style=filled,
		typ=Block];
	"3085:IF" -> "3086:BL"	 [cond="['token_valid', 'pid_ACK']",
		label="(token_valid && pid_ACK)",
		lineno=3085];
	"3103:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54e1d50>",
		fillcolor=aquamarine,
		label="3103:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3103:IF" -> "3103:SS"	 [cond="['pid_seq_err']",
		label="(pid_seq_err === 1'bx)",
		lineno=3103];
	"3100:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54e1710>",
		fillcolor=aquamarine,
		label="3100:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3100:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3103:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3070:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5462250>",
		fillcolor=turquoise,
		label="3070:BL
rx_ack_to_clr_d = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54623d0>]",
		style=filled,
		typ=Block];
	"3069:CA" -> "3070:BL"	 [cond="[]",
		lineno=None];
	"3076:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2989:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510a50>",
		fillcolor=springgreen,
		label="2989:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2989:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5510a90>",
		fillcolor=aquamarine,
		label="2989:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2989:IF" -> "2989:SS"	 [cond="['pid_OUT']",
		label="(pid_OUT === 1'bx)",
		lineno=2989];
	"3063:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5506a90>",
		fillcolor=turquoise,
		label="3063:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3063:BL" -> "3064:IF"	 [cond="[]",
		lineno=None];
	"3141:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2993:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510e50>",
		fillcolor=springgreen,
		label="2993:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2993:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5510e90>",
		fillcolor=aquamarine,
		label="2993:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2993:IF" -> "2993:SS"	 [cond="['IN_ep']",
		label="(IN_ep === 1'bx)",
		lineno=2993];
	"3099:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3078:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5462290>",
		fillcolor=springgreen,
		label="3078:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3078:IF" -> "3078:SS"	 [cond="['pid_ACK']",
		label="(pid_ACK === 1'bx)",
		lineno=3078];
	"2985:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5510690>",
		fillcolor=aquamarine,
		label="2985:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2985:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3032:IF" -> "3033:BL"	 [cond="['OUT_ep', 'CTRL_ep', 'pid_OUT', 'pid_SETUP']",
		label="(OUT_ep || CTRL_ep && (pid_OUT || pid_SETUP))",
		lineno=3032];
	"3041:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b546ab90>",
		fillcolor=turquoise,
		label="3041:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b546abd0>]",
		style=filled,
		typ=Block];
	"3041:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2981:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2986:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510850>",
		fillcolor=springgreen,
		label="2986:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2986:IF" -> "2986:SS"	 [cond="['no_buf0_dma']",
		label="(no_buf0_dma === 1'bx)",
		lineno=2986];
	"3142:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54f3e50>",
		fillcolor=springgreen,
		label="3142:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3142:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54f3e90>",
		fillcolor=aquamarine,
		label="3142:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3142:IF" -> "3142:SS"	 [cond="['to_small']",
		label="(to_small === 1'bx)",
		lineno=3142];
	"2972:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5510050>",
		fillcolor=turquoise,
		label="2972:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2971:CA" -> "2972:BL"	 [cond="[]",
		lineno=None];
	"3065:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2994:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b551c0d0>",
		fillcolor=aquamarine,
		label="2994:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2994:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3181:CA" -> "3182:BL"	 [cond="[]",
		lineno=None];
	"2982:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5510390>",
		fillcolor=aquamarine,
		label="2982:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2982:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3070:BL" -> "3076:IF"	 [cond="[]",
		lineno=None];
	"3070:BL" -> "3077:IF"	 [cond="[]",
		lineno=None];
	"3070:BL" -> "3078:IF"	 [cond="[]",
		lineno=None];
	"3083:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5462550>",
		fillcolor=springgreen,
		label="3083:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3070:BL" -> "3083:IF"	 [cond="[]",
		lineno=None];
	"3001:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b551c550>",
		fillcolor=springgreen,
		label="3001:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3000:BL" -> "3001:IF"	 [cond="[]",
		lineno=None];
	"3008:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b551c590>",
		fillcolor=springgreen,
		label="3008:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3001:IF" -> "3008:IF"	 [cond="['ep_stall']",
		label="!(ep_stall)",
		lineno=3001];
	"3002:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b546a450>",
		fillcolor=turquoise,
		label="3002:BL
token_pid_sel_d = STALL;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b546a490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b546a610>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b546a790>]",
		style=filled,
		typ=Block];
	"3001:IF" -> "3002:BL"	 [cond="['ep_stall']",
		label=ep_stall,
		lineno=3001];
	"3106:IF" -> "3107:BS"	 [cond="['tx_data_to', 'crc16_err', 'abort']",
		label="(tx_data_to || crc16_err || abort)",
		lineno=3106];
	"3109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54e1f50>",
		fillcolor=springgreen,
		label="3109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3106:IF" -> "3109:IF"	 [cond="['tx_data_to', 'crc16_err', 'abort']",
		label="!((tx_data_to || crc16_err || abort))",
		lineno=3106];
	"3116:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54ea050>",
		fillcolor=cadetblue,
		label="3116:BS
next_state = OUT2A;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54ea050>]",
		style=filled,
		typ=BlockingSubstitution];
	"3116:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3145:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54fd4d0>",
		fillcolor=aquamarine,
		label="3145:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3145:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3086:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3173:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54f31d0>",
		fillcolor=turquoise,
		label="3173:BL
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54f3090>]",
		style=filled,
		typ=Block];
	"3173:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2972:BL" -> "2999:IF"	 [cond="[]",
		lineno=None];
	"2978:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510090>",
		fillcolor=springgreen,
		label="2978:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2972:BL" -> "2978:IF"	 [cond="[]",
		lineno=None];
	"3206:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5462f50>",
		fillcolor=turquoise,
		label="3206:BL
uc_stat_set_d = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5462f90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5474190>]",
		style=filled,
		typ=Block];
	"3205:CA" -> "3206:BL"	 [cond="[]",
		lineno=None];
	"3051:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b546ae10>",
		fillcolor=turquoise,
		label="3051:BL
rx_ack_to_clr_d = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b546af90>]",
		style=filled,
		typ=Block];
	"3050:CA" -> "3051:BL"	 [cond="[]",
		lineno=None];
	"3142:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3100:IF" -> "3100:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=3100];
	"2988:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510950>",
		fillcolor=springgreen,
		label="2988:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2988:IF" -> "2988:SS"	 [cond="['pid_IN']",
		label="(pid_IN === 1'bx)",
		lineno=2988];
	"3128:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5462a10>",
		fillcolor=springgreen,
		label="3128:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3128:IF" -> "3128:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=3128];
	"3165:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54fd990>",
		fillcolor=springgreen,
		label="3165:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3165:IF" -> "3165:BS"	 [cond="['mode_hs', 'no_bufs']",
		label="(mode_hs && no_bufs)",
		lineno=3165];
	"3166:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54fd9d0>",
		fillcolor=cadetblue,
		label="3166:BS
token_pid_sel_d = ACK;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54fd9d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"3165:IF" -> "3166:BS"	 [cond="['mode_hs', 'no_bufs']",
		label="!((mode_hs && no_bufs))",
		lineno=3165];
	"2980:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2982:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510350>",
		fillcolor=springgreen,
		label="2982:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2982:IF" -> "2982:SS"	 [cond="['pid_SOF']",
		label="(pid_SOF === 1'bx)",
		lineno=2982];
	"2989:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3195:IF" -> "3196:BL"	 [cond="['buffer_done', 'dma_en']",
		label="(buffer_done && dma_en)",
		lineno=3195];
	"3200:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54e1050>",
		fillcolor=turquoise,
		label="3200:BL
buf_set_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54e1090>]",
		style=filled,
		typ=Block];
	"3195:IF" -> "3200:BL"	 [cond="['buffer_done', 'dma_en']",
		label="!((buffer_done && dma_en))",
		lineno=3195];
	"3164:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54fd950>",
		fillcolor=turquoise,
		label="3164:BL
send_token_d = 1'b1;
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54fdd90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54fdf10>]",
		style=filled,
		typ=Block];
	"3157:IF" -> "3164:BL"	 [cond="['pid_seq_err']",
		label="!(pid_seq_err)",
		lineno=3157];
	"3158:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5506090>",
		fillcolor=turquoise,
		label="3158:BL
token_pid_sel_d = ACK;
send_token_d = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b55060d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5506250>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b55063d0>]",
		style=filled,
		typ=Block];
	"3157:IF" -> "3158:BL"	 [cond="['pid_seq_err']",
		label=pid_seq_err,
		lineno=3157];
	"3040:CA" -> "3041:BL"	 [cond="[]",
		lineno=None];
	"3111:IF" -> "3116:BS"	 [cond="['txfr_iso']",
		label="!(txfr_iso)",
		lineno=3111];
	"3112:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54ea190>",
		fillcolor=turquoise,
		label="3112:BL
next_state = UPDATEW;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54ea3d0>]",
		style=filled,
		typ=Block];
	"3111:IF" -> "3112:BL"	 [cond="['txfr_iso']",
		label=txfr_iso,
		lineno=3111];
	"3026:BL" -> "3027:IF"	 [cond="[]",
		lineno=None];
	"2950:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b54863d0>",
		clk_sens=False,
		fillcolor=gold,
		label="2950:AL",
		sens="['state', 'ep_stall', 'buf0_na', 'buf1_na', 'pid_seq_err', 'idma_done', 'token_valid', 'pid_ACK', 'rx_data_done', 'tx_data_to', '\
crc16_err', 'ep_disabled', 'no_bufs', 'mode_hs', 'dma_en', 'rx_ack_to', 'pid_PING', 'txfr_iso', 'to_small', 'to_large', 'CTRL_ep', '\
pid_IN', 'pid_OUT', 'IN_ep', 'OUT_ep', 'pid_SETUP', 'pid_SOF', 'match_r', 'abort', 'buffer_done', 'no_buf0_dma', 'max_pl_sz']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SOF', 'dma_en', 'tx_data_to', 'pid_OUT', 'pid_PING', 'abort', 'pid_IN', 'pid_seq_err', 'no_bufs', 'rx_ack_to', 'ep_disabled', '\
crc16_err', 'state', 'ep_stall', 'CTRL_ep', 'to_small', 'rx_data_done', 'idma_done', 'to_large', 'mode_hs', 'buf0_na', 'rst', 'OUT_\
ep', 'buf1_na', 'pid_ACK', 'no_buf0_dma', 'max_pl_sz', 'token_valid', 'buffer_done', 'txfr_iso', 'pid_SETUP', 'IN_ep', 'match_r']"];
	"2950:AL" -> "2956:BL"	 [cond="[]",
		lineno=None];
	"2983:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54d6510>",
		fillcolor=springgreen,
		label="2983:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2983:IF" -> "2983:SS"	 [cond="['ep_stall']",
		label="(ep_stall === 1'bx)",
		lineno=2983];
	"3091:CA" -> "3092:BL"	 [cond="[]",
		lineno=None];
	"3143:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54fd090>",
		fillcolor=springgreen,
		label="3143:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3143:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54fd0d0>",
		fillcolor=aquamarine,
		label="3143:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3143:IF" -> "3143:SS"	 [cond="['to_large']",
		label="(to_large === 1'bx)",
		lineno=3143];
	"3172:CA" -> "3173:BL"	 [cond="[]",
		lineno=None];
	"3149:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54fd890>",
		fillcolor=springgreen,
		label="3149:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3149:IF" -> "3149:BS"	 [cond="['abort']",
		label=abort,
		lineno=3149];
	"3149:IF" -> "3151:IF"	 [cond="['abort']",
		label="!(abort)",
		lineno=3149];
	"2994:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b551c090>",
		fillcolor=springgreen,
		label="2994:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2994:IF" -> "2994:SS"	 [cond="['OUT_ep']",
		label="(OUT_ep === 1'bx)",
		lineno=2994];
	"3164:BL" -> "3165:IF"	 [cond="[]",
		lineno=None];
	"3018:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b551c5d0>",
		fillcolor=springgreen,
		label="3018:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3018:IF" -> "3025:IF"	 [cond="['pid_PING', 'mode_hs']",
		label="!((pid_PING && mode_hs))",
		lineno=3018];
	"3018:IF" -> "3019:BL"	 [cond="['pid_PING', 'mode_hs']",
		label="(pid_PING && mode_hs)",
		lineno=3018];
	"3144:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54fd2d0>",
		fillcolor=aquamarine,
		label="3144:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3144:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3189:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54d6e10>",
		fillcolor=aquamarine,
		label="3189:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3189:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3064:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2979:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b55100d0>",
		fillcolor=turquoise,
		label="2979:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2979:BL" -> "2987:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2981:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2992:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2980:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2989:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2993:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2986:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2988:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2982:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2983:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2994:IF"	 [cond="[]",
		lineno=None];
	"2991:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510d50>",
		fillcolor=springgreen,
		label="2991:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2991:IF"	 [cond="[]",
		lineno=None];
	"2985:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510650>",
		fillcolor=springgreen,
		label="2985:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2985:IF"	 [cond="[]",
		lineno=None];
	"2990:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510c50>",
		fillcolor=springgreen,
		label="2990:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2990:IF"	 [cond="[]",
		lineno=None];
	"2984:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5510550>",
		fillcolor=springgreen,
		label="2984:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2984:IF"	 [cond="[]",
		lineno=None];
	"3200:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2991:IF" -> "2991:SS"	 [cond="['pid_PING']",
		label="(pid_PING === 1'bx)",
		lineno=2991];
	"3121:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b54629d0>",
		fillcolor=turquoise,
		label="3121:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3120:CA" -> "3121:BL"	 [cond="[]",
		lineno=None];
	"3144:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54fd290>",
		fillcolor=springgreen,
		label="3144:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3144:IF" -> "3144:SS"	 [cond="['pid_seq_err']",
		label="(pid_seq_err === 1'bx)",
		lineno=3144];
	"3058:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b546ae50>",
		fillcolor=springgreen,
		label="3058:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3058:IF" -> "3058:SS"	 [cond="['txfr_iso']",
		label="(txfr_iso === 1'bx)",
		lineno=3058];
	"3109:IF" -> "3110:BL"	 [cond="['rx_data_done']",
		label=rx_data_done,
		lineno=3109];
	"2985:IF" -> "2985:SS"	 [cond="['buf1_na']",
		label="(buf1_na === 1'bx)",
		lineno=2985];
	"3008:IF" -> "3018:IF"	 [cond="['buf0_na', 'buf1_na', 'no_buf0_dma', 'CTRL_ep', 'pid_IN', 'buf1_na', 'CTRL_ep', 'pid_OUT', 'buf0_na']",
		label="!((buf0_na && buf1_na || no_buf0_dma || CTRL_ep && pid_IN && buf1_na || CTRL_ep && pid_OUT && buf0_na))",
		lineno=3008];
	"3012:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b551cb50>",
		fillcolor=turquoise,
		label="3012:BL
token_pid_sel_d = NACK;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b551cb90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b551cd10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b551ce90>]",
		style=filled,
		typ=Block];
	"3008:IF" -> "3012:BL"	 [cond="['buf0_na', 'buf1_na', 'no_buf0_dma', 'CTRL_ep', 'pid_IN', 'buf1_na', 'CTRL_ep', 'pid_OUT', 'buf0_na']",
		label="(buf0_na && buf1_na || no_buf0_dma || CTRL_ep && pid_IN && buf1_na || CTRL_ep && pid_OUT && buf0_na)",
		lineno=3008];
	"2990:IF" -> "2990:SS"	 [cond="['pid_SETUP']",
		label="(pid_SETUP === 1'bx)",
		lineno=2990];
	"3062:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5462150>",
		fillcolor=springgreen,
		label="3062:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3062:IF" -> "3063:BL"	 [cond="['idma_done']",
		label=idma_done,
		lineno=3062];
	"3098:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b54e1510>",
		fillcolor=aquamarine,
		label="3098:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3098:IF" -> "3098:SS"	 [cond="['tx_data_to']",
		label="(tx_data_to === 1'bx)",
		lineno=3098];
	"2978:IF" -> "2979:BL"	 [cond="['rst', 'match_r', 'ep_disabled', 'pid_SOF']",
		label="(rst && match_r && !ep_disabled && !pid_SOF)",
		lineno=2978];
	"3057:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2984:IF" -> "2984:SS"	 [cond="['buf0_na']",
		label="(buf0_na === 1'bx)",
		lineno=2984];
	"2987:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3152:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3083:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54eab10>",
		fillcolor=cadetblue,
		label="3083:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54eab10>]",
		style=filled,
		typ=BlockingSubstitution];
	"3083:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3189:IF" -> "3189:SS"	 [cond="['dma_en']",
		label="(dma_en === 1'bx)",
		lineno=3189];
	"3132:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54f3650>",
		fillcolor=cadetblue,
		label="3132:BS
next_state = OUT2B;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b54f3650>]",
		style=filled,
		typ=BlockingSubstitution];
	"3132:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3145:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54fd490>",
		fillcolor=springgreen,
		label="3145:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3145:IF" -> "3145:SS"	 [cond="['mode_hs']",
		label="(mode_hs === 1'bx)",
		lineno=3145];
	"3121:BL" -> "3128:IF"	 [cond="[]",
		lineno=None];
	"3131:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5462c50>",
		fillcolor=springgreen,
		label="3131:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3121:BL" -> "3131:IF"	 [cond="[]",
		lineno=None];
	"3051:BL" -> "3057:IF"	 [cond="[]",
		lineno=None];
	"3051:BL" -> "3058:IF"	 [cond="[]",
		lineno=None];
	"3051:BL" -> "3062:IF"	 [cond="[]",
		lineno=None];
	"3131:IF" -> "3131:BS"	 [cond="['abort']",
		label=abort,
		lineno=3131];
	"3131:IF" -> "3132:BS"	 [cond="['abort']",
		label="!(abort)",
		lineno=3131];
	"3146:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54fd690>",
		fillcolor=springgreen,
		label="3146:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3146:IF" -> "3146:SS"	 [cond="['no_bufs']",
		label="(no_bufs === 1'bx)",
		lineno=3146];
	"3158:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3113:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b54ea1d0>",
		fillcolor=springgreen,
		label="3113:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3112:BL" -> "3113:IF"	 [cond="[]",
		lineno=None];
	"3102:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3166:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3098:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3083:IF" -> "3085:IF"	 [cond="['rx_ack_to']",
		label="!(rx_ack_to)",
		lineno=3083];
	"3083:IF" -> "3083:BS"	 [cond="['rx_ack_to']",
		label=rx_ack_to,
		lineno=3083];
	"3101:IF" -> "3101:SS"	 [cond="['rx_data_done']",
		label="(rx_data_done === 1'bx)",
		lineno=3101];
	"3012:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3143:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3188:IF" -> "3188:SS"	 [cond="['buffer_done']",
		label="(buffer_done === 1'bx)",
		lineno=3188];
	"3002:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3113:IF" -> "3113:BS"	 [cond="['pid_seq_err']",
		label=pid_seq_err,
		lineno=3113];
	"2993:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3135:BL" -> "3141:IF"	 [cond="[]",
		lineno=None];
	"3135:BL" -> "3142:IF"	 [cond="[]",
		lineno=None];
	"3135:BL" -> "3143:IF"	 [cond="[]",
		lineno=None];
	"3135:BL" -> "3149:IF"	 [cond="[]",
		lineno=None];
	"3135:BL" -> "3144:IF"	 [cond="[]",
		lineno=None];
	"3135:BL" -> "3145:IF"	 [cond="[]",
		lineno=None];
	"3135:BL" -> "3146:IF"	 [cond="[]",
		lineno=None];
	"3206:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
}
