strict digraph "compose( ,  )" {
	node [label="\N"];
	"2658:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fc4690>",
		fillcolor=lightcyan,
		label="2658:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2658:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc4790>",
		fillcolor=firebrick,
		label="2658:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc4790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2658:CA" -> "2658:NS"	 [cond="[]",
		lineno=None];
	"2983:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f29ad0>",
		fillcolor=springgreen,
		label="2983:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2983:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f29890>",
		fillcolor=aquamarine,
		label="2983:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2983:IF" -> "2983:SS"	 [cond="['ep_stall']",
		label="(ep_stall === 1'bx)",
		lineno=2983];
	"2552:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1394521c90>",
		fillcolor=lightcyan,
		label="2552:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2552:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394521d90>",
		fillcolor=firebrick,
		label="2552:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394521d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2552:CA" -> "2552:NS"	 [cond="[]",
		lineno=None];
	"2789:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f63dd0>",
		clk_sens=True,
		fillcolor=gold,
		label="2789:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['size_next']"];
	"2790:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f63fd0>",
		fillcolor=firebrick,
		label="2790:NS
size_next_r <= size_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f63fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2789:AL" -> "2790:NS"	 [cond="[]",
		lineno=None];
	"Leaf_2746:AL"	 [def_var="['buffer_full']",
		label="Leaf_2746:AL"];
	"2768:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fde910>",
		clk_sens=True,
		fillcolor=gold,
		label="2768:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['no_buf0_dma', 'dma_en', 'buf_sel', 'buf0_st_max', 'buf0_na', 'buffer_full']"];
	"Leaf_2746:AL" -> "2768:AL";
	"2772:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fdec90>",
		clk_sens=True,
		fillcolor=gold,
		label="2772:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf1_st_max', 'buf1_na', 'buf_sel', 'buffer_full']"];
	"Leaf_2746:AL" -> "2772:AL";
	"2755:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fd9910>",
		clk_sens=True,
		fillcolor=gold,
		label="2755:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['in_op', 'buffer_empty', 'buffer_full']"];
	"Leaf_2746:AL" -> "2755:AL";
	"2605:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb1290>",
		fillcolor=firebrick,
		label="2605:NS
next_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb1290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2548:AL"	 [def_var="['next_dpid']",
		label="Leaf_2548:AL"];
	"2605:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2763:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fde5d0>",
		fillcolor=firebrick,
		label="2763:NS
buf0_st_max <= buf0_sz < { 3'h0, max_pl_sz };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fde5d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2762:AL"	 [def_var="['buf0_st_max']",
		label="Leaf_2762:AL"];
	"2763:NS" -> "Leaf_2762:AL"	 [cond="[]",
		lineno=None];
	"2535:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394551c90>",
		clk_sens=True,
		fillcolor=gold,
		label="2535:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['send_token_d']"];
	"2536:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394551ed0>",
		fillcolor=firebrick,
		label="2536:NS
send_token <= send_token_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394551ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2535:AL" -> "2536:NS"	 [cond="[]",
		lineno=None];
	"2987:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f2f310>",
		fillcolor=springgreen,
		label="2987:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2987:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f2f0d0>",
		fillcolor=aquamarine,
		label="2987:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2987:IF" -> "2987:SS"	 [cond="['CTRL_ep']",
		label="(CTRL_ep === 1'bx)",
		lineno=2987];
	"Leaf_2943:AL"	 [def_var="['state']",
		label="Leaf_2943:AL"];
	"2950:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f9dc10>",
		clk_sens=False,
		fillcolor=gold,
		label="2950:AL",
		sens="['state', 'ep_stall', 'buf0_na', 'buf1_na', 'pid_seq_err', 'idma_done', 'token_valid', 'pid_ACK', 'rx_data_done', 'tx_data_to', '\
crc16_err', 'ep_disabled', 'no_bufs', 'mode_hs', 'dma_en', 'rx_ack_to', 'pid_PING', 'txfr_iso', 'to_small', 'to_large', 'CTRL_ep', '\
pid_IN', 'pid_OUT', 'IN_ep', 'OUT_ep', 'pid_SETUP', 'pid_SOF', 'match_r', 'abort', 'buffer_done', 'no_buf0_dma', 'max_pl_sz']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SOF', 'dma_en', 'tx_data_to', 'pid_OUT', 'pid_PING', 'abort', 'pid_IN', 'pid_seq_err', 'no_bufs', 'rx_ack_to', 'ep_disabled', '\
crc16_err', 'state', 'ep_stall', 'CTRL_ep', 'to_small', 'rx_data_done', 'idma_done', 'to_large', 'mode_hs', 'buf0_na', 'rst', 'OUT_\
ep', 'buf1_na', 'pid_ACK', 'no_buf0_dma', 'max_pl_sz', 'token_valid', 'buffer_done', 'txfr_iso', 'pid_SETUP', 'IN_ep', 'match_r']"];
	"Leaf_2943:AL" -> "2950:AL";
	"2857:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f7fc90>",
		clk_sens=True,
		fillcolor=gold,
		label="2857:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buffer_overflow', 'state', 'to_large', 'match', 'match_r']"];
	"Leaf_2943:AL" -> "2857:AL";
	"2928:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5f93ed0>",
		def_var="['int_to_set']",
		fillcolor=deepskyblue,
		label="2928:AS
int_to_set = (state == IN2) & rx_ack_to | (state == OUT) & tx_data_to;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['state', 'rx_ack_to', 'state', 'tx_data_to']"];
	"Leaf_2943:AL" -> "2928:AS";
	"2746:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fd9310>",
		clk_sens=True,
		fillcolor=gold,
		label="2746:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['max_pl_sz', 'new_size']"];
	"2747:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fd9690>",
		fillcolor=firebrick,
		label="2747:NS
buffer_full <= new_size < { 3'h0, max_pl_sz };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fd9690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2746:AL" -> "2747:NS"	 [cond="[]",
		lineno=None];
	"2636:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbba90>",
		fillcolor=firebrick,
		label="2636:NS
this_dpid <= allow_pid;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbba90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2625:AL"	 [def_var="['this_dpid']",
		label="Leaf_2625:AL"];
	"2636:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2945:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f98790>",
		fillcolor=springgreen,
		label="2945:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2945:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f98750>",
		fillcolor=firebrick,
		label="2945:NS
state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f98750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2945:IF" -> "2945:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=2945];
	"2947:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f98a10>",
		fillcolor=springgreen,
		label="2947:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2945:IF" -> "2947:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=2945];
	"2845:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f7f450>",
		fillcolor=firebrick,
		label="2845:NS
buf1_set <= buf_sel & buf_set_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f7f450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2844:AL"	 [def_var="['buf1_set']",
		label="Leaf_2844:AL"];
	"2845:NS" -> "Leaf_2844:AL"	 [cond="[]",
		lineno=None];
	"3027:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f3bdd0>",
		fillcolor=cadetblue,
		label="3027:BS
send_zero_length = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f3bdd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_2950:AL"	 [def_var="['uc_stat_set_d', 'buf0_rl_d', 'rx_dma_en', 'int_set_en', 'send_zero_length', 'int_seqerr_set_d', 'rx_ack_to_clr_d', 'buf_set_d', '\
token_pid_sel_d', 'send_token_d', 'tx_dma_en', 'next_state']",
		label="Leaf_2950:AL"];
	"3027:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2981:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f296d0>",
		fillcolor=springgreen,
		label="2981:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2981:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f29450>",
		fillcolor=aquamarine,
		label="2981:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2981:IF" -> "2981:SS"	 [cond="['ep_disabled']",
		label="(ep_disabled === 1'bx)",
		lineno=2981];
	"Leaf_2670:AL"	 [def_var="['pid_seq_err']",
		label="Leaf_2670:AL"];
	"Leaf_2670:AL" -> "2950:AL";
	"3077:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f46510>",
		fillcolor=springgreen,
		label="3077:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3077:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f46290>",
		fillcolor=aquamarine,
		label="3077:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3077:IF" -> "3077:SS"	 [cond="['token_valid']",
		label="(token_valid === 1'bx)",
		lineno=3077];
	"Leaf_2891:AL"	 [def_var="['tx_data_to_cnt']",
		label="Leaf_2891:AL"];
	"2891:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f88490>",
		clk_sens=True,
		fillcolor=gold,
		label="2891:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['tx_data_to_clr', 'tx_data_to_cnt']"];
	"Leaf_2891:AL" -> "2891:AL";
	"2895:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f88590>",
		clk_sens=True,
		fillcolor=gold,
		label="2895:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['tx_data_to_val', 'tx_data_to_cnt']"];
	"Leaf_2891:AL" -> "2895:AL";
	"2572:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa7350>",
		fillcolor=lightcyan,
		label="2572:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2572:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa7450>",
		fillcolor=firebrick,
		label="2572:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa7450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2572:CA" -> "2572:NS"	 [cond="[]",
		lineno=None];
	"3196:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f612d0>",
		fillcolor=turquoise,
		label="3196:BL
buf0_rl_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f61450>]",
		style=filled,
		typ=Block];
	"3196:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2878:AL"	 [def_var="['rx_ack_to']",
		label="Leaf_2878:AL"];
	"Leaf_2878:AL" -> "2950:AL";
	"Leaf_2878:AL" -> "2928:AS";
	"2523:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13945511d0>",
		fillcolor=firebrick,
		label="2523:NS
buf0_not_aloc <= &buf0_adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13945511d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2522:AL"	 [def_var="['buf0_not_aloc']",
		label="Leaf_2522:AL"];
	"2523:NS" -> "Leaf_2522:AL"	 [cond="[]",
		lineno=None];
	"2892:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f88750>",
		fillcolor=springgreen,
		label="2892:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2891:AL" -> "2892:IF"	 [cond="[]",
		lineno=None];
	"2637:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbbbd0>",
		fillcolor=lightcyan,
		label="2637:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2637:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbbcd0>",
		fillcolor=firebrick,
		label="2637:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbbcd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2637:CA" -> "2637:NS"	 [cond="[]",
		lineno=None];
	"2804:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f6e890>",
		fillcolor=firebrick,
		label="2804:NS
out_to_small_r <= uc_stat_set_d & out_op & dma_en & (sizu_c != max_pl_sz);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f6e890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2803:AL"	 [def_var="['out_to_small_r']",
		label="Leaf_2803:AL"];
	"2804:NS" -> "Leaf_2803:AL"	 [cond="[]",
		lineno=None];
	"2986:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f29e90>",
		fillcolor=aquamarine,
		label="2986:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2986:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2563:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f13b5fa2dd0>",
		fillcolor=linen,
		label="2563:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"2565:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa2ed0>",
		fillcolor=lightcyan,
		label="2565:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2563:CS" -> "2565:CA"	 [cond="['pid_MDATA', 'pid_DATA1']",
		label="{ pid_MDATA, pid_DATA1 }",
		lineno=2563];
	"2564:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa2c90>",
		fillcolor=lightcyan,
		label="2564:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2563:CS" -> "2564:CA"	 [cond="['pid_MDATA', 'pid_DATA1']",
		label="{ pid_MDATA, pid_DATA1 }",
		lineno=2563];
	"2879:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f84e90>",
		fillcolor=firebrick,
		label="2879:NS
rx_ack_to <= rx_ack_to_cnt == rx_ack_to_val;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f84e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2879:NS" -> "Leaf_2878:AL"	 [cond="[]",
		lineno=None];
	"2990:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f2f6d0>",
		fillcolor=aquamarine,
		label="2990:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2990:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3146:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f56510>",
		fillcolor=aquamarine,
		label="3146:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3146:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2706:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fce950>",
		fillcolor=firebrick,
		label="2706:NS
out_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fce950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2700:AL"	 [def_var="['out_token']",
		label="Leaf_2700:AL"];
	"2706:NS" -> "Leaf_2700:AL"	 [cond="[]",
		lineno=None];
	"2916:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f8de50>",
		fillcolor=firebrick,
		label="2916:NS
pid_PING_r <= pid_PING;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f8de50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2915:AL"	 [def_var="['pid_PING_r']",
		label="Leaf_2915:AL"];
	"2916:NS" -> "Leaf_2915:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2918:AL"	 [def_var="['pid_SETUP_r']",
		label="Leaf_2918:AL"];
	"2921:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f93190>",
		clk_sens=True,
		fillcolor=gold,
		label="2921:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SOF', 'CTRL_ep', 'pid_OUT_r', 'pid_IN_r', 'pid_PING_r', 'pid_SETUP_r', 'OUT_ep', 'IN_ep', 'match_r']"];
	"Leaf_2918:AL" -> "2921:AL";
	"Leaf_2689:AL"	 [def_var="['in_token']",
		label="Leaf_2689:AL"];
	"2726:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5fd3510>",
		def_var="['buf_sel']",
		fillcolor=deepskyblue,
		label="2726:AS
buf_sel = (dma_en)? 1'b0 : 
(CTRL_ep)? in_token : (uc_bsel[0] | buf0_na) & !buf1_na;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dma_en', 'CTRL_ep', 'in_token', 'uc_bsel', 'buf0_na', 'buf1_na']"];
	"Leaf_2689:AL" -> "2726:AS";
	"2720:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5fcef10>",
		def_var="['in_op']",
		fillcolor=deepskyblue,
		label="2720:AS
in_op = IN_ep | CTRL_ep & in_token;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['IN_ep', 'CTRL_ep', 'in_token']"];
	"Leaf_2689:AL" -> "2720:AS";
	"2640:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbf090>",
		fillcolor=lightcyan,
		label="2640:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2640:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbf190>",
		fillcolor=firebrick,
		label="2640:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbf190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2640:CA" -> "2640:NS"	 [cond="[]",
		lineno=None];
	"2844:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f7f1d0>",
		clk_sens=True,
		fillcolor=gold,
		label="2844:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf_sel', 'buf_set_d']"];
	"2726:AS" -> "2844:AL";
	"2906:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5f8d210>",
		def_var="['int_buf1_set']",
		fillcolor=deepskyblue,
		label="2906:AS
int_buf1_set = !buf_sel & buffer_done & int_set_en & !buf1_not_aloc;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf_sel', 'buffer_done', 'int_set_en', 'buf1_not_aloc']"];
	"2726:AS" -> "2906:AS";
	"2733:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5fd3cd0>",
		def_var="['buf_size']",
		fillcolor=deepskyblue,
		label="2733:AS
buf_size = (buf_sel)? buf1_sz : buf0_sz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf_sel', 'buf1_sz', 'buf0_sz']"];
	"2726:AS" -> "2733:AS";
	"2726:AS" -> "2768:AL";
	"2841:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f79610>",
		clk_sens=True,
		fillcolor=gold,
		label="2841:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf_sel', 'buf_set_d']"];
	"2726:AS" -> "2841:AL";
	"2729:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fd3750>",
		clk_sens=True,
		fillcolor=gold,
		label="2729:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf_sel', 'buf1_adr', 'buf0_adr']"];
	"2726:AS" -> "2729:AL";
	"2726:AS" -> "2772:AL";
	"2907:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5f8d610>",
		def_var="['int_buf0_set']",
		fillcolor=deepskyblue,
		label="2907:AS
int_buf0_set = buf_sel & buffer_done & int_set_en & !buf0_not_aloc;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf_sel', 'buffer_done', 'int_set_en', 'buf0_not_aloc']"];
	"2726:AS" -> "2907:AS";
	"2586:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fab090>",
		fillcolor=lightcyan,
		label="2586:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2586:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fab190>",
		fillcolor=firebrick,
		label="2586:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fab190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2586:CA" -> "2586:NS"	 [cond="[]",
		lineno=None];
	"2607:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb1690>",
		fillcolor=firebrick,
		label="2607:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb1690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2607:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2691:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5fc9c90>",
		fillcolor=springgreen,
		label="2691:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2693:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5fc9f10>",
		fillcolor=springgreen,
		label="2693:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2691:IF" -> "2693:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=2691];
	"2691:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc9c50>",
		fillcolor=firebrick,
		label="2691:NS
in_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc9c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2691:IF" -> "2691:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=2691];
	"3151:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f56d10>",
		fillcolor=springgreen,
		label="3151:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3152:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f56bd0>",
		fillcolor=turquoise,
		label="3152:BL
token_pid_sel_d = NACK;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f56c10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f56d50>]",
		style=filled,
		typ=Block];
	"3151:IF" -> "3152:BL"	 [cond="['to_small', 'to_large']",
		label="(to_small || to_large)",
		lineno=3151];
	"3157:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f5c310>",
		fillcolor=springgreen,
		label="3157:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3151:IF" -> "3157:IF"	 [cond="['to_small', 'to_large']",
		label="!((to_small || to_large))",
		lineno=3151];
	"2999:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f35290>",
		fillcolor=springgreen,
		label="2999:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3000:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f352d0>",
		fillcolor=turquoise,
		label="3000:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2999:IF" -> "3000:BL"	 [cond="['match_r', 'ep_disabled', 'pid_SOF']",
		label="(match_r && !ep_disabled && !pid_SOF)",
		lineno=2999];
	"2858:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f841d0>",
		fillcolor=firebrick,
		label="2858:NS
abort <= buffer_overflow | match & (state != IDLE) | match_r & to_large;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f841d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2857:AL"	 [def_var="['abort']",
		label="Leaf_2857:AL"];
	"2858:NS" -> "Leaf_2857:AL"	 [cond="[]",
		lineno=None];
	"2637:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2759:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5fde290>",
		def_var="['no_buf0_dma']",
		fillcolor=deepskyblue,
		label="2759:AS
no_buf0_dma = dma_en & (IN_ep & !dma_in_buf_sz1 | OUT_ep & !dma_out_buf_avail);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dma_en', 'IN_ep', 'dma_in_buf_sz1', 'OUT_ep', 'dma_out_buf_avail']"];
	"2759:AS" -> "2768:AL";
	"2759:AS" -> "2950:AL";
	"2922:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f93a10>",
		fillcolor=firebrick,
		label="2922:NS
int_upid_set <= match_r & !pid_SOF & (OUT_ep & !(pid_OUT_r | pid_PING_r) | IN_ep & !pid_IN_r | CTRL_ep & !(pid_IN_r | pid_\
OUT_r | pid_PING_r | pid_SETUP_r));",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f93a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2921:AL"	 [def_var="['int_upid_set']",
		label="Leaf_2921:AL"];
	"2922:NS" -> "Leaf_2921:AL"	 [cond="[]",
		lineno=None];
	"2985:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f29c90>",
		fillcolor=aquamarine,
		label="2985:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2985:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2717:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fd30d0>",
		fillcolor=firebrick,
		label="2717:NS
setup_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fd30d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2711:AL"	 [def_var="['setup_token']",
		label="Leaf_2711:AL"];
	"2717:NS" -> "Leaf_2711:AL"	 [cond="[]",
		lineno=None];
	"2562:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5fa2a10>",
		fillcolor=turquoise,
		label="2562:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2562:BL" -> "2563:CS"	 [cond="[]",
		lineno=None];
	"3141:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f51b10>",
		fillcolor=aquamarine,
		label="3141:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3141:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2807:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f6eb90>",
		fillcolor=firebrick,
		label="2807:NS
out_to_small <= out_to_small_r;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f6eb90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2806:AL"	 [def_var="['out_to_small']",
		label="Leaf_2806:AL"];
	"2807:NS" -> "Leaf_2806:AL"	 [cond="[]",
		lineno=None];
	"3099:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f4b050>",
		fillcolor=aquamarine,
		label="3099:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3099:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2519:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394541e90>",
		fillcolor=firebrick,
		label="2519:NS
buf1_na <= buf1[31] | &buf1_adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394541e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2518:AL"	 [def_var="['buf1_na']",
		label="Leaf_2518:AL"];
	"2519:NS" -> "Leaf_2518:AL"	 [cond="[]",
		lineno=None];
	"2910:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f8d990>",
		fillcolor=firebrick,
		label="2910:NS
pid_OUT_r <= pid_OUT;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f8d990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2909:AL"	 [def_var="['pid_OUT_r']",
		label="Leaf_2909:AL"];
	"2910:NS" -> "Leaf_2909:AL"	 [cond="[]",
		lineno=None];
	"2766:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fde950>",
		fillcolor=firebrick,
		label="2766:NS
buf1_st_max <= buf1_sz < { 3'h0, max_pl_sz };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fde950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2765:AL"	 [def_var="['buf1_st_max']",
		label="Leaf_2765:AL"];
	"2766:NS" -> "Leaf_2765:AL"	 [cond="[]",
		lineno=None];
	"2619:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5fb6050>",
		fillcolor=cadetblue,
		label="2619:BS
allow_pid = 2'b00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5fb6050>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_2617:AL"	 [def_var="['allow_pid']",
		label="Leaf_2617:AL"];
	"2619:BS" -> "Leaf_2617:AL"	 [cond="[]",
		lineno=None];
	"2912:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f8da10>",
		clk_sens=True,
		fillcolor=gold,
		label="2912:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_IN']"];
	"2913:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f8dbd0>",
		fillcolor=firebrick,
		label="2913:NS
pid_IN_r <= pid_IN;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f8dbd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2912:AL" -> "2913:NS"	 [cond="[]",
		lineno=None];
	"2618:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f13b5fb6410>",
		fillcolor=linen,
		label="2618:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"2622:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb6550>",
		fillcolor=lightcyan,
		label="2622:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2618:CS" -> "2622:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=2618];
	"2619:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb1f10>",
		fillcolor=lightcyan,
		label="2619:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2618:CS" -> "2619:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=2618];
	"2621:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb6350>",
		fillcolor=lightcyan,
		label="2621:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2618:CS" -> "2621:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=2618];
	"2620:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb6190>",
		fillcolor=lightcyan,
		label="2620:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2618:CS" -> "2620:CA"	 [cond="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		label="{ pid_DATA0, pid_DATA1, pid_DATA2, pid_MDATA }",
		lineno=2618];
	"2622:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5fb6650>",
		fillcolor=cadetblue,
		label="2622:BS
allow_pid = 2'b11;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5fb6650>]",
		style=filled,
		typ=BlockingSubstitution];
	"2622:CA" -> "2622:BS"	 [cond="[]",
		lineno=None];
	"2506:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f139452ee50>",
		def_var="['uc_bsel']",
		fillcolor=deepskyblue,
		label="2506:AS
uc_bsel = csr[31:30];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2506:AS" -> "2726:AS";
	"2826:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5f73510>",
		def_var="['next_bsel']",
		fillcolor=deepskyblue,
		label="2826:AS
next_bsel = (dma_en)? 2'h0 : 
(buffer_done)? uc_bsel + 2'h1 : uc_bsel;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dma_en', 'buffer_done', 'uc_bsel', 'uc_bsel']"];
	"2506:AS" -> "2826:AS";
	"2548:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394521610>",
		clk_sens=True,
		fillcolor=gold,
		label="2548:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_MDATA', 'pid_DATA2', 'pid_DATA1', 'uc_dpd', 'in_op', 'setup_token', 'csr', 'out_op', 'tr_fr_d']"];
	"2549:CX"	 [ast="<pyverilog.vparser.ast.CasexStatement object at 0x7f13b5fabd50>",
		fillcolor=lightgray,
		label="2549:CX",
		statements="[]",
		style=filled,
		typ=CasexStatement];
	"2548:AL" -> "2549:CX"	 [cond="[]",
		lineno=None];
	"2489:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13945303d0>",
		def_var="['OUT_ep']",
		fillcolor=deepskyblue,
		label="2489:AS
OUT_ep = csr[27:26] == 2'b10;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2489:AS" -> "2759:AS";
	"2489:AS" -> "2950:AL";
	"2723:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5fd3390>",
		def_var="['out_op']",
		fillcolor=deepskyblue,
		label="2723:AS
out_op = OUT_ep | CTRL_ep & out_token;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['OUT_ep', 'CTRL_ep', 'out_token']"];
	"2489:AS" -> "2723:AS";
	"2489:AS" -> "2921:AL";
	"Leaf_2798:AL"	 [def_var="['buffer_overflow']",
		label="Leaf_2798:AL"];
	"Leaf_2798:AL" -> "2857:AL";
	"2982:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f29690>",
		fillcolor=aquamarine,
		label="2982:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2982:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2516:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394541b10>",
		fillcolor=firebrick,
		label="2516:NS
buf0_na <= buf0[31] | &buf0_adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394541b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2515:AL"	 [def_var="['buf0_na']",
		label="Leaf_2515:AL"];
	"2516:NS" -> "Leaf_2515:AL"	 [cond="[]",
		lineno=None];
	"2874:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f84750>",
		clk_sens=True,
		fillcolor=gold,
		label="2874:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_ack_to_clr', 'rx_ack_to_cnt']"];
	"2875:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f84a10>",
		fillcolor=springgreen,
		label="2875:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2874:AL" -> "2875:IF"	 [cond="[]",
		lineno=None];
	"3106:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f4bd10>",
		fillcolor=springgreen,
		label="3106:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3107:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f4bcd0>",
		fillcolor=cadetblue,
		label="3107:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f4bcd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"3106:IF" -> "3107:BS"	 [cond="['tx_data_to', 'crc16_err', 'abort']",
		label="(tx_data_to || crc16_err || abort)",
		lineno=3106];
	"3109:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f4be90>",
		fillcolor=springgreen,
		label="3109:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3106:IF" -> "3109:IF"	 [cond="['tx_data_to', 'crc16_err', 'abort']",
		label="!((tx_data_to || crc16_err || abort))",
		lineno=3106];
	"2715:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fced90>",
		fillcolor=firebrick,
		label="2715:NS
setup_token <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fced90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2715:NS" -> "Leaf_2711:AL"	 [cond="[]",
		lineno=None];
	"2605:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb1190>",
		fillcolor=lightcyan,
		label="2605:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2605:CA" -> "2605:NS"	 [cond="[]",
		lineno=None];
	"2972:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f2ff50>",
		fillcolor=turquoise,
		label="2972:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2972:BL" -> "2999:IF"	 [cond="[]",
		lineno=None];
	"2978:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f29150>",
		fillcolor=springgreen,
		label="2978:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2972:BL" -> "2978:IF"	 [cond="[]",
		lineno=None];
	"3205:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5f61790>",
		fillcolor=lightcyan,
		label="3205:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"3206:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f61950>",
		fillcolor=turquoise,
		label="3206:BL
uc_stat_set_d = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f61910>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f61a90>]",
		style=filled,
		typ=Block];
	"3205:CA" -> "3206:BL"	 [cond="[]",
		lineno=None];
	"3144:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f56350>",
		fillcolor=springgreen,
		label="3144:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3144:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f56110>",
		fillcolor=aquamarine,
		label="3144:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3144:IF" -> "3144:SS"	 [cond="['pid_seq_err']",
		label="(pid_seq_err === 1'bx)",
		lineno=3144];
	"Leaf_2847:AL"	 [def_var="['uc_bsel_set']",
		label="Leaf_2847:AL"];
	"Leaf_2912:AL"	 [def_var="['pid_IN_r']",
		label="Leaf_2912:AL"];
	"2913:NS" -> "Leaf_2912:AL"	 [cond="[]",
		lineno=None];
	"2671:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc9950>",
		fillcolor=firebrick,
		label="2671:NS
pid_seq_err <= !((this_dpid == 2'b00) & pid_DATA0 | (this_dpid == 2'b01) & pid_DATA1 | (this_dpid == 2'b10) & pid_DATA2 | (\
this_dpid == 2'b11) & pid_MDATA);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc9950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2671:NS" -> "Leaf_2670:AL"	 [cond="[]",
		lineno=None];
	"2836:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f79850>",
		fillcolor=springgreen,
		label="2836:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2836:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f79810>",
		fillcolor=firebrick,
		label="2836:NS
idin[3:0] <= new_adr[3:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f79810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2836:IF" -> "2836:NS"	 [cond="['buf_set_d']",
		label=buf_set_d,
		lineno=2836];
	"2838:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f79e50>",
		fillcolor=springgreen,
		label="2838:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2836:IF" -> "2838:IF"	 [cond="['buf_set_d']",
		label="!(buf_set_d)",
		lineno=2836];
	"2715:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5fcedd0>",
		fillcolor=springgreen,
		label="2715:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2715:IF" -> "2715:NS"	 [cond="['pid_SETUP']",
		label=pid_SETUP,
		lineno=2715];
	"2717:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5fcef90>",
		fillcolor=springgreen,
		label="2717:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2715:IF" -> "2717:IF"	 [cond="['pid_SETUP']",
		label="!(pid_SETUP)",
		lineno=2715];
	"2775:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5f63390>",
		def_var="['no_bufs']",
		fillcolor=deepskyblue,
		label="2775:AS
no_bufs = no_bufs0 & no_bufs1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['no_bufs0', 'no_bufs1']"];
	"2775:AS" -> "2950:AL";
	"2980:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f292d0>",
		fillcolor=aquamarine,
		label="2980:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2980:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2711:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fce7d0>",
		clk_sens=True,
		fillcolor=gold,
		label="2711:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'pid_SETUP', 'pid_IN', 'pid_OUT']"];
	"2713:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5fceb50>",
		fillcolor=springgreen,
		label="2713:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2711:AL" -> "2713:IF"	 [cond="[]",
		lineno=None];
	"2693:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc9ed0>",
		fillcolor=firebrick,
		label="2693:NS
in_token <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc9ed0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2693:IF" -> "2693:NS"	 [cond="['pid_IN']",
		label=pid_IN,
		lineno=2693];
	"2695:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5fce110>",
		fillcolor=springgreen,
		label="2695:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2693:IF" -> "2695:IF"	 [cond="['pid_IN']",
		label="!(pid_IN)",
		lineno=2693];
	"2932:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f98090>",
		clk_sens=True,
		fillcolor=gold,
		label="2932:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['int_seqerr_set_d']"];
	"2933:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f98390>",
		fillcolor=firebrick,
		label="2933:NS
int_seqerr_set <= int_seqerr_set_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f98390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2932:AL" -> "2933:NS"	 [cond="[]",
		lineno=None];
	"3195:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f61410>",
		fillcolor=springgreen,
		label="3195:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3195:IF" -> "3196:BL"	 [cond="['buffer_done', 'dma_en']",
		label="(buffer_done && dma_en)",
		lineno=3195];
	"3200:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f614d0>",
		fillcolor=turquoise,
		label="3200:BL
buf_set_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f61610>]",
		style=filled,
		typ=Block];
	"3195:IF" -> "3200:BL"	 [cond="['buffer_done', 'dma_en']",
		label="!((buffer_done && dma_en))",
		lineno=3195];
	"Leaf_2535:AL"	 [def_var="['send_token']",
		label="Leaf_2535:AL"];
	"3040:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5f35850>",
		fillcolor=lightcyan,
		label="3040:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"3041:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f3b290>",
		fillcolor=turquoise,
		label="3041:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f3b390>]",
		style=filled,
		typ=Block];
	"3040:CA" -> "3041:BL"	 [cond="[]",
		lineno=None];
	"2765:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fde590>",
		clk_sens=True,
		fillcolor=gold,
		label="2765:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['max_pl_sz', 'buf1_sz']"];
	"2765:AL" -> "2766:NS"	 [cond="[]",
		lineno=None];
	"2881:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5f880d0>",
		def_var="['rx_ack_to_val']",
		fillcolor=deepskyblue,
		label="2881:AS
rx_ack_to_val = (mode_hs)? 8'd22 : 8'd36;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_hs']"];
	"2878:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f84850>",
		clk_sens=True,
		fillcolor=gold,
		label="2878:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_ack_to_cnt', 'rx_ack_to_val']"];
	"2881:AS" -> "2878:AL";
	"2844:AL" -> "2845:NS"	 [cond="[]",
		lineno=None];
	"3091:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5f46a50>",
		fillcolor=lightcyan,
		label="3091:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"3092:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f4bb90>",
		fillcolor=turquoise,
		label="3092:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3091:CA" -> "3092:BL"	 [cond="[]",
		lineno=None];
	"3143:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f51f90>",
		fillcolor=springgreen,
		label="3143:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3143:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f51ed0>",
		fillcolor=aquamarine,
		label="3143:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3143:IF" -> "3143:SS"	 [cond="['to_large']",
		label="(to_large === 1'bx)",
		lineno=3143];
	"2667:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5fc9050>",
		def_var="['data_pid_sel']",
		fillcolor=deepskyblue,
		label="2667:AS
data_pid_sel = this_dpid;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['this_dpid']"];
	"2815:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f6ec10>",
		clk_sens=True,
		fillcolor=gold,
		label="2815:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['max_pl_sz', 'sml_ok', 'sizu_c']"];
	"2816:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f6ef50>",
		fillcolor=firebrick,
		label="2816:NS
to_small <= !sml_ok & (sizu_c < max_pl_sz);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f6ef50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2815:AL" -> "2816:NS"	 [cond="[]",
		lineno=None];
	"2522:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394541e10>",
		clk_sens=True,
		fillcolor=gold,
		label="2522:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf0_adr']"];
	"2522:AL" -> "2523:NS"	 [cond="[]",
		lineno=None];
	"2657:CX"	 [ast="<pyverilog.vparser.ast.CasexStatement object at 0x7f13b5fc4d50>",
		fillcolor=lightgray,
		label="2657:CX",
		statements="[]",
		style=filled,
		typ=CasexStatement];
	"2657:CX" -> "2658:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=2657];
	"2661:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fc4c90>",
		fillcolor=lightcyan,
		label="2661:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2657:CX" -> "2661:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=2657];
	"2659:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fc48d0>",
		fillcolor=lightcyan,
		label="2659:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2657:CX" -> "2659:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=2657];
	"2660:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fc4a50>",
		fillcolor=lightcyan,
		label="2660:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2657:CX" -> "2660:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=2657];
	"2662:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fc4e90>",
		fillcolor=lightcyan,
		label="2662:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2657:CX" -> "2662:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=2657];
	"2627:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb6cd0>",
		fillcolor=firebrick,
		label="2627:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb6cd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2627:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2536:NS" -> "Leaf_2535:AL"	 [cond="[]",
		lineno=None];
	"2829:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f73b90>",
		fillcolor=firebrick,
		label="2829:NS
idin[31:17] <= (out_to_small_r)? { 4'h0, sizu_c } : { buffer_done, new_size };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f73b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2828:AL"	 [def_var="['idin']",
		label="Leaf_2828:AL"];
	"2829:NS" -> "Leaf_2828:AL"	 [cond="[]",
		lineno=None];
	"2752:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fd9990>",
		fillcolor=firebrick,
		label="2752:NS
buffer_empty <= new_size == 14'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fd9990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2751:AL"	 [def_var="['buffer_empty']",
		label="Leaf_2751:AL"];
	"2752:NS" -> "Leaf_2751:AL"	 [cond="[]",
		lineno=None];
	"2532:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394551790>",
		clk_sens=True,
		fillcolor=gold,
		label="2532:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SETUP', 'pid_OUT', 'token_valid', 'pid_IN', 'match']"];
	"2533:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394551b90>",
		fillcolor=firebrick,
		label="2533:NS
nse_err <= token_valid & (pid_OUT | pid_IN | pid_SETUP) & !match;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394551b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2532:AL" -> "2533:NS"	 [cond="[]",
		lineno=None];
	"2741:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5fd9350>",
		def_var="['size']",
		fillcolor=deepskyblue,
		label="2741:AS
size = size_next;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['size_next']"];
	"3008:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f3b1d0>",
		fillcolor=springgreen,
		label="3008:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3012:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f3b090>",
		fillcolor=turquoise,
		label="3012:BL
token_pid_sel_d = NACK;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f35f10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f3b0d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f3b210>]",
		style=filled,
		typ=Block];
	"3008:IF" -> "3012:BL"	 [cond="['buf0_na', 'buf1_na', 'no_buf0_dma', 'CTRL_ep', 'pid_IN', 'buf1_na', 'CTRL_ep', 'pid_OUT', 'buf0_na']",
		label="(buf0_na && buf1_na || no_buf0_dma || CTRL_ep && pid_IN && buf1_na || CTRL_ep && pid_OUT && buf0_na)",
		lineno=3008];
	"3018:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f3b810>",
		fillcolor=springgreen,
		label="3018:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3008:IF" -> "3018:IF"	 [cond="['buf0_na', 'buf1_na', 'no_buf0_dma', 'CTRL_ep', 'pid_IN', 'buf1_na', 'CTRL_ep', 'pid_OUT', 'buf0_na']",
		label="!((buf0_na && buf1_na || no_buf0_dma || CTRL_ep && pid_IN && buf1_na || CTRL_ep && pid_OUT && buf0_na))",
		lineno=3008];
	"3062:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f41c10>",
		fillcolor=springgreen,
		label="3062:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3063:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f41c50>",
		fillcolor=turquoise,
		label="3063:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3062:IF" -> "3063:BL"	 [cond="['idma_done']",
		label=idma_done,
		lineno=3062];
	"2629:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb6e50>",
		fillcolor=lightcyan,
		label="2629:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2629:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb6f50>",
		fillcolor=firebrick,
		label="2629:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb6f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2629:CA" -> "2629:NS"	 [cond="[]",
		lineno=None];
	"2617:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fb1d50>",
		clk_sens=False,
		fillcolor=gold,
		label="2617:AL",
		sens="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_MDATA', 'pid_DATA2', 'pid_DATA1', 'pid_DATA0']"];
	"2617:AL" -> "2618:CS"	 [cond="[]",
		lineno=None];
	"2630:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbb090>",
		fillcolor=lightcyan,
		label="2630:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2630:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbb190>",
		fillcolor=firebrick,
		label="2630:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbb190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2630:CA" -> "2630:NS"	 [cond="[]",
		lineno=None];
	"2579:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa7ad0>",
		fillcolor=firebrick,
		label="2579:NS
next_dpid <= 2'b10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa7ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2579:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"3057:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f41650>",
		fillcolor=aquamarine,
		label="3057:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3057:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3152:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3189:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f5cf10>",
		fillcolor=springgreen,
		label="3189:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3189:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f5ce50>",
		fillcolor=aquamarine,
		label="3189:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3189:IF" -> "3189:SS"	 [cond="['dma_en']",
		label="(dma_en === 1'bx)",
		lineno=3189];
	"2661:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc4d90>",
		fillcolor=firebrick,
		label="2661:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc4d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2661:CA" -> "2661:NS"	 [cond="[]",
		lineno=None];
	"2730:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fd3a90>",
		fillcolor=firebrick,
		label="2730:NS
adr <= (buf_sel)? buf1_adr : buf0_adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fd3a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2729:AL"	 [def_var="['adr']",
		label="Leaf_2729:AL"];
	"2730:NS" -> "Leaf_2729:AL"	 [cond="[]",
		lineno=None];
	"2713:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fceb10>",
		fillcolor=firebrick,
		label="2713:NS
setup_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fceb10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2713:NS" -> "Leaf_2711:AL"	 [cond="[]",
		lineno=None];
	"2559:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa28d0>",
		fillcolor=firebrick,
		label="2559:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa28d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2559:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"3146:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f56750>",
		fillcolor=springgreen,
		label="3146:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3146:IF" -> "3146:SS"	 [cond="['no_bufs']",
		label="(no_bufs === 1'bx)",
		lineno=3146];
	"3112:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f51050>",
		fillcolor=turquoise,
		label="3112:BL
next_state = UPDATEW;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f51350>]",
		style=filled,
		typ=Block];
	"3113:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f51190>",
		fillcolor=springgreen,
		label="3113:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3112:BL" -> "3113:IF"	 [cond="[]",
		lineno=None];
	"3166:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f5c890>",
		fillcolor=cadetblue,
		label="3166:BS
token_pid_sel_d = ACK;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f5c890>]",
		style=filled,
		typ=BlockingSubstitution];
	"3166:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2505:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f139452ec50>",
		def_var="['uc_dpd']",
		fillcolor=deepskyblue,
		label="2505:AS
uc_dpd = csr[29:28];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2505:AS" -> "2548:AL";
	"2625:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fb67d0>",
		clk_sens=True,
		fillcolor=gold,
		label="2625:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['allow_pid', 'tr_fr_d', 'in_op', 'setup_token', 'csr', 'out_op', 'uc_dpd']"];
	"2505:AS" -> "2625:AL";
	"2651:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbfc10>",
		fillcolor=lightcyan,
		label="2651:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2652:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc4050>",
		fillcolor=firebrick,
		label="2652:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc4050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2651:CA" -> "2652:NS"	 [cond="[]",
		lineno=None];
	"Leaf_2700:AL" -> "2723:AS";
	"2608:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb1890>",
		fillcolor=firebrick,
		label="2608:NS
next_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb1890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2608:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2695:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fce210>",
		fillcolor=firebrick,
		label="2695:NS
in_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fce210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2695:NS" -> "Leaf_2689:AL"	 [cond="[]",
		lineno=None];
	"2518:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394541b50>",
		clk_sens=True,
		fillcolor=gold,
		label="2518:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf1', 'buf1_adr']"];
	"2518:AL" -> "2519:NS"	 [cond="[]",
		lineno=None];
	"3135:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f56850>",
		fillcolor=turquoise,
		label="3135:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3135:BL" -> "3144:IF"	 [cond="[]",
		lineno=None];
	"3135:BL" -> "3143:IF"	 [cond="[]",
		lineno=None];
	"3135:BL" -> "3146:IF"	 [cond="[]",
		lineno=None];
	"3142:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f51f10>",
		fillcolor=springgreen,
		label="3142:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3135:BL" -> "3142:IF"	 [cond="[]",
		lineno=None];
	"3149:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f568d0>",
		fillcolor=springgreen,
		label="3149:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3135:BL" -> "3149:IF"	 [cond="[]",
		lineno=None];
	"3145:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f56550>",
		fillcolor=springgreen,
		label="3145:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3135:BL" -> "3145:IF"	 [cond="[]",
		lineno=None];
	"3141:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f51cd0>",
		fillcolor=springgreen,
		label="3141:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3135:BL" -> "3141:IF"	 [cond="[]",
		lineno=None];
	"2693:NS" -> "Leaf_2689:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2853:AL"	 [def_var="['buf0_rl']",
		label="Leaf_2853:AL"];
	"2573:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa7590>",
		fillcolor=lightcyan,
		label="2573:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2573:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa7690>",
		fillcolor=firebrick,
		label="2573:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa7690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2573:CA" -> "2573:NS"	 [cond="[]",
		lineno=None];
	"Leaf_2915:AL" -> "2921:AL";
	"2577:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5fa7750>",
		fillcolor=turquoise,
		label="2577:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2578:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f13b5fa7b10>",
		fillcolor=linen,
		label="2578:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"2577:BL" -> "2578:CS"	 [cond="[]",
		lineno=None];
	"3099:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f4b250>",
		fillcolor=springgreen,
		label="3099:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3099:IF" -> "3099:SS"	 [cond="['crc16_err']",
		label="(crc16_err === 1'bx)",
		lineno=3099];
	"2787:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f63d50>",
		fillcolor=firebrick,
		label="2787:NS
adr_r <= adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f63d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2786:AL"	 [def_var="['adr_r']",
		label="Leaf_2786:AL"];
	"2787:NS" -> "Leaf_2786:AL"	 [cond="[]",
		lineno=None];
	"2570:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5fa70d0>",
		fillcolor=turquoise,
		label="2570:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2571:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f13b5fa7490>",
		fillcolor=linen,
		label="2571:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"2570:BL" -> "2571:CS"	 [cond="[]",
		lineno=None];
	"2706:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5fce850>",
		fillcolor=springgreen,
		label="2706:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2706:IF" -> "2706:NS"	 [cond="['pid_IN']",
		label=pid_IN,
		lineno=2706];
	"2956:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f23c50>",
		fillcolor=turquoise,
		label="2956:BL
next_state = state;
token_pid_sel_d = ACK;
send_token_d = 1'b0;
rx_dma_en = 1'b0;
tx_dma_en = 1'b0;
buf_set_d = 1'b0;
uc_\
stat_set_d = 1'b0;
buf0_rl_d = 1'b0;
int_set_en = 1'b0;
rx_ack_to_clr_d = 1'b1;
int_seqerr_set_d = 1'b0;
send_zero_length = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f9dc90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f9de10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f9df90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f23110>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f23250>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f23390>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f23510>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f23650>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f23790>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f23910>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f23a90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f23c10>]",
		style=filled,
		typ=Block];
	"2970:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f13b5f61710>",
		fillcolor=linen,
		label="2970:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"2956:BL" -> "2970:CS"	 [cond="[]",
		lineno=None];
	"2782:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f63ad0>",
		fillcolor=firebrick,
		label="2782:NS
new_size <= buf_size - new_sizeb;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f63ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2781:AL"	 [def_var="['new_size']",
		label="Leaf_2781:AL"];
	"2782:NS" -> "Leaf_2781:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2762:AL" -> "2768:AL";
	"2991:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f2f8d0>",
		fillcolor=aquamarine,
		label="2991:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2991:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2515:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394541810>",
		clk_sens=True,
		fillcolor=gold,
		label="2515:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf0', 'buf0_adr']"];
	"2515:AL" -> "2516:NS"	 [cond="[]",
		lineno=None];
	"2634:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbb850>",
		fillcolor=firebrick,
		label="2634:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbb850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2634:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"3132:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f51990>",
		fillcolor=cadetblue,
		label="3132:BS
next_state = OUT2B;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f51990>]",
		style=filled,
		typ=BlockingSubstitution];
	"3132:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2691:NS" -> "Leaf_2689:AL"	 [cond="[]",
		lineno=None];
	"2662:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc4f90>",
		fillcolor=firebrick,
		label="2662:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc4f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2662:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2565:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa2fd0>",
		fillcolor=firebrick,
		label="2565:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa2fd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2565:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2947:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f989d0>",
		fillcolor=firebrick,
		label="2947:NS
state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f989d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2947:NS" -> "Leaf_2943:AL"	 [cond="[]",
		lineno=None];
	"2509:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13945410d0>",
		def_var="['buf0_adr']",
		fillcolor=deepskyblue,
		label="2509:AS
buf0_adr = buf0[SSRAM_HADR+2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf0']"];
	"2509:AS" -> "2522:AL";
	"2509:AS" -> "2515:AL";
	"2831:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f73e90>",
		clk_sens=True,
		fillcolor=gold,
		label="2831:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['new_adr', 'out_to_small_r', 'buf0_adr']"];
	"2509:AS" -> "2831:AL";
	"2509:AS" -> "2729:AL";
	"2835:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f79550>",
		clk_sens=True,
		fillcolor=gold,
		label="2835:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['new_adr', 'buf0_adr', 'next_dpid', 'out_to_small_r', 'next_bsel', 'buf_set_d']"];
	"2509:AS" -> "2835:AL";
	"2740:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5fd9190>",
		def_var="['size_next']",
		fillcolor=deepskyblue,
		label="2740:AS
size_next = (buf_smaller)? buf_size : max_pl_sz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf_smaller', 'buf_size', 'max_pl_sz']"];
	"2733:AS" -> "2740:AS";
	"2736:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5fd3fd0>",
		def_var="['buf_smaller']",
		fillcolor=deepskyblue,
		label="2736:AS
buf_smaller = buf_size < { 3'h0, max_pl_sz };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf_size', 'max_pl_sz']"];
	"2733:AS" -> "2736:AS";
	"2798:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f68c90>",
		clk_sens=True,
		fillcolor=gold,
		label="2798:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_data_valid', 'buf_size', 'sizu_c']"];
	"2733:AS" -> "2798:AL";
	"2781:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f63750>",
		clk_sens=True,
		fillcolor=gold,
		label="2781:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['new_sizeb', 'buf_size']"];
	"2733:AS" -> "2781:AL";
	"2658:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2555:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa2110>",
		fillcolor=lightcyan,
		label="2555:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2555:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa2210>",
		fillcolor=firebrick,
		label="2555:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa2210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2555:CA" -> "2555:NS"	 [cond="[]",
		lineno=None];
	"2648:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbf990>",
		fillcolor=lightcyan,
		label="2648:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2649:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbfd90>",
		fillcolor=firebrick,
		label="2649:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbfd90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2648:CA" -> "2649:NS"	 [cond="[]",
		lineno=None];
	"2717:IF" -> "2717:NS"	 [cond="['pid_OUT', 'pid_IN']",
		label="(pid_OUT || pid_IN)",
		lineno=2717];
	"2632:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbb2d0>",
		fillcolor=lightcyan,
		label="2632:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2632:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbb3d0>",
		fillcolor=firebrick,
		label="2632:NS
this_dpid <= 2'b10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbb3d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2632:CA" -> "2632:NS"	 [cond="[]",
		lineno=None];
	"3165:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f5c6d0>",
		fillcolor=cadetblue,
		label="3165:BS
token_pid_sel_d = NYET;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f5c6d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"3165:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2980:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f29490>",
		fillcolor=springgreen,
		label="2980:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2980:IF" -> "2980:SS"	 [cond="['match_r']",
		label="(match_r === 1'bx)",
		lineno=2980];
	"2878:AL" -> "2879:NS"	 [cond="[]",
		lineno=None];
	"2619:CA" -> "2619:BS"	 [cond="[]",
		lineno=None];
	"2571:CS" -> "2572:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=2571];
	"2571:CS" -> "2573:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=2571];
	"2660:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc4b90>",
		fillcolor=firebrick,
		label="2660:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc4b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2660:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"3113:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f51290>",
		fillcolor=cadetblue,
		label="3113:BS
int_seqerr_set_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f51290>]",
		style=filled,
		typ=BlockingSubstitution];
	"3113:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3077:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2756:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fd9c90>",
		fillcolor=firebrick,
		label="2756:NS
buffer_done <= (in_op)? buffer_empty : buffer_full;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fd9c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2755:AL"	 [def_var="['buffer_done']",
		label="Leaf_2755:AL"];
	"2756:NS" -> "Leaf_2755:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2895:AL"	 [def_var="['tx_data_to']",
		label="Leaf_2895:AL"];
	"Leaf_2895:AL" -> "2950:AL";
	"Leaf_2895:AL" -> "2928:AS";
	"3085:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f46bd0>",
		fillcolor=springgreen,
		label="3085:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3086:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f46b90>",
		fillcolor=turquoise,
		label="3086:BL
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f46d10>]",
		style=filled,
		typ=Block];
	"3085:IF" -> "3086:BL"	 [cond="['token_valid', 'pid_ACK']",
		label="(token_valid && pid_ACK)",
		lineno=3085];
	"2608:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb1790>",
		fillcolor=lightcyan,
		label="2608:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2608:CA" -> "2608:NS"	 [cond="[]",
		lineno=None];
	"3100:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f4b210>",
		fillcolor=aquamarine,
		label="3100:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3100:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2598:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fabb10>",
		fillcolor=firebrick,
		label="2598:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fabb10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2598:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2498:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f139452e250>",
		def_var="['lrg_ok']",
		fillcolor=deepskyblue,
		label="2498:AS
lrg_ok = csr[17];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2818:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f6ef90>",
		clk_sens=True,
		fillcolor=gold,
		label="2818:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['lrg_ok', 'max_pl_sz', 'sizu_c']"];
	"2498:AS" -> "2818:AL";
	"3069:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5f41cd0>",
		fillcolor=lightcyan,
		label="3069:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"3070:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f466d0>",
		fillcolor=turquoise,
		label="3070:BL
rx_ack_to_clr_d = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f46750>]",
		style=filled,
		typ=Block];
	"3069:CA" -> "3070:BL"	 [cond="[]",
		lineno=None];
	"2564:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa2d90>",
		fillcolor=firebrick,
		label="2564:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa2d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2564:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2659:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc49d0>",
		fillcolor=firebrick,
		label="2659:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc49d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2659:CA" -> "2659:NS"	 [cond="[]",
		lineno=None];
	"3064:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f41e90>",
		fillcolor=springgreen,
		label="3064:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3063:BL" -> "3064:IF"	 [cond="[]",
		lineno=None];
	"2569:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa7110>",
		fillcolor=lightcyan,
		label="2569:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2569:CA" -> "2570:BL"	 [cond="[]",
		lineno=None];
	"3019:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f3b6d0>",
		fillcolor=turquoise,
		label="3019:BL
token_pid_sel_d = ACK;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f3b590>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f3b710>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f3b850>]",
		style=filled,
		typ=Block];
	"3019:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2762:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fde190>",
		clk_sens=True,
		fillcolor=gold,
		label="2762:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['max_pl_sz', 'buf0_sz']"];
	"2762:AL" -> "2763:NS"	 [cond="[]",
		lineno=None];
	"2646:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbf8d0>",
		fillcolor=lightcyan,
		label="2646:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2647:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbfb10>",
		fillcolor=firebrick,
		label="2647:NS
this_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbfb10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2646:CA" -> "2647:NS"	 [cond="[]",
		lineno=None];
	"2609:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb1a90>",
		fillcolor=firebrick,
		label="2609:NS
next_dpid <= 2'b10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb1a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2609:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2909:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f8d790>",
		clk_sens=True,
		fillcolor=gold,
		label="2909:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_OUT']"];
	"2909:AL" -> "2910:NS"	 [cond="[]",
		lineno=None];
	"2803:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f6e450>",
		clk_sens=True,
		fillcolor=gold,
		label="2803:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['uc_stat_set_d', 'dma_en', 'out_op', 'max_pl_sz', 'sizu_c']"];
	"2803:AL" -> "2804:NS"	 [cond="[]",
		lineno=None];
	"2981:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2986:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f29f50>",
		fillcolor=springgreen,
		label="2986:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2986:IF" -> "2986:SS"	 [cond="['no_buf0_dma']",
		label="(no_buf0_dma === 1'bx)",
		lineno=2986];
	"3142:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f51c90>",
		fillcolor=aquamarine,
		label="3142:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3142:IF" -> "3142:SS"	 [cond="['to_small']",
		label="(to_small === 1'bx)",
		lineno=3142];
	"2584:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5fa7dd0>",
		fillcolor=turquoise,
		label="2584:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2585:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f13b5fab1d0>",
		fillcolor=linen,
		label="2585:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"2584:BL" -> "2585:CS"	 [cond="[]",
		lineno=None];
	"2994:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f2fed0>",
		fillcolor=aquamarine,
		label="2994:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2994:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2751:AL" -> "2755:AL";
	"Leaf_2532:AL"	 [def_var="['nse_err']",
		label="Leaf_2532:AL"];
	"2533:NS" -> "Leaf_2532:AL"	 [cond="[]",
		lineno=None];
	"2591:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fab450>",
		fillcolor=lightcyan,
		label="2591:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2592:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fab610>",
		fillcolor=firebrick,
		label="2592:NS
next_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fab610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2591:CA" -> "2592:NS"	 [cond="[]",
		lineno=None];
	"3001:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f357d0>",
		fillcolor=springgreen,
		label="3001:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3001:IF" -> "3008:IF"	 [cond="['ep_stall']",
		label="!(ep_stall)",
		lineno=3001];
	"3002:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f35690>",
		fillcolor=turquoise,
		label="3002:BL
token_pid_sel_d = STALL;
send_token_d = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f35550>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f356d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f35810>]",
		style=filled,
		typ=Block];
	"3001:IF" -> "3002:BL"	 [cond="['ep_stall']",
		label=ep_stall,
		lineno=3001];
	"2565:CA" -> "2565:NS"	 [cond="[]",
		lineno=None];
	"2632:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2643:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbf510>",
		fillcolor=lightcyan,
		label="2643:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2643:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbf610>",
		fillcolor=firebrick,
		label="2643:NS
this_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbf610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2643:CA" -> "2643:NS"	 [cond="[]",
		lineno=None];
	"2556:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa2450>",
		fillcolor=firebrick,
		label="2556:NS
next_dpid <= 2'b10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa2450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2556:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2555:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2642:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbf2d0>",
		fillcolor=lightcyan,
		label="2642:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2642:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbf3d0>",
		fillcolor=firebrick,
		label="2642:NS
this_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbf3d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2642:CA" -> "2642:NS"	 [cond="[]",
		lineno=None];
	"2594:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fab490>",
		fillcolor=lightcyan,
		label="2594:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2595:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fab890>",
		fillcolor=firebrick,
		label="2595:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fab890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2594:CA" -> "2595:NS"	 [cond="[]",
		lineno=None];
	"2656:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fc4410>",
		fillcolor=lightcyan,
		label="2656:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2656:CA" -> "2657:CX"	 [cond="[]",
		lineno=None];
	"2649:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2988:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f2f510>",
		fillcolor=springgreen,
		label="2988:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2988:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f2f2d0>",
		fillcolor=aquamarine,
		label="2988:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2988:IF" -> "2988:SS"	 [cond="['pid_IN']",
		label="(pid_IN === 1'bx)",
		lineno=2988];
	"3128:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f516d0>",
		fillcolor=springgreen,
		label="3128:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3128:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f51490>",
		fillcolor=aquamarine,
		label="3128:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3128:IF" -> "3128:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=3128];
	"2915:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f8dc50>",
		clk_sens=True,
		fillcolor=gold,
		label="2915:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_PING']"];
	"2915:AL" -> "2916:NS"	 [cond="[]",
		lineno=None];
	"2826:AS" -> "2835:AL";
	"Leaf_2518:AL" -> "2726:AS";
	"Leaf_2518:AL" -> "2950:AL";
	"Leaf_2518:AL" -> "2772:AL";
	"2652:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2841:AL"	 [def_var="['buf0_set']",
		label="Leaf_2841:AL"];
	"2773:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f631d0>",
		fillcolor=firebrick,
		label="2773:NS
no_bufs1 <= buf1_na | ((buf_sel)? buffer_full : buf1_st_max);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f631d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2772:AL"	 [def_var="['no_bufs1']",
		label="Leaf_2772:AL"];
	"2773:NS" -> "Leaf_2772:AL"	 [cond="[]",
		lineno=None];
	"2495:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394530dd0>",
		def_var="['ep_disabled']",
		fillcolor=deepskyblue,
		label="2495:AS
ep_disabled = csr[23:22] == 2'b01;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2495:AS" -> "2950:AL";
	"2828:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f73950>",
		clk_sens=True,
		fillcolor=gold,
		label="2828:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buffer_done', 'out_to_small_r', 'new_size', 'sizu_c']"];
	"Leaf_2803:AL" -> "2828:AL";
	"Leaf_2803:AL" -> "2831:AL";
	"2806:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f6e8d0>",
		clk_sens=True,
		fillcolor=gold,
		label="2806:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['out_to_small_r']"];
	"Leaf_2803:AL" -> "2806:AL";
	"Leaf_2803:AL" -> "2835:AL";
	"3111:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f512d0>",
		fillcolor=springgreen,
		label="3111:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3111:IF" -> "3112:BL"	 [cond="['txfr_iso']",
		label=txfr_iso,
		lineno=3111];
	"3116:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f514d0>",
		fillcolor=cadetblue,
		label="3116:BS
next_state = OUT2A;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f514d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"3111:IF" -> "3116:BS"	 [cond="['txfr_iso']",
		label="!(txfr_iso)",
		lineno=3111];
	"2854:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f7fc50>",
		fillcolor=firebrick,
		label="2854:NS
buf0_rl <= buf0_rl_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f7fc50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2854:NS" -> "Leaf_2853:AL"	 [cond="[]",
		lineno=None];
	"2704:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5fce710>",
		fillcolor=springgreen,
		label="2704:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2704:IF" -> "2706:IF"	 [cond="['pid_OUT', 'pid_SETUP']",
		label="!((pid_OUT || pid_SETUP))",
		lineno=2704];
	"2704:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fce6d0>",
		fillcolor=firebrick,
		label="2704:NS
out_token <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fce6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2704:IF" -> "2704:NS"	 [cond="['pid_OUT', 'pid_SETUP']",
		label="(pid_OUT || pid_SETUP)",
		lineno=2704];
	"2661:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2982:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f298d0>",
		fillcolor=springgreen,
		label="2982:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2982:IF" -> "2982:SS"	 [cond="['pid_SOF']",
		label="(pid_SOF === 1'bx)",
		lineno=2982];
	"3172:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5f567d0>",
		fillcolor=lightcyan,
		label="3172:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"3173:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f56a10>",
		fillcolor=turquoise,
		label="3173:BL
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f5cad0>]",
		style=filled,
		typ=Block];
	"3172:CA" -> "3173:BL"	 [cond="[]",
		lineno=None];
	"2779:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f63710>",
		fillcolor=firebrick,
		label="2779:NS
new_sizeb <= (out_op && dma_en)? max_pl_sz : 
             (in_op)? size_next : sizu_c;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f63710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2778:AL"	 [def_var="['new_sizeb']",
		label="Leaf_2778:AL"];
	"2779:NS" -> "Leaf_2778:AL"	 [cond="[]",
		lineno=None];
	"3149:IF" -> "3151:IF"	 [cond="['abort']",
		label="!(abort)",
		lineno=3149];
	"3149:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f56890>",
		fillcolor=cadetblue,
		label="3149:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f56890>]",
		style=filled,
		typ=BlockingSubstitution];
	"3149:IF" -> "3149:BS"	 [cond="['abort']",
		label=abort,
		lineno=3149];
	"2621:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5fb6450>",
		fillcolor=cadetblue,
		label="2621:BS
allow_pid = 2'b10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5fb6450>]",
		style=filled,
		typ=BlockingSubstitution];
	"2621:CA" -> "2621:BS"	 [cond="[]",
		lineno=None];
	"2539:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394521210>",
		fillcolor=firebrick,
		label="2539:NS
token_pid_sel <= token_pid_sel_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394521210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2538:AL"	 [def_var="['token_pid_sel']",
		label="Leaf_2538:AL"];
	"2539:NS" -> "Leaf_2538:AL"	 [cond="[]",
		lineno=None];
	"2769:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fdee90>",
		fillcolor=firebrick,
		label="2769:NS
no_bufs0 <= buf0_na | no_buf0_dma | ((buf_sel)? buf0_st_max : buffer_full & !dma_en);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fdee90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2768:AL" -> "2769:NS"	 [cond="[]",
		lineno=None];
	"3103:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f4b850>",
		fillcolor=aquamarine,
		label="3103:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3103:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3144:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2979:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f2ffd0>",
		fillcolor=turquoise,
		label="2979:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"2979:BL" -> "2983:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2987:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2981:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2980:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2986:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2988:IF"	 [cond="[]",
		lineno=None];
	"2979:BL" -> "2982:IF"	 [cond="[]",
		lineno=None];
	"2989:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f2f710>",
		fillcolor=springgreen,
		label="2989:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2989:IF"	 [cond="[]",
		lineno=None];
	"2993:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f2ff10>",
		fillcolor=springgreen,
		label="2993:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2993:IF"	 [cond="[]",
		lineno=None];
	"2994:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f2ff90>",
		fillcolor=springgreen,
		label="2994:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2994:IF"	 [cond="[]",
		lineno=None];
	"2991:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f2fb10>",
		fillcolor=springgreen,
		label="2991:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2991:IF"	 [cond="[]",
		lineno=None];
	"2992:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f2fd10>",
		fillcolor=springgreen,
		label="2992:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2992:IF"	 [cond="[]",
		lineno=None];
	"2990:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f2f910>",
		fillcolor=springgreen,
		label="2990:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2990:IF"	 [cond="[]",
		lineno=None];
	"2985:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f29ed0>",
		fillcolor=springgreen,
		label="2985:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2985:IF"	 [cond="[]",
		lineno=None];
	"2984:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f29cd0>",
		fillcolor=springgreen,
		label="2984:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2979:BL" -> "2984:IF"	 [cond="[]",
		lineno=None];
	"2490:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394530650>",
		def_var="['CTRL_ep']",
		fillcolor=deepskyblue,
		label="2490:AS
CTRL_ep = csr[27:26] == 2'b00;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2490:AS" -> "2726:AS";
	"2490:AS" -> "2950:AL";
	"2490:AS" -> "2723:AS";
	"2490:AS" -> "2720:AS";
	"2500:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f139452e690>",
		def_var="['dma_en']",
		fillcolor=deepskyblue,
		label="2500:AS
dma_en = csr[15] & !CTRL_ep;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr', 'CTRL_ep']"];
	"2490:AS" -> "2500:AS";
	"2490:AS" -> "2921:AL";
	"Leaf_2781:AL" -> "2746:AL";
	"Leaf_2781:AL" -> "2828:AL";
	"2751:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fd9710>",
		clk_sens=True,
		fillcolor=gold,
		label="2751:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['new_size']"];
	"Leaf_2781:AL" -> "2751:AL";
	"2842:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f7f0d0>",
		fillcolor=firebrick,
		label="2842:NS
buf0_set <= !buf_sel & buf_set_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f7f0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2841:AL" -> "2842:NS"	 [cond="[]",
		lineno=None];
	"Leaf_2815:AL"	 [def_var="['to_small']",
		label="Leaf_2815:AL"];
	"Leaf_2815:AL" -> "2950:AL";
	"Leaf_2768:AL"	 [def_var="['no_bufs0']",
		label="Leaf_2768:AL"];
	"Leaf_2768:AL" -> "2775:AS";
	"2583:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa7e10>",
		fillcolor=lightcyan,
		label="2583:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2583:CA" -> "2584:BL"	 [cond="[]",
		lineno=None];
	"2626:CX"	 [ast="<pyverilog.vparser.ast.CasexStatement object at 0x7f13b5fc4290>",
		fillcolor=lightgray,
		label="2626:CX",
		statements="[]",
		style=filled,
		typ=CasexStatement];
	"2625:AL" -> "2626:CX"	 [cond="[]",
		lineno=None];
	"2607:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb1550>",
		fillcolor=lightcyan,
		label="2607:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2607:CA" -> "2607:NS"	 [cond="[]",
		lineno=None];
	"2950:AL" -> "2956:BL"	 [cond="[]",
		lineno=None];
	"2828:AL" -> "2829:NS"	 [cond="[]",
		lineno=None];
	"2723:AS" -> "2548:AL";
	"2723:AS" -> "2803:AL";
	"2723:AS" -> "2625:AL";
	"2792:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5f68490>",
		def_var="['new_adr']",
		fillcolor=deepskyblue,
		label="2792:AS
new_adr = adr_r[SSRAM_HADR+2:0] + ((out_op && dma_en)? { { SSRAM_HADR + 2 - 10{ 1'b0 } }, max_pl_sz[10:0] } : 
(in_op)? { { \
SSRAM_HADR + 2 - 13{ 1'b0 } }, size_next_r[13:0] } : { { SSRAM_HADR + 2 - 10{ 1'b0 } }, sizu_c[10:0] });",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['adr_r', 'out_op', 'dma_en', 'max_pl_sz', 'in_op', 'size_next_r', 'sizu_c']"];
	"2723:AS" -> "2792:AS";
	"2778:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f63350>",
		clk_sens=True,
		fillcolor=gold,
		label="2778:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['dma_en', 'max_pl_sz', 'size_next', 'in_op', 'out_op', 'sizu_c']"];
	"2723:AS" -> "2778:AL";
	"3098:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f46fd0>",
		fillcolor=springgreen,
		label="3098:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3098:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f46e10>",
		fillcolor=aquamarine,
		label="3098:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3098:IF" -> "3098:SS"	 [cond="['tx_data_to']",
		label="(tx_data_to === 1'bx)",
		lineno=3098];
	"2945:NS" -> "Leaf_2943:AL"	 [cond="[]",
		lineno=None];
	"2919:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f93110>",
		fillcolor=firebrick,
		label="2919:NS
pid_SETUP_r <= pid_SETUP;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f93110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2919:NS" -> "Leaf_2918:AL"	 [cond="[]",
		lineno=None];
	"2978:IF" -> "2979:BL"	 [cond="['rst', 'match_r', 'ep_disabled', 'pid_SOF']",
		label="(rst && match_r && !ep_disabled && !pid_SOF)",
		lineno=2978];
	"2493:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394530b50>",
		def_var="['txfr_bulk']",
		fillcolor=deepskyblue,
		label="2493:AS
txfr_bulk = csr[25:24] == 2'b10;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2557:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa2590>",
		fillcolor=lightcyan,
		label="2557:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2557:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa2690>",
		fillcolor=firebrick,
		label="2557:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa2690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2557:CA" -> "2557:NS"	 [cond="[]",
		lineno=None];
	"2842:NS" -> "Leaf_2841:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2835:AL"	 [def_var="['idin']",
		label="Leaf_2835:AL"];
	"Leaf_2765:AL" -> "2772:AL";
	"3145:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f56310>",
		fillcolor=aquamarine,
		label="3145:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3145:IF" -> "3145:SS"	 [cond="['mode_hs']",
		label="(mode_hs === 1'bx)",
		lineno=3145];
	"2592:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"3131:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f51850>",
		fillcolor=springgreen,
		label="3131:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3131:IF" -> "3132:BS"	 [cond="['abort']",
		label="!(abort)",
		lineno=3131];
	"3131:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f51810>",
		fillcolor=cadetblue,
		label="3131:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f51810>]",
		style=filled,
		typ=BlockingSubstitution];
	"3131:IF" -> "3131:BS"	 [cond="['abort']",
		label=abort,
		lineno=3131];
	"3206:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2898:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5f88dd0>",
		def_var="['tx_data_to_val']",
		fillcolor=deepskyblue,
		label="2898:AS
tx_data_to_val = (mode_hs)? 8'd22 : 8'd36;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_hs']"];
	"2898:AS" -> "2895:AL";
	"2857:AL" -> "2858:NS"	 [cond="[]",
		lineno=None];
	"2512:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394541790>",
		def_var="['buf1_sz']",
		fillcolor=deepskyblue,
		label="2512:AS
buf1_sz = buf1[30:17];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf1']"];
	"2512:AS" -> "2765:AL";
	"2512:AS" -> "2733:AS";
	"3083:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f46a10>",
		fillcolor=springgreen,
		label="3083:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3083:IF" -> "3085:IF"	 [cond="['rx_ack_to']",
		label="!(rx_ack_to)",
		lineno=3083];
	"3083:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f469d0>",
		fillcolor=cadetblue,
		label="3083:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f469d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"3083:IF" -> "3083:BS"	 [cond="['rx_ack_to']",
		label=rx_ack_to,
		lineno=3083];
	"3012:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3143:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2932:AL"	 [def_var="['int_seqerr_set']",
		label="Leaf_2932:AL"];
	"3113:IF" -> "3113:BS"	 [cond="['pid_seq_err']",
		label=pid_seq_err,
		lineno=3113];
	"2550:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394521b10>",
		fillcolor=firebrick,
		label="2550:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394521b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2550:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2503:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f139452ea50>",
		def_var="['max_pl_sz']",
		fillcolor=deepskyblue,
		label="2503:AS
max_pl_sz = csr[10:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2503:AS" -> "2746:AL";
	"2503:AS" -> "2765:AL";
	"2503:AS" -> "2815:AL";
	"2503:AS" -> "2762:AL";
	"2503:AS" -> "2803:AL";
	"2503:AS" -> "2950:AL";
	"2503:AS" -> "2740:AS";
	"2503:AS" -> "2736:AS";
	"2503:AS" -> "2792:AS";
	"2503:AS" -> "2778:AL";
	"2503:AS" -> "2818:AL";
	"2993:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f2fcd0>",
		fillcolor=aquamarine,
		label="2993:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2993:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2600:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fab990>",
		fillcolor=lightcyan,
		label="2600:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2601:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fabd90>",
		fillcolor=firebrick,
		label="2601:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fabd90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2600:CA" -> "2601:NS"	 [cond="[]",
		lineno=None];
	"2838:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f79c50>",
		fillcolor=firebrick,
		label="2838:NS
idin[3:0] <= buf0_adr[3:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f79c50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2838:NS" -> "Leaf_2835:AL"	 [cond="[]",
		lineno=None];
	"3025:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f3bf90>",
		fillcolor=springgreen,
		label="3025:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3032:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f411d0>",
		fillcolor=springgreen,
		label="3032:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3025:IF" -> "3032:IF"	 [cond="['IN_ep', 'CTRL_ep', 'pid_IN']",
		label="!((IN_ep || CTRL_ep && pid_IN))",
		lineno=3025];
	"3026:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f3be10>",
		fillcolor=turquoise,
		label="3026:BL
tx_dma_en = 1'b1;
next_state = IN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f3be90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f3bfd0>]",
		style=filled,
		typ=Block];
	"3025:IF" -> "3026:BL"	 [cond="['IN_ep', 'CTRL_ep', 'pid_IN']",
		label="(IN_ep || CTRL_ep && pid_IN)",
		lineno=3025];
	"2633:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbb510>",
		fillcolor=lightcyan,
		label="2633:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2633:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbb610>",
		fillcolor=firebrick,
		label="2633:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbb610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2633:CA" -> "2633:NS"	 [cond="[]",
		lineno=None];
	"2853:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f7fa50>",
		clk_sens=True,
		fillcolor=gold,
		label="2853:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf0_rl_d']"];
	"2853:AL" -> "2854:NS"	 [cond="[]",
		lineno=None];
	"3092:BL" -> "3106:IF"	 [cond="[]",
		lineno=None];
	"3092:BL" -> "3099:IF"	 [cond="[]",
		lineno=None];
	"3092:BL" -> "3098:IF"	 [cond="[]",
		lineno=None];
	"3102:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f4b890>",
		fillcolor=springgreen,
		label="3102:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3092:BL" -> "3102:IF"	 [cond="[]",
		lineno=None];
	"3103:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f4ba90>",
		fillcolor=springgreen,
		label="3103:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3092:BL" -> "3103:IF"	 [cond="[]",
		lineno=None];
	"3100:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f4b450>",
		fillcolor=springgreen,
		label="3100:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3092:BL" -> "3100:IF"	 [cond="[]",
		lineno=None];
	"3101:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f4b690>",
		fillcolor=springgreen,
		label="3101:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3092:BL" -> "3101:IF"	 [cond="[]",
		lineno=None];
	"2992:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f2fad0>",
		fillcolor=aquamarine,
		label="2992:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2992:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3107:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3057:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f41810>",
		fillcolor=springgreen,
		label="3057:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3057:IF" -> "3057:SS"	 [cond="['idma_done']",
		label="(idma_done === 1'bx)",
		lineno=3057];
	"2639:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbbe10>",
		fillcolor=lightcyan,
		label="2639:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2639:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbbf10>",
		fillcolor=firebrick,
		label="2639:NS
this_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbbf10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2639:CA" -> "2639:NS"	 [cond="[]",
		lineno=None];
	"2525:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394551250>",
		clk_sens=True,
		fillcolor=gold,
		label="2525:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['buf1_adr']"];
	"2526:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13945514d0>",
		fillcolor=firebrick,
		label="2526:NS
buf1_not_aloc <= &buf1_adr;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13945514d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2525:AL" -> "2526:NS"	 [cond="[]",
		lineno=None];
	"2653:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fc4110>",
		fillcolor=lightcyan,
		label="2653:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2654:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc42d0>",
		fillcolor=firebrick,
		label="2654:NS
this_dpid <= 2'b01;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fc42d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2653:CA" -> "2654:NS"	 [cond="[]",
		lineno=None];
	"2740:AS" -> "2789:AL";
	"2740:AS" -> "2741:AS";
	"2740:AS" -> "2778:AL";
	"2585:CS" -> "2586:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=2585];
	"2587:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fab2d0>",
		fillcolor=lightcyan,
		label="2587:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2585:CS" -> "2587:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=2585];
	"2561:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa2a50>",
		fillcolor=lightcyan,
		label="2561:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2561:CA" -> "2562:BL"	 [cond="[]",
		lineno=None];
	"2642:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2889:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5f882d0>",
		def_var="['tx_data_to_clr']",
		fillcolor=deepskyblue,
		label="2889:AS
tx_data_to_clr = rx_active;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_active']"];
	"2889:AS" -> "2891:AL";
	"2546:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13945213d0>",
		def_var="['tr_fr_d']",
		fillcolor=deepskyblue,
		label="2546:AS
tr_fr_d = (mode_hs)? tr_fr : 2'h0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_hs', 'tr_fr']"];
	"2546:AS" -> "2548:AL";
	"2546:AS" -> "2625:AL";
	"3102:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f4b650>",
		fillcolor=aquamarine,
		label="3102:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3102:IF" -> "3102:SS"	 [cond="['txfr_iso']",
		label="(txfr_iso === 1'bx)",
		lineno=3102];
	"3164:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f5c850>",
		fillcolor=turquoise,
		label="3164:BL
send_token_d = 1'b1;
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f5c950>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f5ca90>]",
		style=filled,
		typ=Block];
	"3165:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f5c790>",
		fillcolor=springgreen,
		label="3165:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3164:BL" -> "3165:IF"	 [cond="[]",
		lineno=None];
	"3110:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f4bf10>",
		fillcolor=turquoise,
		label="3110:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3110:BL" -> "3111:IF"	 [cond="[]",
		lineno=None];
	"3103:IF" -> "3103:SS"	 [cond="['pid_seq_err']",
		label="(pid_seq_err === 1'bx)",
		lineno=3103];
	"3018:IF" -> "3019:BL"	 [cond="['pid_PING', 'mode_hs']",
		label="(pid_PING && mode_hs)",
		lineno=3018];
	"3018:IF" -> "3025:IF"	 [cond="['pid_PING', 'mode_hs']",
		label="!((pid_PING && mode_hs))",
		lineno=3018];
	"3076:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f46110>",
		fillcolor=aquamarine,
		label="3076:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3076:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2989:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f2f4d0>",
		fillcolor=aquamarine,
		label="2989:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2989:IF" -> "2989:SS"	 [cond="['pid_OUT']",
		label="(pid_OUT === 1'bx)",
		lineno=2989];
	"2848:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f7f710>",
		fillcolor=firebrick,
		label="2848:NS
uc_bsel_set <= uc_stat_set_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f7f710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2848:NS" -> "Leaf_2847:AL"	 [cond="[]",
		lineno=None];
	"3188:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f5ccd0>",
		fillcolor=aquamarine,
		label="3188:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3188:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2736:AS" -> "2740:AS";
	"2556:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa2350>",
		fillcolor=lightcyan,
		label="2556:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2556:CA" -> "2556:NS"	 [cond="[]",
		lineno=None];
	"2993:IF" -> "2993:SS"	 [cond="['IN_ep']",
		label="(IN_ep === 1'bx)",
		lineno=2993];
	"3078:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f46710>",
		fillcolor=springgreen,
		label="3078:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3078:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f464d0>",
		fillcolor=aquamarine,
		label="3078:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3078:IF" -> "3078:SS"	 [cond="['pid_ACK']",
		label="(pid_ACK === 1'bx)",
		lineno=3078];
	"3033:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f41410>",
		fillcolor=turquoise,
		label="3033:BL
rx_dma_en = 1'b1;
next_state = OUT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f41450>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f41590>]",
		style=filled,
		typ=Block];
	"3032:IF" -> "3033:BL"	 [cond="['OUT_ep', 'CTRL_ep', 'pid_OUT', 'pid_SETUP']",
		label="(OUT_ep || CTRL_ep && (pid_OUT || pid_SETUP))",
		lineno=3032];
	"2799:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f6e290>",
		fillcolor=firebrick,
		label="2799:NS
buffer_overflow <= ({ 3'h0, sizu_c } > buf_size) & rx_data_valid;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f6e290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2798:AL" -> "2799:NS"	 [cond="[]",
		lineno=None];
	"3041:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2786:AL" -> "2792:AS";
	"2786:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f63b50>",
		clk_sens=True,
		fillcolor=gold,
		label="2786:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['adr']"];
	"Leaf_2729:AL" -> "2786:AL";
	"2971:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5f23dd0>",
		fillcolor=lightcyan,
		label="2971:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2971:CA" -> "2972:BL"	 [cond="[]",
		lineno=None];
	"3065:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f41fd0>",
		fillcolor=cadetblue,
		label="3065:BS
next_state = IN2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f41fd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"3065:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2595:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2488:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394530150>",
		def_var="['IN_ep']",
		fillcolor=deepskyblue,
		label="2488:AS
IN_ep = csr[27:26] == 2'b01;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2488:AS" -> "2759:AS";
	"2488:AS" -> "2950:AL";
	"2488:AS" -> "2720:AS";
	"2488:AS" -> "2921:AL";
	"2644:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbf850>",
		fillcolor=firebrick,
		label="2644:NS
this_dpid <= 2'b10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fbf850>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2644:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"3181:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5f5cb50>",
		fillcolor=lightcyan,
		label="3181:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"3182:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f61110>",
		fillcolor=turquoise,
		label="3182:BL
int_set_en = 1'b1;
next_state = UPDATE2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f61150>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f615d0>]",
		style=filled,
		typ=Block];
	"3181:CA" -> "3182:BL"	 [cond="[]",
		lineno=None];
	"Leaf_2850:AL"	 [def_var="['uc_dpd_set']",
		label="Leaf_2850:AL"];
	"2606:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb13d0>",
		fillcolor=lightcyan,
		label="2606:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2606:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb14d0>",
		fillcolor=firebrick,
		label="2606:NS
next_dpid <= 2'b11;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fb14d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2606:CA" -> "2606:NS"	 [cond="[]",
		lineno=None];
	"2634:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbb750>",
		fillcolor=lightcyan,
		label="2634:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2634:CA" -> "2634:NS"	 [cond="[]",
		lineno=None];
	"3070:BL" -> "3077:IF"	 [cond="[]",
		lineno=None];
	"3070:BL" -> "3083:IF"	 [cond="[]",
		lineno=None];
	"3070:BL" -> "3078:IF"	 [cond="[]",
		lineno=None];
	"3076:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f462d0>",
		fillcolor=springgreen,
		label="3076:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3070:BL" -> "3076:IF"	 [cond="[]",
		lineno=None];
	"3000:BL" -> "3001:IF"	 [cond="[]",
		lineno=None];
	"2832:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f79190>",
		fillcolor=firebrick,
		label="2832:NS
idin[SSRAM_HADR+2:4] <= (out_to_small_r)? buf0_adr[SSRAM_HADR+2:4] : new_adr[SSRAM_HADR+2:4];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f79190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_2831:AL"	 [def_var="['idin']",
		label="Leaf_2831:AL"];
	"2832:NS" -> "Leaf_2831:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2912:AL" -> "2921:AL";
	"3145:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3086:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3173:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2792:AS" -> "2831:AL";
	"2792:AS" -> "2835:AL";
	"3050:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5f415d0>",
		fillcolor=lightcyan,
		label="3050:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"3051:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f41ad0>",
		fillcolor=turquoise,
		label="3051:BL
rx_ack_to_clr_d = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f41a90>]",
		style=filled,
		typ=Block];
	"3050:CA" -> "3051:BL"	 [cond="[]",
		lineno=None];
	"2720:AS" -> "2548:AL";
	"2720:AS" -> "2625:AL";
	"2720:AS" -> "2792:AS";
	"2720:AS" -> "2778:AL";
	"2720:AS" -> "2755:AL";
	"Leaf_2525:AL"	 [def_var="['buf1_not_aloc']",
		label="Leaf_2525:AL"];
	"Leaf_2525:AL" -> "2906:AS";
	"3142:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2579:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa79d0>",
		fillcolor=lightcyan,
		label="2579:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2579:CA" -> "2579:NS"	 [cond="[]",
		lineno=None];
	"3100:IF" -> "3100:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=3100];
	"2510:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394541350>",
		def_var="['buf1_adr']",
		fillcolor=deepskyblue,
		label="2510:AS
buf1_adr = buf1[SSRAM_HADR+2:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf1']"];
	"2510:AS" -> "2518:AL";
	"2510:AS" -> "2525:AL";
	"2510:AS" -> "2729:AL";
	"3165:IF" -> "3166:BS"	 [cond="['mode_hs', 'no_bufs']",
		label="!((mode_hs && no_bufs))",
		lineno=3165];
	"3165:IF" -> "3165:BS"	 [cond="['mode_hs', 'no_bufs']",
		label="(mode_hs && no_bufs)",
		lineno=3165];
	"2875:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f84950>",
		fillcolor=firebrick,
		label="2875:NS
rx_ack_to_cnt <= 8'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f84950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2875:IF" -> "2875:NS"	 [cond="['rx_ack_to_clr']",
		label=rx_ack_to_clr,
		lineno=2875];
	"2876:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f84bd0>",
		fillcolor=firebrick,
		label="2876:NS
rx_ack_to_cnt <= rx_ack_to_cnt + 8'h1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f84bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2875:IF" -> "2876:NS"	 [cond="['rx_ack_to_clr']",
		label="!(rx_ack_to_clr)",
		lineno=2875];
	"2621:BS" -> "Leaf_2617:AL"	 [cond="[]",
		lineno=None];
	"2871:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f84150>",
		clk_sens=True,
		fillcolor=gold,
		label="2871:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_ack_to_clr_d', 'tx_valid']"];
	"2872:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f84550>",
		fillcolor=firebrick,
		label="2872:NS
rx_ack_to_clr <= tx_valid | rx_ack_to_clr_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f84550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2871:AL" -> "2872:NS"	 [cond="[]",
		lineno=None];
	"2713:IF" -> "2715:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=2713];
	"2713:IF" -> "2713:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=2713];
	"3157:IF" -> "3164:BL"	 [cond="['pid_seq_err']",
		label="!(pid_seq_err)",
		lineno=3157];
	"3158:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f5c1d0>",
		fillcolor=turquoise,
		label="3158:BL
token_pid_sel_d = ACK;
send_token_d = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f5c090>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f5c210>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f5c350>]",
		style=filled,
		typ=Block];
	"3157:IF" -> "3158:BL"	 [cond="['pid_seq_err']",
		label=pid_seq_err,
		lineno=3157];
	"2850:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f7f790>",
		clk_sens=True,
		fillcolor=gold,
		label="2850:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['uc_stat_set_d']"];
	"2851:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f7f9d0>",
		fillcolor=firebrick,
		label="2851:NS
uc_dpd_set <= uc_stat_set_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f7f9d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2850:AL" -> "2851:NS"	 [cond="[]",
		lineno=None];
	"2492:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13945308d0>",
		def_var="['txfr_iso']",
		fillcolor=deepskyblue,
		label="2492:AS
txfr_iso = csr[25:24] == 2'b01;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2492:AS" -> "2950:AL";
	"2930:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13b5f980d0>",
		def_var="['int_crc16_set']",
		fillcolor=deepskyblue,
		label="2930:AS
int_crc16_set = rx_data_done & crc16_err;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_data_done', 'crc16_err']"];
	"2636:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbb990>",
		fillcolor=lightcyan,
		label="2636:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2636:CA" -> "2636:NS"	 [cond="[]",
		lineno=None];
	"2552:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"3027:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f3bcd0>",
		fillcolor=springgreen,
		label="3027:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3027:IF" -> "3027:BS"	 [cond="['max_pl_sz']",
		label="(max_pl_sz == 11'h0)",
		lineno=3027];
	"3101:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f4b4d0>",
		fillcolor=aquamarine,
		label="3101:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3101:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2781:AL" -> "2782:NS"	 [cond="[]",
		lineno=None];
	"2609:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb1990>",
		fillcolor=lightcyan,
		label="2609:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2609:CA" -> "2609:NS"	 [cond="[]",
		lineno=None];
	"2994:IF" -> "2994:SS"	 [cond="['OUT_ep']",
		label="(OUT_ep === 1'bx)",
		lineno=2994];
	"2557:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2751:AL" -> "2752:NS"	 [cond="[]",
		lineno=None];
	"2500:AS" -> "2726:AS";
	"2500:AS" -> "2759:AS";
	"2500:AS" -> "2803:AL";
	"2500:AS" -> "2826:AS";
	"2500:AS" -> "2768:AL";
	"2500:AS" -> "2950:AL";
	"2500:AS" -> "2792:AS";
	"2500:AS" -> "2778:AL";
	"2629:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2991:IF" -> "2991:SS"	 [cond="['pid_PING']",
		label="(pid_PING === 1'bx)",
		lineno=2991];
	"3120:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5f4bd50>",
		fillcolor=lightcyan,
		label="3120:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"3121:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13b5f4be10>",
		fillcolor=turquoise,
		label="3121:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"3120:CA" -> "3121:BL"	 [cond="[]",
		lineno=None];
	"2502:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f139452e850>",
		def_var="['tr_fr']",
		fillcolor=deepskyblue,
		label="2502:AS
tr_fr = csr[12:11];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2502:AS" -> "2546:AS";
	"2647:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2626:CX" -> "2637:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2640:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2629:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2630:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2651:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2648:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2632:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2646:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2643:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2642:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2656:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2633:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2639:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2653:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2634:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2626:CX" -> "2636:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2644:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fbf750>",
		fillcolor=lightcyan,
		label="2644:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2626:CX" -> "2644:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2627:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fb6bd0>",
		fillcolor=lightcyan,
		label="2627:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2626:CX" -> "2627:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2626];
	"2831:AL" -> "2832:NS"	 [cond="[]",
		lineno=None];
	"Leaf_2871:AL"	 [def_var="['rx_ack_to_clr']",
		label="Leaf_2871:AL"];
	"Leaf_2871:AL" -> "2874:AL";
	"2644:CA" -> "2644:NS"	 [cond="[]",
		lineno=None];
	"2839:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f79f90>",
		fillcolor=firebrick,
		label="2839:NS
idin[3:0] <= { next_dpid, next_bsel };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f79f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2839:NS" -> "Leaf_2835:AL"	 [cond="[]",
		lineno=None];
	"2987:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2597:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fab710>",
		fillcolor=lightcyan,
		label="2597:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2597:CA" -> "2598:NS"	 [cond="[]",
		lineno=None];
	"2576:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa7790>",
		fillcolor=lightcyan,
		label="2576:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2576:CA" -> "2577:BL"	 [cond="[]",
		lineno=None];
	"Leaf_2548:AL" -> "2835:AL";
	"3128:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2896:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f88bd0>",
		fillcolor=firebrick,
		label="2896:NS
tx_data_to <= tx_data_to_cnt == tx_data_to_val;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f88bd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2895:AL" -> "2896:NS"	 [cond="[]",
		lineno=None];
	"2553:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394521f90>",
		fillcolor=firebrick,
		label="2553:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394521f90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2553:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"3121:BL" -> "3128:IF"	 [cond="[]",
		lineno=None];
	"3121:BL" -> "3131:IF"	 [cond="[]",
		lineno=None];
	"3051:BL" -> "3062:IF"	 [cond="[]",
		lineno=None];
	"3051:BL" -> "3057:IF"	 [cond="[]",
		lineno=None];
	"3058:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f41a50>",
		fillcolor=springgreen,
		label="3058:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3051:BL" -> "3058:IF"	 [cond="[]",
		lineno=None];
	"2564:CA" -> "2564:NS"	 [cond="[]",
		lineno=None];
	"Leaf_2755:AL" -> "2906:AS";
	"Leaf_2755:AL" -> "2826:AS";
	"Leaf_2755:AL" -> "2950:AL";
	"Leaf_2755:AL" -> "2828:AL";
	"Leaf_2755:AL" -> "2907:AS";
	"2806:AL" -> "2807:NS"	 [cond="[]",
		lineno=None];
	"2660:CA" -> "2660:NS"	 [cond="[]",
		lineno=None];
	"3002:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2909:AL" -> "2921:AL";
	"Leaf_2789:AL"	 [def_var="['size_next_r']",
		label="Leaf_2789:AL"];
	"2790:NS" -> "Leaf_2789:AL"	 [cond="[]",
		lineno=None];
	"3064:IF" -> "3065:BS"	 [cond="['txfr_iso']",
		label="!(txfr_iso)",
		lineno=3064];
	"3064:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f41e50>",
		fillcolor=cadetblue,
		label="3064:BS
next_state = UPDATE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5f41e50>]",
		style=filled,
		typ=BlockingSubstitution];
	"3064:IF" -> "3064:BS"	 [cond="['txfr_iso']",
		label=txfr_iso,
		lineno=3064];
	"3076:IF" -> "3076:SS"	 [cond="['rx_ack_to']",
		label="(rx_ack_to === 1'bx)",
		lineno=3076];
	"2580:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa7c10>",
		fillcolor=lightcyan,
		label="2580:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2580:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa7d10>",
		fillcolor=firebrick,
		label="2580:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fa7d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2580:CA" -> "2580:NS"	 [cond="[]",
		lineno=None];
	"3033:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3158:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3182:BL" -> "3195:IF"	 [cond="[]",
		lineno=None];
	"3182:BL" -> "3189:IF"	 [cond="[]",
		lineno=None];
	"3188:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5f5ce90>",
		fillcolor=springgreen,
		label="3188:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"3182:BL" -> "3188:IF"	 [cond="[]",
		lineno=None];
	"2816:NS" -> "Leaf_2815:AL"	 [cond="[]",
		lineno=None];
	"3078:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2778:AL" -> "2779:NS"	 [cond="[]",
		lineno=None];
	"Leaf_2528:AL"	 [def_var="['match_r']",
		label="Leaf_2528:AL"];
	"Leaf_2528:AL" -> "2950:AL";
	"Leaf_2528:AL" -> "2857:AL";
	"Leaf_2528:AL" -> "2921:AL";
	"2892:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f88690>",
		fillcolor=firebrick,
		label="2892:NS
tx_data_to_cnt <= 8'h0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f88690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2892:NS" -> "Leaf_2891:AL"	 [cond="[]",
		lineno=None];
	"2983:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3058:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f417d0>",
		fillcolor=aquamarine,
		label="3058:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"3058:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2622:BS" -> "Leaf_2617:AL"	 [cond="[]",
		lineno=None];
	"2948:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f98b50>",
		fillcolor=firebrick,
		label="2948:NS
state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f98b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2948:NS" -> "Leaf_2943:AL"	 [cond="[]",
		lineno=None];
	"2819:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f73350>",
		fillcolor=firebrick,
		label="2819:NS
to_large <= !lrg_ok & (sizu_c > max_pl_sz);",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f73350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2818:AL" -> "2819:NS"	 [cond="[]",
		lineno=None];
	"2992:IF" -> "2992:SS"	 [cond="['mode_hs']",
		label="(mode_hs === 1'bx)",
		lineno=2992];
	"2729:AL" -> "2730:NS"	 [cond="[]",
		lineno=None];
	"2836:NS" -> "Leaf_2835:AL"	 [cond="[]",
		lineno=None];
	"2578:CS" -> "2579:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=2578];
	"2578:CS" -> "2580:CA"	 [cond="['pid_MDATA', 'pid_DATA2']",
		label="{ pid_MDATA, pid_DATA2 }",
		lineno=2578];
	"Leaf_2818:AL"	 [def_var="['to_large']",
		label="Leaf_2818:AL"];
	"Leaf_2818:AL" -> "2950:AL";
	"Leaf_2818:AL" -> "2857:AL";
	"2620:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5fb6290>",
		fillcolor=cadetblue,
		label="2620:BS
allow_pid = 2'b01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13b5fb6290>]",
		style=filled,
		typ=BlockingSubstitution];
	"2620:BS" -> "Leaf_2617:AL"	 [cond="[]",
		lineno=None];
	"3134:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5f51890>",
		fillcolor=lightcyan,
		label="3134:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"3134:CA" -> "3135:BL"	 [cond="[]",
		lineno=None];
	"2700:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fce090>",
		clk_sens=True,
		fillcolor=gold,
		label="2700:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SETUP', 'pid_OUT', 'pid_IN', 'rst']"];
	"2702:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13b5fce410>",
		fillcolor=springgreen,
		label="2702:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"2700:AL" -> "2702:IF"	 [cond="[]",
		lineno=None];
	"2988:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2984:SS"	 [ast="<pyverilog.vparser.ast.SingleStatement object at 0x7f13b5f29a90>",
		fillcolor=aquamarine,
		label="2984:SS",
		statements="[]",
		style=filled,
		typ=SingleStatement];
	"2984:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2620:CA" -> "2620:BS"	 [cond="[]",
		lineno=None];
	"2970:CS" -> "3205:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"2970:CS" -> "3040:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"2970:CS" -> "3091:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"2970:CS" -> "3069:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"2970:CS" -> "3172:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"2970:CS" -> "2971:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"2970:CS" -> "3181:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"2970:CS" -> "3050:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"2970:CS" -> "3120:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"2970:CS" -> "3134:CA"	 [cond="['state']",
		label=state,
		lineno=2970];
	"3131:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2522:AL" -> "2907:AS";
	"2603:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fabed0>",
		fillcolor=lightcyan,
		label="2603:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2604:CX"	 [ast="<pyverilog.vparser.ast.CasexStatement object at 0x7f13b5fb1850>",
		fillcolor=lightgray,
		label="2604:CX",
		statements="[]",
		style=filled,
		typ=CasexStatement];
	"2603:CA" -> "2604:CX"	 [cond="[]",
		lineno=None];
	"2847:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f7f4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="2847:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['uc_stat_set_d']"];
	"2847:AL" -> "2848:NS"	 [cond="[]",
		lineno=None];
	"2572:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"3141:IF" -> "3141:SS"	 [cond="['abort']",
		label="(abort === 1'bx)",
		lineno=3141];
	"2990:IF" -> "2990:SS"	 [cond="['pid_SETUP']",
		label="(pid_SETUP === 1'bx)",
		lineno=2990];
	"3149:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2789:AL" -> "2792:AS";
	"Leaf_2711:AL" -> "2548:AL";
	"Leaf_2711:AL" -> "2625:AL";
	"2633:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2702:IF" -> "2704:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=2702];
	"2702:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fce3d0>",
		fillcolor=firebrick,
		label="2702:NS
out_token <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fce3d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2702:IF" -> "2702:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=2702];
	"2838:IF" -> "2838:NS"	 [cond="['out_to_small_r']",
		label=out_to_small_r,
		lineno=2838];
	"2838:IF" -> "2839:NS"	 [cond="['out_to_small_r']",
		label="!(out_to_small_r)",
		lineno=2838];
	"Leaf_2515:AL" -> "2726:AS";
	"Leaf_2515:AL" -> "2768:AL";
	"Leaf_2515:AL" -> "2950:AL";
	"Leaf_2874:AL"	 [def_var="['rx_ack_to_cnt']",
		label="Leaf_2874:AL"];
	"Leaf_2874:AL" -> "2874:AL";
	"Leaf_2874:AL" -> "2878:AL";
	"2772:AL" -> "2773:NS"	 [cond="[]",
		lineno=None];
	"2559:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13b5fa27d0>",
		fillcolor=lightcyan,
		label="2559:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2559:CA" -> "2559:NS"	 [cond="[]",
		lineno=None];
	"2587:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fab3d0>",
		fillcolor=firebrick,
		label="2587:NS
next_dpid <= 2'b00;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5fab3d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2587:CA" -> "2587:NS"	 [cond="[]",
		lineno=None];
	"2549:CX" -> "2552:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2555:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2569:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2591:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2594:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2583:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2557:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2600:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2561:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2556:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2597:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2576:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2603:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2549:CX" -> "2559:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2550:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1394521a10>",
		fillcolor=lightcyan,
		label="2550:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2549:CX" -> "2550:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2553:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1394521e90>",
		fillcolor=lightcyan,
		label="2553:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"2549:CX" -> "2553:CA"	 [cond="['tr_fr_d', 'csr', 'csr', 'uc_dpd']",
		label="{ tr_fr_d, csr[27:26], csr[25:24], uc_dpd }",
		lineno=2549];
	"2835:AL" -> "2836:IF"	 [cond="[]",
		lineno=None];
	"2892:IF" -> "2892:NS"	 [cond="['tx_data_to_clr']",
		label=tx_data_to_clr,
		lineno=2892];
	"2893:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f88910>",
		fillcolor=firebrick,
		label="2893:NS
tx_data_to_cnt <= tx_data_to_cnt + 8'h1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13b5f88910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2892:IF" -> "2893:NS"	 [cond="['tx_data_to_clr']",
		label="!(tx_data_to_clr)",
		lineno=2892];
	"2799:NS" -> "Leaf_2798:AL"	 [cond="[]",
		lineno=None];
	"2640:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2639:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2643:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2875:NS" -> "Leaf_2874:AL"	 [cond="[]",
		lineno=None];
	"2876:NS" -> "Leaf_2874:AL"	 [cond="[]",
		lineno=None];
	"2670:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fc9090>",
		clk_sens=True,
		fillcolor=gold,
		label="2670:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['this_dpid', 'pid_MDATA', 'pid_DATA2', 'pid_DATA1', 'pid_DATA0']"];
	"2670:AL" -> "2671:NS"	 [cond="[]",
		lineno=None];
	"2702:NS" -> "Leaf_2700:AL"	 [cond="[]",
		lineno=None];
	"2747:NS" -> "Leaf_2746:AL"	 [cond="[]",
		lineno=None];
	"3116:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2630:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"2896:NS" -> "Leaf_2895:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2772:AL" -> "2775:AS";
	"2695:IF" -> "2695:NS"	 [cond="['pid_OUT', 'pid_SETUP']",
		label="(pid_OUT || pid_SETUP)",
		lineno=2695];
	"2499:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f139452e410>",
		def_var="['sml_ok']",
		fillcolor=deepskyblue,
		label="2499:AS
sml_ok = csr[16];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2499:AS" -> "2815:AL";
	"2550:CA" -> "2550:NS"	 [cond="[]",
		lineno=None];
	"Leaf_2857:AL" -> "2950:AL";
	"2872:NS" -> "Leaf_2871:AL"	 [cond="[]",
		lineno=None];
	"2662:CA" -> "2662:NS"	 [cond="[]",
		lineno=None];
	"2989:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2769:NS" -> "Leaf_2768:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2625:AL" -> "2667:AS";
	"Leaf_2625:AL" -> "2670:AL";
	"2606:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2553:CA" -> "2553:NS"	 [cond="[]",
		lineno=None];
	"2529:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394551750>",
		fillcolor=firebrick,
		label="2529:NS
match_r <= match;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1394551750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"2529:NS" -> "Leaf_2528:AL"	 [cond="[]",
		lineno=None];
	"2528:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394551550>",
		clk_sens=True,
		fillcolor=gold,
		label="2528:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['match']"];
	"2528:AL" -> "2529:NS"	 [cond="[]",
		lineno=None];
	"2943:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f98590>",
		clk_sens=True,
		fillcolor=gold,
		label="2943:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'match', 'next_state']"];
	"2943:AL" -> "2945:IF"	 [cond="[]",
		lineno=None];
	"3026:BL" -> "3027:IF"	 [cond="[]",
		lineno=None];
	"2933:NS" -> "Leaf_2932:AL"	 [cond="[]",
		lineno=None];
	"2819:NS" -> "Leaf_2818:AL"	 [cond="[]",
		lineno=None];
	"2893:NS" -> "Leaf_2891:AL"	 [cond="[]",
		lineno=None];
	"3189:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3064:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3200:BL" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2604:CX" -> "2605:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=2604];
	"2604:CX" -> "2608:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=2604];
	"2604:CX" -> "2607:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=2604];
	"2604:CX" -> "2606:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=2604];
	"2604:CX" -> "2609:CA"	 [cond="['setup_token', 'in_op', 'out_op', 'uc_dpd']",
		label="{ setup_token, in_op, out_op, uc_dpd }",
		lineno=2604];
	"3058:IF" -> "3058:SS"	 [cond="['txfr_iso']",
		label="(txfr_iso === 1'bx)",
		lineno=3058];
	"3109:IF" -> "3110:BL"	 [cond="['rx_data_done']",
		label=rx_data_done,
		lineno=3109];
	"2947:IF" -> "2947:NS"	 [cond="['match']",
		label=match,
		lineno=2947];
	"2947:IF" -> "2948:NS"	 [cond="['match']",
		label="!(match)",
		lineno=2947];
	"2985:IF" -> "2985:SS"	 [cond="['buf1_na']",
		label="(buf1_na === 1'bx)",
		lineno=2985];
	"2918:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5f8ded0>",
		clk_sens=True,
		fillcolor=gold,
		label="2918:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['pid_SETUP']"];
	"2918:AL" -> "2919:NS"	 [cond="[]",
		lineno=None];
	"2704:NS" -> "Leaf_2700:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2950:AL" -> "2535:AL";
	"Leaf_2950:AL" -> "2932:AL";
	"Leaf_2950:AL" -> "2844:AL";
	"Leaf_2950:AL" -> "2906:AS";
	"Leaf_2950:AL" -> "2803:AL";
	"Leaf_2950:AL" -> "2841:AL";
	"Leaf_2950:AL" -> "2853:AL";
	"Leaf_2950:AL" -> "2871:AL";
	"Leaf_2950:AL" -> "2850:AL";
	"Leaf_2950:AL" -> "2847:AL";
	"Leaf_2950:AL" -> "2835:AL";
	"Leaf_2950:AL" -> "2943:AL";
	"Leaf_2950:AL" -> "2907:AS";
	"2538:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1394551f50>",
		clk_sens=True,
		fillcolor=gold,
		label="2538:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_pid_sel_d']"];
	"Leaf_2950:AL" -> "2538:AL";
	"2586:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2984:IF" -> "2984:SS"	 [cond="['buf0_na']",
		label="(buf0_na === 1'bx)",
		lineno=2984];
	"3083:BS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2654:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2778:AL" -> "2781:AL";
	"2627:CA" -> "2627:NS"	 [cond="[]",
		lineno=None];
	"2511:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1394541590>",
		def_var="['buf0_sz']",
		fillcolor=deepskyblue,
		label="2511:AS
buf0_sz = buf0[30:17];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['buf0']"];
	"2511:AS" -> "2733:AS";
	"2511:AS" -> "2762:AL";
	"2496:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f139452e090>",
		def_var="['ep_stall']",
		fillcolor=deepskyblue,
		label="2496:AS
ep_stall = csr[23:22] == 2'b10;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr']"];
	"2496:AS" -> "2950:AL";
	"3102:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"2786:AL" -> "2787:NS"	 [cond="[]",
		lineno=None];
	"2587:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2580:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2921:AL" -> "2922:NS"	 [cond="[]",
		lineno=None];
	"3098:SS" -> "Leaf_2950:AL"	 [cond="[]",
		lineno=None];
	"3101:IF" -> "3101:SS"	 [cond="['rx_data_done']",
		label="(rx_data_done === 1'bx)",
		lineno=3101];
	"2538:AL" -> "2539:NS"	 [cond="[]",
		lineno=None];
	"2689:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13b5fc9a90>",
		clk_sens=True,
		fillcolor=gold,
		label="2689:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'pid_SETUP', 'pid_IN', 'pid_OUT']"];
	"2689:AL" -> "2691:IF"	 [cond="[]",
		lineno=None];
	"2755:AL" -> "2756:NS"	 [cond="[]",
		lineno=None];
	"2851:NS" -> "Leaf_2850:AL"	 [cond="[]",
		lineno=None];
	"2573:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"2659:NS" -> "Leaf_2625:AL"	 [cond="[]",
		lineno=None];
	"Leaf_2617:AL" -> "2625:AL";
	"2601:NS" -> "Leaf_2548:AL"	 [cond="[]",
		lineno=None];
	"3188:IF" -> "3188:SS"	 [cond="['buffer_done']",
		label="(buffer_done === 1'bx)",
		lineno=3188];
	"2526:NS" -> "Leaf_2525:AL"	 [cond="[]",
		lineno=None];
}
