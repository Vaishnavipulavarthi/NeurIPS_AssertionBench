strict digraph "compose( ,  )" {
	node [label="\N"];
	"242:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d361d0>",
		fillcolor=firebrick,
		label="242:NS
mdio_in_valid <= #TP 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d361d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_240:AL"	 [def_var="['mdio_in_valid']",
		label="Leaf_240:AL"];
	"242:NS" -> "Leaf_240:AL"	 [cond="[]",
		lineno=None];
	"244:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d36550>",
		fillcolor=firebrick,
		label="244:NS
mdio_in_valid <= #TP 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d36550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"244:NS" -> "Leaf_240:AL"	 [cond="[]",
		lineno=None];
	"128:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25a8146350>",
		clk_sens=False,
		fillcolor=gold,
		label="128:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['transmitting', 'reset', 'trans_cnt']"];
	"128:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a8146390>",
		fillcolor=turquoise,
		label="128:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"128:AL" -> "128:BL"	 [cond="[]",
		lineno=None];
	"105:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d6b9d0>",
		fillcolor=turquoise,
		label="105:BL
mdio_data <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d6bc50>]",
		style=filled,
		typ=Block];
	"Leaf_104:AL"	 [def_var="['mdio_data']",
		label="Leaf_104:AL"];
	"105:BL" -> "Leaf_104:AL"	 [cond="[]",
		lineno=None];
	"191:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d16810>",
		fillcolor=turquoise,
		label="191:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"192:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d16fd0>",
		fillcolor=springgreen,
		label="192:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"191:BL" -> "192:IF"	 [cond="[]",
		lineno=None];
	"91:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8016490>",
		fillcolor=firebrick,
		label="91:NS
mdc <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8016490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_89:AL"	 [def_var="['mdc']",
		label="Leaf_89:AL"];
	"91:NS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"165:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0b950>",
		fillcolor=firebrick,
		label="165:NS
nextstate <= #TP MDIO_WRITE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0b950>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_148:AL"	 [def_var="['nextstate']",
		label="Leaf_148:AL"];
	"165:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"159:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0b490>",
		fillcolor=firebrick,
		label="159:NS
nextstate <= #TP nextstate;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0b490>]",
		style=filled,
		typ=NonblockingSubstitution];
	"159:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"161:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d0b090>",
		fillcolor=turquoise,
		label="161:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"162:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d0b790>",
		fillcolor=springgreen,
		label="162:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"161:BL" -> "162:IF"	 [cond="[]",
		lineno=None];
	"108:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d6be50>",
		fillcolor=turquoise,
		label="108:BL
mdio_data <= #TP { 31'h7fffffff, 2'b01, mdio_opcode, mdio_data_out[25:16], 2'b10, mdio_data_out[15:0] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8150490>]",
		style=filled,
		typ=Block];
	"108:BL" -> "Leaf_104:AL"	 [cond="[]",
		lineno=None];
	"153:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a814ca50>",
		fillcolor=turquoise,
		label="153:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"154:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a814ce50>",
		fillcolor=springgreen,
		label="154:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"153:BL" -> "154:IF"	 [cond="[]",
		lineno=None];
	"93:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d6b410>",
		fillcolor=firebrick,
		label="93:NS
mdc <= #TP ~mdc;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d6b410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"93:NS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"180:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d16410>",
		fillcolor=firebrick,
		label="180:NS
state <= #TP nextstate;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d16410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_176:AL"	 [def_var="['state']",
		label="Leaf_176:AL"];
	"180:NS" -> "Leaf_176:AL"	 [cond="[]",
		lineno=None];
	"199:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f25a7d0d710>",
		fillcolor=linen,
		label="199:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"206:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25a7d0aa50>",
		fillcolor=lightcyan,
		label="206:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"199:CS" -> "206:CA"	 [cond="['state']",
		label=state,
		lineno=199];
	"200:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25a7d0a210>",
		fillcolor=lightcyan,
		label="200:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"199:CS" -> "200:CA"	 [cond="['state']",
		label=state,
		lineno=199];
	"215:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25a7d0d310>",
		fillcolor=lightcyan,
		label="215:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"199:CS" -> "215:CA"	 [cond="['state']",
		label=state,
		lineno=199];
	"227:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d17cd0>",
		fillcolor=turquoise,
		label="227:BL
mdio_t <= #TP 1'b1;
receiving <= #TP 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d17c90>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25a7d17e50>]",
		style=filled,
		typ=Block];
	"Leaf_191:AL"	 [def_var="['transmitting', 'receiving', 'mdio_t', 'mdio_o']",
		label="Leaf_191:AL"];
	"227:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"89:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25a8016690>",
		clk_sens=True,
		fillcolor=gold,
		label="89:AL",
		sens="['mgmt_clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'mdc', 'clk_cnt', 'mgmt_config']"];
	"89:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a80162d0>",
		fillcolor=turquoise,
		label="89:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"89:AL" -> "89:BL"	 [cond="[]",
		lineno=None];
	"92:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d6b490>",
		fillcolor=springgreen,
		label="92:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"92:IF" -> "93:NS"	 [cond="['clk_cnt', 'mgmt_config']",
		label="(clk_cnt == mgmt_config[4:0])",
		lineno=92];
	"95:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d6b650>",
		fillcolor=firebrick,
		label="95:NS
mdc <= #TP mdc;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d6b650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"92:IF" -> "95:NS"	 [cond="['clk_cnt', 'mgmt_config']",
		label="!((clk_cnt == mgmt_config[4:0]))",
		lineno=92];
	"Leaf_252:AL"	 [def_var="['mdio_data_in']",
		label="Leaf_252:AL"];
	"252:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25a7d36d10>",
		clk_sens=False,
		fillcolor=gold,
		label="252:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'mdio_i', 'receiving', 'mdio_data_in']"];
	"Leaf_252:AL" -> "252:AL";
	"243:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d36590>",
		fillcolor=springgreen,
		label="243:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"243:IF" -> "244:NS"	 [cond="['mdio_operate_done']",
		label=mdio_operate_done,
		lineno=243];
	"245:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d36990>",
		fillcolor=springgreen,
		label="245:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"243:IF" -> "245:IF"	 [cond="['mdio_operate_done']",
		label="!(mdio_operate_done)",
		lineno=243];
	"171:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0be90>",
		fillcolor=firebrick,
		label="171:NS
nextstate <= #TP MDIO_READ;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0be90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"171:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"198:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d0a0d0>",
		fillcolor=turquoise,
		label="198:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"198:BL" -> "199:CS"	 [cond="[]",
		lineno=None];
	"80:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a80166d0>",
		fillcolor=springgreen,
		label="80:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"82:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a80169d0>",
		fillcolor=springgreen,
		label="82:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"80:IF" -> "82:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=80];
	"81:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a80167d0>",
		fillcolor=firebrick,
		label="81:NS
clk_cnt <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a80167d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"80:IF" -> "81:NS"	 [cond="['reset']",
		label=reset,
		lineno=80];
	"248:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d36ad0>",
		fillcolor=firebrick,
		label="248:NS
mdio_in_valid <= #TP 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d36ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"248:NS" -> "Leaf_240:AL"	 [cond="[]",
		lineno=None];
	"Leaf_128:AL"	 [def_var="['trans_cnt']",
		label="Leaf_128:AL"];
	"Leaf_128:AL" -> "128:AL";
	"144:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f25a8146ed0>",
		def_var="['mdio_operate_done']",
		fillcolor=deepskyblue,
		label="144:AS
mdio_operate_done = trans_cnt == 63;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['trans_cnt']"];
	"Leaf_128:AL" -> "144:AS";
	"191:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25a7d167d0>",
		clk_sens=False,
		fillcolor=gold,
		label="191:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'mdio_data_reg', 'state', 'trans_cnt']"];
	"Leaf_128:AL" -> "191:AL";
	"206:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d0d390>",
		fillcolor=turquoise,
		label="206:BL
transmitting <= #TP 1;
mdio_o <= #TP mdio_data_reg[62];
mdio_t <= #TP 1'b0;
receiving <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0ac50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25a7d0af50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0d110>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a7d0d2d0>]",
		style=filled,
		typ=Block];
	"206:CA" -> "206:BL"	 [cond="[]",
		lineno=None];
	"157:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0b290>",
		fillcolor=firebrick,
		label="157:NS
nextstate <= #TP MDIO_READ;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0b290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"157:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"79:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25a8016b10>",
		clk_sens=True,
		fillcolor=gold,
		label="79:AL",
		sens="['mgmt_clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'clk_cnt', 'mgmt_config']"];
	"79:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a8016210>",
		fillcolor=turquoise,
		label="79:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"79:AL" -> "79:BL"	 [cond="[]",
		lineno=None];
	"211:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d0d550>",
		fillcolor=turquoise,
		label="211:BL
transmitting <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0d690>]",
		style=filled,
		typ=Block];
	"211:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"256:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a801b310>",
		fillcolor=turquoise,
		label="256:BL
mdio_data_in[0] <= #TP mdio_i;
mdio_data_in[1] <= #TP mdio_data_in[0];
mdio_data_in[2] <= #TP mdio_data_in[1];
mdio_data_\
in[3] <= #TP mdio_data_in[2];
mdio_data_in[4] <= #TP mdio_data_in[3];
mdio_data_in[5] <= #TP mdio_data_in[4];
mdio_data_in[6] <= #\
TP mdio_data_in[5];
mdio_data_in[7] <= #TP mdio_data_in[6];
mdio_data_in[8] <= #TP mdio_data_in[7];
mdio_data_in[9] <= #TP mdio_\
data_in[8];
mdio_data_in[10] <= #TP mdio_data_in[9];
mdio_data_in[11] <= #TP mdio_data_in[10];
mdio_data_in[12] <= #TP mdio_data_\
in[11];
mdio_data_in[13] <= #TP mdio_data_in[12];
mdio_data_in[14] <= #TP mdio_data_in[13];
mdio_data_in[15] <= #TP mdio_data_in[\
14];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d263d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25a7d26750>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d26a90>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a7d26dd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d35150>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a7d35490>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d357d0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a7d35b10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d35e50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a801a1d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a801a510>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a801a850>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a801ab90>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a801aed0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a801b250>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a801b590>]",
		style=filled,
		typ=Block];
	"256:BL" -> "Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"132:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a8146790>",
		fillcolor=turquoise,
		label="132:BL
trans_cnt <= #TP trans_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a81469d0>]",
		style=filled,
		typ=Block];
	"132:BL" -> "Leaf_128:AL"	 [cond="[]",
		lineno=None];
	"129:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a8146650>",
		fillcolor=springgreen,
		label="129:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"129:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a8146310>",
		fillcolor=turquoise,
		label="129:BL
trans_cnt <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8146590>]",
		style=filled,
		typ=Block];
	"129:IF" -> "129:BL"	 [cond="['reset']",
		label=reset,
		lineno=129];
	"132:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a8146a50>",
		fillcolor=springgreen,
		label="132:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"129:IF" -> "132:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=129];
	"120:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8146090>",
		fillcolor=firebrick,
		label="120:NS
mdio_data_reg <= #TP mdio_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8146090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_114:AL"	 [def_var="['mdio_data_reg']",
		label="Leaf_114:AL"];
	"120:NS" -> "Leaf_114:AL"	 [cond="[]",
		lineno=None];
	"104:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25a7d6ba10>",
		clk_sens=True,
		fillcolor=gold,
		label="104:AL",
		sens="['mgmt_clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'mdio_data_out', 'mdio_opcode', 'mdio_out_valid']"];
	"104:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d6ba50>",
		fillcolor=turquoise,
		label="104:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"104:AL" -> "104:BL"	 [cond="[]",
		lineno=None];
	"155:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a814ce10>",
		fillcolor=firebrick,
		label="155:NS
nextstate <= #TP MDIO_WRITE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a814ce10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"154:IF" -> "155:NS"	 [cond="['mdio_out_valid', 'mdio_opcode']",
		label="(mdio_out_valid & ~mdio_opcode[1])",
		lineno=154];
	"156:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d0b2d0>",
		fillcolor=springgreen,
		label="156:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"154:IF" -> "156:IF"	 [cond="['mdio_out_valid', 'mdio_opcode']",
		label="!((mdio_out_valid & ~mdio_opcode[1]))",
		lineno=154];
	"163:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0b750>",
		fillcolor=firebrick,
		label="163:NS
nextstate <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0b750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"163:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"168:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d0bcd0>",
		fillcolor=springgreen,
		label="168:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"168:IF" -> "171:NS"	 [cond="['mdio_operate_done']",
		label="!(mdio_operate_done)",
		lineno=168];
	"169:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0bc90>",
		fillcolor=firebrick,
		label="169:NS
nextstate <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0bc90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"168:IF" -> "169:NS"	 [cond="['mdio_operate_done']",
		label=mdio_operate_done,
		lineno=168];
	"118:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8150e50>",
		fillcolor=firebrick,
		label="118:NS
mdio_data_reg <= #TP mdio_data_reg << 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8150e50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"118:NS" -> "Leaf_114:AL"	 [cond="[]",
		lineno=None];
	"162:IF" -> "165:NS"	 [cond="['mdio_operate_done']",
		label="!(mdio_operate_done)",
		lineno=162];
	"162:IF" -> "163:NS"	 [cond="['mdio_operate_done']",
		label=mdio_operate_done,
		lineno=162];
	"240:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25a7d17f50>",
		clk_sens=False,
		fillcolor=gold,
		label="240:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'receiving', 'mdio_operate_done']"];
	"240:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d17fd0>",
		fillcolor=turquoise,
		label="240:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"240:AL" -> "240:BL"	 [cond="[]",
		lineno=None];
	"167:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d0b990>",
		fillcolor=turquoise,
		label="167:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"167:BL" -> "168:IF"	 [cond="[]",
		lineno=None];
	"253:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d36fd0>",
		fillcolor=springgreen,
		label="253:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"253:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d36e50>",
		fillcolor=turquoise,
		label="253:BL
mdio_data_in <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d36f90>]",
		style=filled,
		typ=Block];
	"253:IF" -> "253:BL"	 [cond="['reset']",
		label=reset,
		lineno=253];
	"256:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a801b650>",
		fillcolor=springgreen,
		label="256:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"253:IF" -> "256:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=253];
	"245:IF" -> "248:NS"	 [cond="['receiving']",
		label="!(receiving)",
		lineno=245];
	"246:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d36890>",
		fillcolor=firebrick,
		label="246:NS
mdio_in_valid <= #TP 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d36890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"245:IF" -> "246:NS"	 [cond="['receiving']",
		label=receiving,
		lineno=245];
	"178:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d16210>",
		fillcolor=firebrick,
		label="178:NS
state <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d16210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"178:NS" -> "Leaf_176:AL"	 [cond="[]",
		lineno=None];
	"220:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d17390>",
		fillcolor=springgreen,
		label="220:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"223:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d17990>",
		fillcolor=springgreen,
		label="223:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"220:IF" -> "223:IF"	 [cond="['trans_cnt']",
		label="!((trans_cnt == 45))",
		lineno=220];
	"220:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d17150>",
		fillcolor=turquoise,
		label="220:BL
mdio_t <= #TP 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d172d0>]",
		style=filled,
		typ=Block];
	"220:IF" -> "220:BL"	 [cond="['trans_cnt']",
		label="(trans_cnt == 45)",
		lineno=220];
	"129:BL" -> "Leaf_128:AL"	 [cond="[]",
		lineno=None];
	"114:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25a8150790>",
		clk_sens=False,
		fillcolor=gold,
		label="114:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['transmitting', 'reset', 'mdio_data_reg', 'mdio_data']"];
	"Leaf_104:AL" -> "114:AL";
	"155:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"132:IF" -> "132:BL"	 [cond="['transmitting']",
		label=transmitting,
		lineno=132];
	"135:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a8146c10>",
		fillcolor=turquoise,
		label="135:BL
trans_cnt <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8146bd0>]",
		style=filled,
		typ=Block];
	"132:IF" -> "135:BL"	 [cond="['transmitting']",
		label="!(transmitting)",
		lineno=132];
	"Leaf_176:AL" -> "191:AL";
	"148:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25a814c5d0>",
		clk_sens=False,
		fillcolor=gold,
		label="148:AL",
		sens="['state', 'mdio_out_valid', 'mdio_opcode', 'mdio_operate_done', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'mdio_opcode', 'mdio_operate_done', 'mdio_out_valid', 'nextstate', 'state']"];
	"Leaf_176:AL" -> "148:AL";
	"161:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25a7d0b550>",
		fillcolor=lightcyan,
		label="161:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"161:CA" -> "161:BL"	 [cond="[]",
		lineno=None];
	"227:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d17ad0>",
		fillcolor=springgreen,
		label="227:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"223:IF" -> "227:IF"	 [cond="['trans_cnt']",
		label="!((trans_cnt == 63))",
		lineno=223];
	"223:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d17750>",
		fillcolor=turquoise,
		label="223:BL
transmitting <= #TP 1'b0;
mdio_o <= #TP 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d176d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25a7d178d0>]",
		style=filled,
		typ=Block];
	"223:IF" -> "223:BL"	 [cond="['trans_cnt']",
		label="(trans_cnt == 63)",
		lineno=223];
	"153:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25a814c9d0>",
		fillcolor=lightcyan,
		label="153:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"153:CA" -> "153:BL"	 [cond="[]",
		lineno=None];
	"115:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a8150a10>",
		fillcolor=springgreen,
		label="115:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"116:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a81509d0>",
		fillcolor=firebrick,
		label="116:NS
mdio_data_reg <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a81509d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"115:IF" -> "116:NS"	 [cond="['reset']",
		label=reset,
		lineno=115];
	"117:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a8150f10>",
		fillcolor=springgreen,
		label="117:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"115:IF" -> "117:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=115];
	"192:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d16e10>",
		fillcolor=turquoise,
		label="192:BL
mdio_o <= #TP 0;
mdio_t <= #TP 0;
transmitting <= #TP 0;
receiving <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d16a10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25a7d16bd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d16dd0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a7d16f90>]",
		style=filled,
		typ=Block];
	"192:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"215:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d0dfd0>",
		fillcolor=turquoise,
		label="215:BL
mdio_o <= #TP mdio_data_reg[62];
mdio_t <= #TP 1'b0;
transmitting <= #TP 1'b1;
receiving <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0d990>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25a7d0db50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0dd50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a7d0df10>]",
		style=filled,
		typ=Block];
	"215:BL" -> "220:IF"	 [cond="[]",
		lineno=None];
	"253:BL" -> "Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"79:BL" -> "80:IF"	 [cond="[]",
		lineno=None];
	"Leaf_114:AL" -> "114:AL";
	"Leaf_114:AL" -> "191:AL";
	"227:IF" -> "227:BL"	 [cond="['trans_cnt']",
		label="(trans_cnt >= 46)",
		lineno=227];
	"90:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a8016f10>",
		fillcolor=springgreen,
		label="90:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"90:IF" -> "91:NS"	 [cond="['reset']",
		label=reset,
		lineno=90];
	"90:IF" -> "92:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=90];
	"241:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d36210>",
		fillcolor=springgreen,
		label="241:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"241:IF" -> "242:NS"	 [cond="['reset']",
		label=reset,
		lineno=241];
	"241:IF" -> "243:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=241];
	"Leaf_79:AL"	 [def_var="['clk_cnt']",
		label="Leaf_79:AL"];
	"Leaf_79:AL" -> "89:AL";
	"Leaf_79:AL" -> "79:AL";
	"114:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a8150810>",
		fillcolor=turquoise,
		label="114:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"114:AL" -> "114:BL"	 [cond="[]",
		lineno=None];
	"Leaf_191:AL" -> "128:AL";
	"Leaf_191:AL" -> "240:AL";
	"Leaf_191:AL" -> "114:AL";
	"Leaf_191:AL" -> "252:AL";
	"223:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"256:IF" -> "256:BL"	 [cond="['receiving']",
		label=receiving,
		lineno=256];
	"275:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a801b7d0>",
		fillcolor=firebrick,
		label="275:NS
mdio_data_in <= #TP mdio_data_in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a801b7d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"256:IF" -> "275:NS"	 [cond="['receiving']",
		label="!(receiving)",
		lineno=256];
	"150:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a814c7d0>",
		fillcolor=firebrick,
		label="150:NS
nextstate <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a814c7d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"150:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"83:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8016a90>",
		fillcolor=firebrick,
		label="83:NS
clk_cnt <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a8016a90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"82:IF" -> "83:NS"	 [cond="['clk_cnt', 'mgmt_config']",
		label="(clk_cnt == mgmt_config[4:0])",
		lineno=82];
	"85:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a80164d0>",
		fillcolor=firebrick,
		label="85:NS
clk_cnt <= #TP clk_cnt + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a80164d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"82:IF" -> "85:NS"	 [cond="['clk_cnt', 'mgmt_config']",
		label="!((clk_cnt == mgmt_config[4:0]))",
		lineno=82];
	"81:NS" -> "Leaf_79:AL"	 [cond="[]",
		lineno=None];
	"128:BL" -> "129:IF"	 [cond="[]",
		lineno=None];
	"105:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d6bd10>",
		fillcolor=springgreen,
		label="105:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"104:BL" -> "105:IF"	 [cond="[]",
		lineno=None];
	"105:IF" -> "105:BL"	 [cond="['reset']",
		label=reset,
		lineno=105];
	"108:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d6be10>",
		fillcolor=springgreen,
		label="108:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"105:IF" -> "108:IF"	 [cond="['reset']",
		label="!(reset)",
		lineno=105];
	"252:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d36d90>",
		fillcolor=turquoise,
		label="252:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"252:AL" -> "252:BL"	 [cond="[]",
		lineno=None];
	"177:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d16250>",
		fillcolor=springgreen,
		label="177:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"177:IF" -> "180:NS"	 [cond="['reset']",
		label="!(reset)",
		lineno=177];
	"177:IF" -> "178:NS"	 [cond="['reset']",
		label=reset,
		lineno=177];
	"176:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25a7d0bfd0>",
		clk_sens=False,
		fillcolor=gold,
		label="176:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'nextstate']"];
	"176:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d16090>",
		fillcolor=turquoise,
		label="176:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"176:AL" -> "176:BL"	 [cond="[]",
		lineno=None];
	"83:NS" -> "Leaf_79:AL"	 [cond="[]",
		lineno=None];
	"246:NS" -> "Leaf_240:AL"	 [cond="[]",
		lineno=None];
	"135:BL" -> "Leaf_128:AL"	 [cond="[]",
		lineno=None];
	"240:BL" -> "241:IF"	 [cond="[]",
		lineno=None];
	"148:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a814c610>",
		fillcolor=turquoise,
		label="148:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"149:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a814c850>",
		fillcolor=springgreen,
		label="149:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"148:BL" -> "149:IF"	 [cond="[]",
		lineno=None];
	"108:IF" -> "108:BL"	 [cond="['mdio_out_valid']",
		label=mdio_out_valid,
		lineno=108];
	"167:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25a7d0b590>",
		fillcolor=lightcyan,
		label="167:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"167:CA" -> "167:BL"	 [cond="[]",
		lineno=None];
	"149:IF" -> "150:NS"	 [cond="['reset']",
		label=reset,
		lineno=149];
	"152:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f25a7d0ba10>",
		fillcolor=linen,
		label="152:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"149:IF" -> "152:CS"	 [cond="['reset']",
		label="!(reset)",
		lineno=149];
	"89:BL" -> "90:IF"	 [cond="[]",
		lineno=None];
	"252:BL" -> "253:IF"	 [cond="[]",
		lineno=None];
	"211:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25a7d0d490>",
		fillcolor=springgreen,
		label="211:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"211:IF" -> "211:BL"	 [cond="['trans_cnt']",
		label="(trans_cnt == 63)",
		lineno=211];
	"85:NS" -> "Leaf_79:AL"	 [cond="[]",
		lineno=None];
	"176:BL" -> "177:IF"	 [cond="[]",
		lineno=None];
	"220:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"200:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25a7d0a790>",
		fillcolor=turquoise,
		label="200:BL
mdio_o <= #TP 1'b1;
mdio_t <= #TP 0;
receiving <= #TP 0;
transmitting <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0a3d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25a7d0a590>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25a7d0a750>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25a7d0a950>]",
		style=filled,
		typ=Block];
	"200:CA" -> "200:BL"	 [cond="[]",
		lineno=None];
	"116:NS" -> "Leaf_114:AL"	 [cond="[]",
		lineno=None];
	"275:NS" -> "Leaf_252:AL"	 [cond="[]",
		lineno=None];
	"206:BL" -> "211:IF"	 [cond="[]",
		lineno=None];
	"144:AS" -> "240:AL";
	"144:AS" -> "148:AL";
	"117:IF" -> "120:NS"	 [cond="['transmitting']",
		label="!(transmitting)",
		lineno=117];
	"117:IF" -> "118:NS"	 [cond="['transmitting']",
		label=transmitting,
		lineno=117];
	"192:IF" -> "198:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=192];
	"192:IF" -> "192:BL"	 [cond="['reset']",
		label=reset,
		lineno=192];
	"Leaf_89:AL" -> "89:AL";
	"215:CA" -> "215:BL"	 [cond="[]",
		lineno=None];
	"156:IF" -> "159:NS"	 [cond="['mdio_out_valid', 'mdio_opcode']",
		label="!((mdio_out_valid & mdio_opcode[1]))",
		lineno=156];
	"156:IF" -> "157:NS"	 [cond="['mdio_out_valid', 'mdio_opcode']",
		label="(mdio_out_valid & mdio_opcode[1])",
		lineno=156];
	"191:AL" -> "191:BL"	 [cond="[]",
		lineno=None];
	"148:AL" -> "148:BL"	 [cond="[]",
		lineno=None];
	"Leaf_148:AL" -> "176:AL";
	"Leaf_148:AL" -> "148:AL";
	"95:NS" -> "Leaf_89:AL"	 [cond="[]",
		lineno=None];
	"169:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"200:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"152:CS" -> "161:CA"	 [cond="['state']",
		label=state,
		lineno=152];
	"152:CS" -> "153:CA"	 [cond="['state']",
		label=state,
		lineno=152];
	"152:CS" -> "167:CA"	 [cond="['state']",
		label=state,
		lineno=152];
	"114:BL" -> "115:IF"	 [cond="[]",
		lineno=None];
}
