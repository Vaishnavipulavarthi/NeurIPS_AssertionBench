strict digraph "" {
	node [label="\N"];
	"215:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25c92dd6d0>",
		fillcolor=lightcyan,
		label="215:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"215:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92dd750>",
		fillcolor=turquoise,
		label="215:BL
mdio_o <= #TP mdio_data_reg[62];
mdio_t <= #TP 1'b0;
transmitting <= #TP 1'b1;
receiving <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92dd790>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25c92dda10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92ddbd0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25c92dddd0>]",
		style=filled,
		typ=Block];
	"215:CA" -> "215:BL"	 [cond="[]",
		lineno=None];
	"211:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25c92e5c10>",
		fillcolor=springgreen,
		label="211:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"211:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92e5c50>",
		fillcolor=turquoise,
		label="211:BL
transmitting <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92e5c90>]",
		style=filled,
		typ=Block];
	"211:IF" -> "211:BL"	 [cond="['trans_cnt']",
		label="(trans_cnt == 63)",
		lineno=211];
	"192:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92ef6d0>",
		fillcolor=turquoise,
		label="192:BL
mdio_o <= #TP 0;
mdio_t <= #TP 0;
transmitting <= #TP 0;
receiving <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92e5f50>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25c92ef150>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92ef310>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25c92ef510>]",
		style=filled,
		typ=Block];
	"Leaf_191:AL"	 [def_var="['transmitting', 'receiving', 'mdio_t', 'mdio_o']",
		label="Leaf_191:AL"];
	"192:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"227:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92e5090>",
		fillcolor=turquoise,
		label="227:BL
mdio_t <= #TP 1'b1;
receiving <= #TP 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92e50d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25c92e5210>]",
		style=filled,
		typ=Block];
	"227:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"198:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92ef710>",
		fillcolor=turquoise,
		label="198:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"199:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f25c92ef750>",
		fillcolor=linen,
		label="199:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"198:BL" -> "199:CS"	 [cond="[]",
		lineno=None];
	"191:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25c9279910>",
		clk_sens=False,
		fillcolor=gold,
		label="191:AL",
		sens="['mdc', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'mdio_data_reg', 'state', 'trans_cnt']"];
	"191:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c9279a90>",
		fillcolor=turquoise,
		label="191:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"191:AL" -> "191:BL"	 [cond="[]",
		lineno=None];
	"200:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92ef890>",
		fillcolor=turquoise,
		label="200:BL
mdio_o <= #TP 1'b1;
mdio_t <= #TP 0;
receiving <= #TP 0;
transmitting <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92ef8d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25c92efa90>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92efc50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25c92efe10>]",
		style=filled,
		typ=Block];
	"200:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"220:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25c92ddf90>",
		fillcolor=springgreen,
		label="220:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"220:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92e5950>",
		fillcolor=turquoise,
		label="220:BL
mdio_t <= #TP 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92e5990>]",
		style=filled,
		typ=Block];
	"220:IF" -> "220:BL"	 [cond="['trans_cnt']",
		label="(trans_cnt == 45)",
		lineno=220];
	"223:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25c92ddfd0>",
		fillcolor=springgreen,
		label="223:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"220:IF" -> "223:IF"	 [cond="['trans_cnt']",
		label="!((trans_cnt == 45))",
		lineno=220];
	"206:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92790d0>",
		fillcolor=turquoise,
		label="206:BL
transmitting <= #TP 1;
mdio_o <= #TP mdio_data_reg[62];
mdio_t <= #TP 1'b0;
receiving <= #TP 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c9279110>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25c9279310>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c9279590>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f25c9279750>]",
		style=filled,
		typ=Block];
	"206:BL" -> "211:IF"	 [cond="[]",
		lineno=None];
	"200:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25c92ef810>",
		fillcolor=lightcyan,
		label="200:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"200:CA" -> "200:BL"	 [cond="[]",
		lineno=None];
	"215:BL" -> "220:IF"	 [cond="[]",
		lineno=None];
	"223:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92e5490>",
		fillcolor=turquoise,
		label="223:BL
transmitting <= #TP 1'b0;
mdio_o <= #TP 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92e54d0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f25c92e56d0>]",
		style=filled,
		typ=Block];
	"223:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"220:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"223:IF" -> "223:BL"	 [cond="['trans_cnt']",
		label="(trans_cnt == 63)",
		lineno=223];
	"227:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25c92e5050>",
		fillcolor=springgreen,
		label="227:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"223:IF" -> "227:IF"	 [cond="['trans_cnt']",
		label="!((trans_cnt == 63))",
		lineno=223];
	"192:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25c9279ad0>",
		fillcolor=springgreen,
		label="192:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"192:IF" -> "192:BL"	 [cond="['reset']",
		label=reset,
		lineno=192];
	"192:IF" -> "198:BL"	 [cond="['reset']",
		label="!(reset)",
		lineno=192];
	"227:IF" -> "227:BL"	 [cond="['trans_cnt']",
		label="(trans_cnt >= 46)",
		lineno=227];
	"206:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25c9279050>",
		fillcolor=lightcyan,
		label="206:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"206:CA" -> "206:BL"	 [cond="[]",
		lineno=None];
	"199:CS" -> "215:CA"	 [cond="['state']",
		label=state,
		lineno=199];
	"199:CS" -> "200:CA"	 [cond="['state']",
		label=state,
		lineno=199];
	"199:CS" -> "206:CA"	 [cond="['state']",
		label=state,
		lineno=199];
	"211:BL" -> "Leaf_191:AL"	 [cond="[]",
		lineno=None];
	"191:BL" -> "192:IF"	 [cond="[]",
		lineno=None];
}
