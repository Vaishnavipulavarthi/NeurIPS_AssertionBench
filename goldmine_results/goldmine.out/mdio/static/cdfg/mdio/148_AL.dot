strict digraph "" {
	node [label="\N"];
	"171:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92d3050>",
		fillcolor=firebrick,
		label="171:NS
nextstate <= #TP MDIO_READ;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92d3050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_148:AL"	 [def_var="['nextstate']",
		label="Leaf_148:AL"];
	"171:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"154:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25c92d3dd0>",
		fillcolor=springgreen,
		label="154:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"156:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25c92d3e50>",
		fillcolor=springgreen,
		label="156:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"154:IF" -> "156:IF"	 [cond="['mdio_out_valid', 'mdio_opcode']",
		label="!((mdio_out_valid & ~mdio_opcode[1]))",
		lineno=154];
	"155:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92dd410>",
		fillcolor=firebrick,
		label="155:NS
nextstate <= #TP MDIO_WRITE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92dd410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"154:IF" -> "155:NS"	 [cond="['mdio_out_valid', 'mdio_opcode']",
		label="(mdio_out_valid & ~mdio_opcode[1])",
		lineno=154];
	"163:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92dd790>",
		fillcolor=firebrick,
		label="163:NS
nextstate <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92dd790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"163:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"168:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25c92dd950>",
		fillcolor=springgreen,
		label="168:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"168:IF" -> "171:NS"	 [cond="['mdio_operate_done']",
		label="!(mdio_operate_done)",
		lineno=168];
	"169:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92dd990>",
		fillcolor=firebrick,
		label="169:NS
nextstate <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92dd990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"168:IF" -> "169:NS"	 [cond="['mdio_operate_done']",
		label=mdio_operate_done,
		lineno=168];
	"165:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92ddbd0>",
		fillcolor=firebrick,
		label="165:NS
nextstate <= #TP MDIO_WRITE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92ddbd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"165:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"153:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92ddd90>",
		fillcolor=turquoise,
		label="153:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"153:BL" -> "154:IF"	 [cond="[]",
		lineno=None];
	"162:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25c92dddd0>",
		fillcolor=springgreen,
		label="162:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"162:IF" -> "163:NS"	 [cond="['mdio_operate_done']",
		label=mdio_operate_done,
		lineno=162];
	"162:IF" -> "165:NS"	 [cond="['mdio_operate_done']",
		label="!(mdio_operate_done)",
		lineno=162];
	"161:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92dde90>",
		fillcolor=turquoise,
		label="161:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"161:BL" -> "162:IF"	 [cond="[]",
		lineno=None];
	"148:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f25c92dded0>",
		clk_sens=False,
		fillcolor=gold,
		label="148:AL",
		sens="['state', 'mdio_out_valid', 'mdio_opcode', 'mdio_operate_done', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'mdio_opcode', 'mdio_operate_done', 'mdio_out_valid', 'nextstate', 'state']"];
	"148:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92e3310>",
		fillcolor=turquoise,
		label="148:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"148:AL" -> "148:BL"	 [cond="[]",
		lineno=None];
	"167:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f25c92e3550>",
		fillcolor=turquoise,
		label="167:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"167:BL" -> "168:IF"	 [cond="[]",
		lineno=None];
	"150:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92e3590>",
		fillcolor=firebrick,
		label="150:NS
nextstate <= #TP IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92e3590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"150:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"159:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92d3e90>",
		fillcolor=firebrick,
		label="159:NS
nextstate <= #TP nextstate;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92d3e90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"156:IF" -> "159:NS"	 [cond="['mdio_out_valid', 'mdio_opcode']",
		label="!((mdio_out_valid & mdio_opcode[1]))",
		lineno=156];
	"157:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92dd0d0>",
		fillcolor=firebrick,
		label="157:NS
nextstate <= #TP MDIO_READ;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f25c92dd0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"156:IF" -> "157:NS"	 [cond="['mdio_out_valid', 'mdio_opcode']",
		label="(mdio_out_valid & mdio_opcode[1])",
		lineno=156];
	"159:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"155:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"157:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"169:NS" -> "Leaf_148:AL"	 [cond="[]",
		lineno=None];
	"152:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f25c92e3390>",
		fillcolor=linen,
		label="152:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"161:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25c92e3450>",
		fillcolor=lightcyan,
		label="161:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"152:CS" -> "161:CA"	 [cond="['state']",
		label=state,
		lineno=152];
	"167:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25c92e34d0>",
		fillcolor=lightcyan,
		label="167:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"152:CS" -> "167:CA"	 [cond="['state']",
		label=state,
		lineno=152];
	"153:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f25c92d0e10>",
		fillcolor=lightcyan,
		label="153:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"152:CS" -> "153:CA"	 [cond="['state']",
		label=state,
		lineno=152];
	"161:CA" -> "161:BL"	 [cond="[]",
		lineno=None];
	"149:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f25c92e3350>",
		fillcolor=springgreen,
		label="149:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"148:BL" -> "149:IF"	 [cond="[]",
		lineno=None];
	"167:CA" -> "167:BL"	 [cond="[]",
		lineno=None];
	"149:IF" -> "150:NS"	 [cond="['reset']",
		label=reset,
		lineno=149];
	"149:IF" -> "152:CS"	 [cond="['reset']",
		label="!(reset)",
		lineno=149];
	"153:CA" -> "153:BL"	 [cond="[]",
		lineno=None];
}
