strict digraph "compose( ,  )" {
	node [label="\N"];
	"48:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbfca9dc290>",
		clk_sens=True,
		fillcolor=gold,
		label="48:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cs', 'wdata', 'wr']"];
	"49:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbfca5be1d0>",
		fillcolor=springgreen,
		label="49:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"48:AL" -> "49:IF"	 [cond="[]",
		lineno=None];
	"76:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbfca993c90>",
		fillcolor=firebrick,
		label="76:NS
rdata <= mem[{ raddr[ADDR-1:0] }];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbfca993c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_75:AL"	 [def_var="['rdata']",
		label="Leaf_75:AL"];
	"76:NS" -> "Leaf_75:AL"	 [cond="[]",
		lineno=None];
	"49:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbfca5be3d0>",
		fillcolor=firebrick,
		label="49:NS
mem[waddr[ADDR-1:0]] <= wdata[WIDTH-1:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbfca5be3d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_48:AL"	 [def_var="['mem']",
		label="Leaf_48:AL"];
	"49:NS" -> "Leaf_48:AL"	 [cond="[]",
		lineno=None];
	"75:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbfca993850>",
		clk_sens=True,
		fillcolor=gold,
		label="75:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rd', 'cs', 'raddr', 'mem']"];
	"Leaf_48:AL" -> "75:AL";
	"69:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7fbfca993290>",
		def_var="['tmp_rdata']",
		fillcolor=deepskyblue,
		label="69:AS
tmp_rdata = (l_cycle)? mem[{ l_raddr[ADDR-1:0] }] : { WIDTH{ 1'b1 } };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['l_cycle', 'mem', 'l_raddr', 'WIDTH']"];
	"Leaf_48:AL" -> "69:AS";
	"76:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbfca993cd0>",
		fillcolor=springgreen,
		label="76:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"76:IF" -> "76:NS"	 [cond="['rd', 'cs']",
		label="(rd && cs)",
		lineno=76];
	"77:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbfca993f10>",
		fillcolor=firebrick,
		label="77:NS
rdata <= { WIDTH{ 1'b1 } };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbfca993f10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"76:IF" -> "77:NS"	 [cond="['rd', 'cs']",
		label="!((rd && cs))",
		lineno=76];
	"75:AL" -> "76:IF"	 [cond="[]",
		lineno=None];
	"Leaf_70:AL"	 [def_var="['rdata']",
		label="Leaf_70:AL"];
	"70:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbfca9934d0>",
		clk_sens=False,
		fillcolor=gold,
		label="70:AL",
		sens="['tmp_rdata']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['tmp_rdata']"];
	"69:AS" -> "70:AL";
	"Leaf_54:AL"	 [def_var="['l_cycle', 'l_raddr']",
		label="Leaf_54:AL"];
	"Leaf_54:AL" -> "69:AS";
	"54:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fbfca5be850>",
		clk_sens=True,
		fillcolor=gold,
		label="54:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rd', 'cs', 'raddr']"];
	"55:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fbfca5be890>",
		fillcolor=turquoise,
		label="55:BL
l_raddr <= raddr;
l_cycle <= rd && cs;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbfca5be910>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7fbfca5bead0>]",
		style=filled,
		typ=Block];
	"54:AL" -> "55:BL"	 [cond="[]",
		lineno=None];
	"70:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbfca9935d0>",
		fillcolor=cadetblue,
		label="70:BS
rdata = tmp_rdata;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbfca9935d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"70:AL" -> "70:BS"	 [cond="[]",
		lineno=None];
	"49:IF" -> "49:NS"	 [cond="['wr', 'cs']",
		label="(wr && cs)",
		lineno=49];
	"55:BL" -> "Leaf_54:AL"	 [cond="[]",
		lineno=None];
	"77:NS" -> "Leaf_75:AL"	 [cond="[]",
		lineno=None];
	"70:BS" -> "Leaf_70:AL"	 [cond="[]",
		lineno=None];
}
