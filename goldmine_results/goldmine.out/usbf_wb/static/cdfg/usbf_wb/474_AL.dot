strict digraph "" {
	node [label="\N"];
	"474:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f7bca951b90>",
		clk_sens=False,
		fillcolor=gold,
		label="474:AL",
		sens="['state', 'wb_req_s1', 'wb_addr_i', 'ma_ack', 'wb_we_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['wb_req_s1', 'wb_we_i', 'state', 'wb_addr_i', 'ma_ack']"];
	"475:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca951e90>",
		fillcolor=turquoise,
		label="475:BL
next_state = state;
ma_req = 1'b0;
ma_we = 1'b0;
wb_ack_d = 1'b0;
rf_re = 1'b0;
rf_we_d = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca951ed0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca954090>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca9541d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca954310>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca954450>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca954590>]",
		style=filled,
		typ=Block];
	"474:AL" -> "475:BL"	 [cond="[]",
		lineno=None];
	"524:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca968510>",
		fillcolor=turquoise,
		label="524:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"525:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7bca968550>",
		fillcolor=springgreen,
		label="525:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"524:BL" -> "525:IF"	 [cond="[]",
		lineno=None];
	"503:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca95e850>",
		fillcolor=turquoise,
		label="503:BL
rf_re = 1'b1;
next_state = W0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca95e890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca95e9d0>]",
		style=filled,
		typ=Block];
	"Leaf_474:AL"	 [def_var="['wb_ack_d', 'ma_we', 'rf_we_d', 'ma_req', 'rf_re', 'next_state']",
		label="Leaf_474:AL"];
	"503:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"536:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7bca968a50>",
		fillcolor=lightcyan,
		label="536:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"537:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca968ad0>",
		fillcolor=turquoise,
		label="537:BL
wb_ack_d = 1'b1;
next_state = W1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca968b10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca968c50>]",
		style=filled,
		typ=Block];
	"536:CA" -> "537:BL"	 [cond="[]",
		lineno=None];
	"523:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7bca968490>",
		fillcolor=lightcyan,
		label="523:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"523:CA" -> "524:BL"	 [cond="[]",
		lineno=None];
	"543:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca968e10>",
		fillcolor=turquoise,
		label="543:BL
next_state = W2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca968e50>]",
		style=filled,
		typ=Block];
	"543:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"483:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f7bca9546d0>",
		fillcolor=linen,
		label="483:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"475:BL" -> "483:CS"	 [cond="[]",
		lineno=None];
	"530:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca968590>",
		fillcolor=turquoise,
		label="530:BL
wb_ack_d = 1'b1;
next_state = W1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca9685d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca968710>]",
		style=filled,
		typ=Block];
	"530:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"526:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca968850>",
		fillcolor=turquoise,
		label="526:BL
ma_req = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca968890>]",
		style=filled,
		typ=Block];
	"526:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"547:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7bca968fd0>",
		fillcolor=lightcyan,
		label="547:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"548:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca973090>",
		fillcolor=turquoise,
		label="548:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca9730d0>]",
		style=filled,
		typ=Block];
	"547:CA" -> "548:BL"	 [cond="[]",
		lineno=None];
	"498:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca95e350>",
		fillcolor=turquoise,
		label="498:BL
rf_we_d = 1'b1;
next_state = W0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca95e390>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca95e4d0>]",
		style=filled,
		typ=Block];
	"498:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"511:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7bca95ee10>",
		fillcolor=springgreen,
		label="511:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"512:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca968150>",
		fillcolor=turquoise,
		label="512:BL
ma_req = 1'b1;
ma_we = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca968190>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca9682d0>]",
		style=filled,
		typ=Block];
	"511:IF" -> "512:BL"	 [cond="['ma_ack']",
		label="(!ma_ack)",
		lineno=511];
	"517:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca95ee50>",
		fillcolor=turquoise,
		label="517:BL
wb_ack_d = 1'b1;
next_state = W1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca95ee90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca95efd0>]",
		style=filled,
		typ=Block];
	"511:IF" -> "517:BL"	 [cond="['ma_ack']",
		label="!((!ma_ack))",
		lineno=511];
	"542:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7bca968d90>",
		fillcolor=lightcyan,
		label="542:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"542:CA" -> "543:BL"	 [cond="[]",
		lineno=None];
	"487:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca954890>",
		fillcolor=turquoise,
		label="487:BL
ma_req = 1'b1;
ma_we = 1'b1;
next_state = MA_WR;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca9548d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca954a10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca954ad0>]",
		style=filled,
		typ=Block];
	"487:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"537:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"493:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca954e10>",
		fillcolor=turquoise,
		label="493:BL
ma_req = 1'b1;
next_state = MA_RD;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca954e50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7bca954f90>]",
		style=filled,
		typ=Block];
	"493:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"502:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7bca95e810>",
		fillcolor=springgreen,
		label="502:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"502:IF" -> "503:BL"	 [cond="['wb_req_s1', 'wb_addr_i', 'wb_we_i']",
		label="(wb_req_s1 && !wb_addr_i[17] && !wb_we_i)",
		lineno=502];
	"512:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"485:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca954810>",
		fillcolor=turquoise,
		label="485:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"485:BL" -> "502:IF"	 [cond="[]",
		lineno=None];
	"497:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7bca95e310>",
		fillcolor=springgreen,
		label="497:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"485:BL" -> "497:IF"	 [cond="[]",
		lineno=None];
	"492:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7bca954dd0>",
		fillcolor=springgreen,
		label="492:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"485:BL" -> "492:IF"	 [cond="[]",
		lineno=None];
	"486:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7bca954850>",
		fillcolor=springgreen,
		label="486:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"485:BL" -> "486:IF"	 [cond="[]",
		lineno=None];
	"548:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"497:IF" -> "498:BL"	 [cond="['wb_req_s1', 'wb_addr_i', 'wb_we_i']",
		label="(wb_req_s1 && !wb_addr_i[17] && wb_we_i)",
		lineno=497];
	"517:BL" -> "Leaf_474:AL"	 [cond="[]",
		lineno=None];
	"525:IF" -> "530:BL"	 [cond="['ma_ack']",
		label="!((!ma_ack))",
		lineno=525];
	"525:IF" -> "526:BL"	 [cond="['ma_ack']",
		label="(!ma_ack)",
		lineno=525];
	"492:IF" -> "493:BL"	 [cond="['wb_req_s1', 'wb_addr_i', 'wb_we_i']",
		label="(wb_req_s1 && wb_addr_i[17] && !wb_we_i)",
		lineno=492];
	"510:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f7bca95edd0>",
		fillcolor=turquoise,
		label="510:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"510:BL" -> "511:IF"	 [cond="[]",
		lineno=None];
	"483:CS" -> "536:CA"	 [cond="['state']",
		label=state,
		lineno=483];
	"483:CS" -> "523:CA"	 [cond="['state']",
		label=state,
		lineno=483];
	"483:CS" -> "547:CA"	 [cond="['state']",
		label=state,
		lineno=483];
	"483:CS" -> "542:CA"	 [cond="['state']",
		label=state,
		lineno=483];
	"484:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7bca954790>",
		fillcolor=lightcyan,
		label="484:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "484:CA"	 [cond="['state']",
		label=state,
		lineno=483];
	"509:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f7bca95ed50>",
		fillcolor=lightcyan,
		label="509:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"483:CS" -> "509:CA"	 [cond="['state']",
		label=state,
		lineno=483];
	"484:CA" -> "485:BL"	 [cond="[]",
		lineno=None];
	"509:CA" -> "510:BL"	 [cond="[]",
		lineno=None];
	"486:IF" -> "487:BL"	 [cond="['wb_req_s1', 'wb_addr_i', 'wb_we_i']",
		label="(wb_req_s1 && wb_addr_i[17] && wb_we_i)",
		lineno=486];
}
