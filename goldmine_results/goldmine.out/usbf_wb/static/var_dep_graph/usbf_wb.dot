digraph "" {
	wb_ack_o -> wb_ack_o	 [weight=1.0];
	wb_req_s1 -> ma_req	 [weight=2.0];
	wb_req_s1 -> ma_we	 [weight=1.0];
	wb_req_s1 -> rf_re	 [weight=1.0];
	wb_req_s1 -> next_state	 [weight=4.0];
	wb_req_s1 -> rf_we_d	 [weight=1.0];
	wb_cyc_i -> wb_req_s1	 [weight=1.0];
	wb_ack_d -> wb_ack_s1	 [weight=1.0];
	state -> ma_req	 [weight=4.0];
	state -> ma_we	 [weight=2.0];
	state -> wb_ack_d	 [weight=3.0];
	state -> rf_re	 [weight=1.0];
	state -> next_state	 [weight=10.0];
	state -> rf_we_d	 [weight=1.0];
	wb_ack_s1a -> wb_ack_s2	 [weight=1.0];
	rf_din -> wb_data_o	 [weight=1.0];
	wb_data_i -> ma_dout	 [weight=1.0];
	wb_data_i -> rf_dout	 [weight=1.0];
	wb_addr_i -> ma_req	 [weight=2.0];
	wb_addr_i -> ma_we	 [weight=1.0];
	wb_addr_i -> rf_re	 [weight=1.0];
	wb_addr_i -> wb_data_o	 [weight=2.0];
	wb_addr_i -> next_state	 [weight=4.0];
	wb_addr_i -> ma_adr	 [weight=1.0];
	wb_addr_i -> rf_we_d	 [weight=1.0];
	rst -> state	 [weight=2.0];
	ma_ack -> ma_req	 [weight=2.0];
	ma_ack -> ma_we	 [weight=1.0];
	ma_ack -> wb_ack_d	 [weight=2.0];
	ma_ack -> next_state	 [weight=2.0];
	next_state -> state	 [weight=1.0];
	wb_we_i -> ma_req	 [weight=2.0];
	wb_we_i -> ma_we	 [weight=1.0];
	wb_we_i -> rf_re	 [weight=1.0];
	wb_we_i -> next_state	 [weight=4.0];
	wb_we_i -> rf_we_d	 [weight=1.0];
	ma_din -> wb_data_o	 [weight=1.0];
	wb_stb_i -> wb_req_s1	 [weight=1.0];
	rf_we_d -> rf_we	 [weight=1.0];
	wb_ack_s1 -> wb_ack_o	 [weight=1.0];
	wb_ack_s1 -> wb_ack_s1a	 [weight=1.0];
	wb_ack_s2 -> wb_ack_o	 [weight=1.0];
}
