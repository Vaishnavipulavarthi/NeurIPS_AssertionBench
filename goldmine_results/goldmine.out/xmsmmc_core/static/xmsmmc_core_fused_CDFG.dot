strict digraph "compose( ,  )" {
	node [label="\N"];
	"341:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146a5dbd0>",
		def_var="['config_request']",
		fillcolor=deepskyblue,
		label="341:AS
config_request = !init & !done;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['init', 'done']"];
	"356:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146a5ded0>",
		def_var="['int_reset']",
		fillcolor=deepskyblue,
		label="356:AS
int_reset = config_request;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['config_request']"];
	"341:AS" -> "356:AS";
	"402:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f114661c950>",
		clk_sens=False,
		fillcolor=gold,
		label="402:AL",
		sens="['clk_mmc', 'int_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cmd_state_next', 'int_reset']"];
	"403:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f114661ca50>",
		fillcolor=springgreen,
		label="403:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"402:AL" -> "403:IF"	 [cond="[]",
		lineno=None];
	"mmc_cmd_select_i.152:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f114667f910>",
		def_var="['crc_bit']",
		fillcolor=deepskyblue,
		label="mmc_cmd_select_i.152:AS
crc_bit = (bit[5:0] == 6'b101000) & ((cmd == 4'b0000) | (cmd == 4'b0001) | (cmd == 4'b0111)) | (bit[5:0] == \
6'b101001) & ((cmd == 4'b0010) | (cmd == 4'b0011) | (cmd == 4'b0111) | (cmd == 4'b1011)) | (bit[5:0] == 6'b101010) & ((cmd == 4'\
b0001) | (cmd == 4'b0011) | (cmd == 4'b1011)) | (bit[5:0] == 6'b101011) & ((cmd == 4'b0000) | (cmd == 4'b0011) | (cmd == 4'b0111) | (\
cmd == 4'b1011)) | (bit[5:0] == 6'b101100) & ((cmd == 4'b0001) | (cmd == 4'b0010) | (cmd == 4'b0011) | (cmd == 4'b0111)) | (bit[\
5:0] == 6'b101101) & ((cmd == 4'b0000) | (cmd == 4'b0001) | (cmd == 4'b0010) | (cmd == 4'b0011) | (cmd == 4'b0111) | (cmd == 4'b1011)) | (\
bit[5:0] == 6'b101110) & ((cmd == 4'b0001) | (cmd == 4'b0011) | (cmd == 4'b1011));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bit', 'cmd', 'cmd', 'cmd', 'bit', 'cmd', 'cmd', 'cmd', 'cmd', 'bit', 'cmd', 'cmd', 'cmd', 'bit', 'cmd', 'cmd', 'cmd', 'cmd', '\
bit', 'cmd', 'cmd', 'cmd', 'cmd', 'bit', 'cmd', 'cmd', 'cmd', 'cmd', 'cmd', 'cmd', 'bit', 'cmd', 'cmd', 'cmd']"];
	"mmc_cmd_select_i.217:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146a60c90>",
		def_var="['data']",
		fillcolor=deepskyblue,
		label="mmc_cmd_select_i.217:AS
data = start_bit | cmd[0] & (bit[5:0] == 6'b000111) | cmd[1] & (bit[5:0] == 6'b000110) | cmd[2] & (bit[5:\
0] == 6'b000101) | cmd[3] & (bit[5:0] == 6'b000100) | CMD1_dat | arg16_bit & ((cmd == 4'b0011) | (cmd == 4'b0111)) | crc_bit | stop_\
bit;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['start_bit', 'cmd', 'bit', 'cmd', 'bit', 'cmd', 'bit', 'cmd', 'bit', 'CMD1_dat', 'arg16_bit', 'cmd', 'cmd', 'crc_bit', 'stop_bit']"];
	"mmc_cmd_select_i.152:AS" -> "mmc_cmd_select_i.217:AS";
	"precaler_i.258:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1146a548d0>",
		fillcolor=firebrick,
		label="precaler_i.258:NS
prescaler <= 4'b0000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1146a548d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"precaler_i.Leaf_256:AL"	 [def_var="['prescaler']",
		label="precaler_i.Leaf_256:AL"];
	"precaler_i.258:NS" -> "precaler_i.Leaf_256:AL"	 [cond="[]",
		lineno=None];
	"precaler_i.257:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146a54890>",
		fillcolor=springgreen,
		label="precaler_i.257:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"precaler_i.257:IF" -> "precaler_i.258:NS"	 [cond="['rst']",
		label=rst,
		lineno=257];
	"precaler_i.260:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1146a54ad0>",
		fillcolor=firebrick,
		label="precaler_i.260:NS
prescaler <= prescaler + 4'b0001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1146a54ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"precaler_i.257:IF" -> "precaler_i.260:NS"	 [cond="['rst']",
		label="!(rst)",
		lineno=257];
	"477:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146647690>",
		fillcolor=cadetblue,
		label="477:BS
cmd_state_next = 4'b1101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146647690>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_415:AL"	 [def_var="['cmd_state_next']",
		label="Leaf_415:AL"];
	"477:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"mmc_cmd_select_i.136:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f114667e090>",
		def_var="['stop_bit']",
		fillcolor=deepskyblue,
		label="mmc_cmd_select_i.136:AS
stop_bit = bit[7:0] == 8'b00101111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bit']"];
	"mmc_cmd_select_i.136:AS" -> "mmc_cmd_select_i.217:AS";
	"446:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f11466413d0>",
		fillcolor=turquoise,
		label="446:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"447:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146641510>",
		fillcolor=springgreen,
		label="447:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"446:BL" -> "447:IF"	 [cond="[]",
		lineno=None];
	"461:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1146641cd0>",
		fillcolor=turquoise,
		label="461:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"462:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146641ed0>",
		fillcolor=springgreen,
		label="462:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"461:BL" -> "462:IF"	 [cond="[]",
		lineno=None];
	"466:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1146647050>",
		fillcolor=turquoise,
		label="466:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"467:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146647250>",
		fillcolor=springgreen,
		label="467:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"466:BL" -> "467:IF"	 [cond="[]",
		lineno=None];
	"mmc_cmd_select_i.229:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146a60e50>",
		def_var="['cmd_active']",
		fillcolor=deepskyblue,
		label="mmc_cmd_select_i.229:AS
cmd_active = cmd_bits;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cmd_bits']"];
	"524:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f11466463d0>",
		def_var="['mmc_cmd']",
		fillcolor=deepskyblue,
		label="524:AS
mmc_cmd = (!dis & cmd_bits)? cmd_data_out : 1'bz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dis', 'cmd_bits', 'cmd_data_out']"];
	"mmc_cmd_select_i.229:AS" -> "524:AS";
	"491:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f11466479d0>",
		fillcolor=turquoise,
		label="491:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"491:BL" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"431:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1146628a90>",
		fillcolor=lightcyan,
		label="431:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"432:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1146628f90>",
		fillcolor=turquoise,
		label="432:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"431:CA" -> "432:BL"	 [cond="[]",
		lineno=None];
	"447:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146641610>",
		fillcolor=cadetblue,
		label="447:BS
cmd_state_next = 4'b0010;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146641610>]",
		style=filled,
		typ=BlockingSubstitution];
	"447:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"415:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1146628150>",
		clk_sens=False,
		fillcolor=gold,
		label="415:AL",
		sens="['cmd_state', 'done', 'cmd_done', 'init', 'mmc_cmd', 'cmd1_resp_start_bit', 'cmd1_resp_busy_bit']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['cmd_done', 'cmd1_resp_busy_bit', 'cmd_state', 'init', 'cmd1_resp_start_bit', 'mmc_cmd', 'done']"];
	"416:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1146628290>",
		fillcolor=turquoise,
		label="416:BL
cmd_state_next = cmd_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146628210>]",
		style=filled,
		typ=Block];
	"415:AL" -> "416:BL"	 [cond="[]",
		lineno=None];
	"406:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f114661cc50>",
		fillcolor=firebrick,
		label="406:NS
cmd_state <= cmd_state_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f114661cc50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_402:AL"	 [def_var="['cmd_state']",
		label="Leaf_402:AL"];
	"406:NS" -> "Leaf_402:AL"	 [cond="[]",
		lineno=None];
	"419:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f11466474d0>",
		fillcolor=linen,
		label="419:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"419:CS" -> "431:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"490:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1146647a50>",
		fillcolor=lightcyan,
		label="490:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"419:CS" -> "490:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"465:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1146647110>",
		fillcolor=lightcyan,
		label="465:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"419:CS" -> "465:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"426:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f11466287d0>",
		fillcolor=lightcyan,
		label="426:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"419:CS" -> "426:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"455:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1146641a50>",
		fillcolor=lightcyan,
		label="455:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"419:CS" -> "455:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"450:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1146641710>",
		fillcolor=lightcyan,
		label="450:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"419:CS" -> "450:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"484:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f11466478d0>",
		fillcolor=lightcyan,
		label="484:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"419:CS" -> "484:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"421:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f11466283d0>",
		fillcolor=lightcyan,
		label="421:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"419:CS" -> "421:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"474:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1146647410>",
		fillcolor=lightcyan,
		label="474:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"419:CS" -> "474:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"460:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1146641d90>",
		fillcolor=lightcyan,
		label="460:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"419:CS" -> "460:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"445:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f1146641310>",
		fillcolor=lightcyan,
		label="445:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"419:CS" -> "445:CA"	 [cond="['cmd_state']",
		label=cmd_state,
		lineno=419];
	"475:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1146647710>",
		fillcolor=turquoise,
		label="475:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"479:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146647810>",
		fillcolor=springgreen,
		label="479:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"475:BL" -> "479:IF"	 [cond="[]",
		lineno=None];
	"476:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146647590>",
		fillcolor=springgreen,
		label="476:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"475:BL" -> "476:IF"	 [cond="[]",
		lineno=None];
	"Leaf_402:AL" -> "415:AL";
	"528:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146646890>",
		def_var="['error']",
		fillcolor=deepskyblue,
		label="528:AS
error = cmd_state == 4'b1110;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cmd_state']"];
	"Leaf_402:AL" -> "528:AS";
	"501:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146647c10>",
		def_var="['mode_transfer']",
		fillcolor=deepskyblue,
		label="501:AS
mode_transfer = cmd_state == 4'b1100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cmd_state']"];
	"Leaf_402:AL" -> "501:AS";
	"490:CA" -> "491:BL"	 [cond="[]",
		lineno=None];
	"378:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146609990>",
		fillcolor=springgreen,
		label="378:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"379:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f11466098d0>",
		fillcolor=firebrick,
		label="379:NS
counter_command_bits <= 8'b00000000;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f11466098d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"378:IF" -> "379:NS"	 [cond="['int_reset']",
		label=int_reset,
		lineno=378];
	"381:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1146609b50>",
		fillcolor=firebrick,
		label="381:NS
counter_command_bits <= counter_command_bits + 8'b00000001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1146609b50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"378:IF" -> "381:NS"	 [cond="['int_reset']",
		label="!(int_reset)",
		lineno=378];
	"423:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f11466285d0>",
		fillcolor=springgreen,
		label="423:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"423:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f11466286d0>",
		fillcolor=cadetblue,
		label="423:BS
cmd_state_next = 4'b0000;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f11466286d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"423:IF" -> "423:BS"	 [cond="['cmd_done', 'init']",
		label="(cmd_done & init)",
		lineno=423];
	"465:CA" -> "466:BL"	 [cond="[]",
		lineno=None];
	"467:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146647350>",
		fillcolor=cadetblue,
		label="467:BS
cmd_state_next = 4'b1100;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146647350>]",
		style=filled,
		typ=BlockingSubstitution];
	"467:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"427:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1146628790>",
		fillcolor=turquoise,
		label="427:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"426:CA" -> "427:BL"	 [cond="[]",
		lineno=None];
	"480:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146647910>",
		fillcolor=cadetblue,
		label="480:BS
cmd_state_next = 4'b1110;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146647910>]",
		style=filled,
		typ=BlockingSubstitution];
	"479:IF" -> "480:BS"	 [cond="['init']",
		label="(!init)",
		lineno=479];
	"452:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146641850>",
		fillcolor=springgreen,
		label="452:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"452:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146641950>",
		fillcolor=cadetblue,
		label="452:BS
cmd_state_next = 4'b0011;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146641950>]",
		style=filled,
		typ=BlockingSubstitution];
	"452:IF" -> "452:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=452];
	"395:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f114661c410>",
		def_var="['cmd1_resp_start_bit']",
		fillcolor=deepskyblue,
		label="395:AS
cmd1_resp_start_bit = counter_command_bits[7:0] == 8'b00110101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['counter_command_bits']"];
	"395:AS" -> "415:AL";
	"451:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1146641650>",
		fillcolor=turquoise,
		label="451:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"451:BL" -> "452:IF"	 [cond="[]",
		lineno=None];
	"404:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f114661ca90>",
		fillcolor=firebrick,
		label="404:NS
cmd_state <= 4'b1111;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f114661ca90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"404:NS" -> "Leaf_402:AL"	 [cond="[]",
		lineno=None];
	"423:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"456:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1146641990>",
		fillcolor=turquoise,
		label="456:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"455:CA" -> "456:BL"	 [cond="[]",
		lineno=None];
	"416:BL" -> "419:CS"	 [cond="[]",
		lineno=None];
	"436:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146628f10>",
		fillcolor=cadetblue,
		label="436:BS
cmd_state_next = 4'b1110;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146628f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"436:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"450:CA" -> "451:BL"	 [cond="[]",
		lineno=None];
	"452:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"485:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f11466473d0>",
		fillcolor=turquoise,
		label="485:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"484:CA" -> "485:BL"	 [cond="[]",
		lineno=None];
	"403:IF" -> "406:NS"	 [cond="['int_reset']",
		label="!(int_reset)",
		lineno=403];
	"403:IF" -> "404:NS"	 [cond="['int_reset']",
		label=int_reset,
		lineno=403];
	"428:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146628a50>",
		fillcolor=cadetblue,
		label="428:BS
cmd_state_next = 4'b0001;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146628a50>]",
		style=filled,
		typ=BlockingSubstitution];
	"428:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"mmc_cmd_select_i.199:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f114667cd90>",
		def_var="['CMD1_dat']",
		fillcolor=deepskyblue,
		label="mmc_cmd_select_i.199:AS
CMD1_dat = (cmd == 4'b0001) & ((bit[5:0] == 6'b001000) | (bit[5:0] == 6'b010000) | (bit[5:0] == 6'b010001) | (\
bit[5:0] == 6'b010010) | (bit[5:0] == 6'b010011) | (bit[5:0] == 6'b010100) | (bit[5:0] == 6'b010101) | (bit[5:0] == 6'b010110) | (\
bit[5:0] == 6'b010111) | (bit[5:0] == 6'b011000));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cmd', 'bit', 'bit', 'bit', 'bit', 'bit', 'bit', 'bit', 'bit', 'bit', 'bit']"];
	"mmc_cmd_select_i.199:AS" -> "mmc_cmd_select_i.217:AS";
	"480:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"356:AS" -> "402:AL";
	"377:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1146609750>",
		clk_sens=False,
		fillcolor=gold,
		label="377:AL",
		sens="['clk_mmc', 'int_reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['counter_command_bits', 'int_reset']"];
	"356:AS" -> "377:AL";
	"525:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146646750>",
		def_var="['mmc_clk']",
		fillcolor=deepskyblue,
		label="525:AS
mmc_clk = (!dis)? (int_reset)? 1'b0 : clk_mmc : 1'bz;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dis', 'int_reset', 'clk_mmc']"];
	"356:AS" -> "525:AS";
	"442:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146641350>",
		fillcolor=cadetblue,
		label="442:BS
cmd_state_next = 4'b1001;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146641350>]",
		style=filled,
		typ=BlockingSubstitution];
	"442:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"428:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146628950>",
		fillcolor=springgreen,
		label="428:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"427:BL" -> "428:IF"	 [cond="[]",
		lineno=None];
	"524:AS" -> "415:AL";
	"457:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146641b90>",
		fillcolor=springgreen,
		label="457:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"456:BL" -> "457:IF"	 [cond="[]",
		lineno=None];
	"377:AL" -> "378:IF"	 [cond="[]",
		lineno=None];
	"457:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146641c90>",
		fillcolor=cadetblue,
		label="457:BS
cmd_state_next = 4'b0111;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146641c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"457:IF" -> "457:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=457];
	"392:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f114661c110>",
		def_var="['cmd_done']",
		fillcolor=deepskyblue,
		label="392:AS
cmd_done = counter_command_bits == 8'b11111111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['counter_command_bits']"];
	"392:AS" -> "415:AL";
	"476:IF" -> "477:BS"	 [cond="['done']",
		label=done,
		lineno=476];
	"422:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f1146628390>",
		fillcolor=turquoise,
		label="422:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"421:CA" -> "422:BL"	 [cond="[]",
		lineno=None];
	"435:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146628dd0>",
		fillcolor=springgreen,
		label="435:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"432:BL" -> "435:IF"	 [cond="[]",
		lineno=None];
	"441:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1146641210>",
		fillcolor=springgreen,
		label="441:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"432:BL" -> "441:IF"	 [cond="[]",
		lineno=None];
	"precaler_i.266:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146a54c10>",
		def_var="['mmc_clk']",
		fillcolor=deepskyblue,
		label="precaler_i.266:AS
mmc_clk = (mode_transfer)? sys_clk : prescaler[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mode_transfer', 'sys_clk', 'prescaler']"];
	"501:AS" -> "precaler_i.266:AS";
	"Leaf_415:AL" -> "402:AL";
	"462:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146641fd0>",
		fillcolor=cadetblue,
		label="462:BS
cmd_state_next = 4'b1011;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1146641fd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"462:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"397:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f114661c710>",
		def_var="['cmd1_resp_busy_bit']",
		fillcolor=deepskyblue,
		label="397:AS
cmd1_resp_busy_bit = counter_command_bits[7:0] == 8'b00111101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['counter_command_bits']"];
	"397:AS" -> "415:AL";
	"428:IF" -> "428:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=428];
	"mmc_cmd_select_i.132:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146d50e10>",
		def_var="['arg16_bit']",
		fillcolor=deepskyblue,
		label="mmc_cmd_select_i.132:AS
arg16_bit = bit[7:0] == 8'b00010111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bit']"];
	"mmc_cmd_select_i.132:AS" -> "mmc_cmd_select_i.217:AS";
	"mmc_cmd_select_i.217:AS" -> "524:AS";
	"485:BL" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"467:IF" -> "467:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=467];
	"precaler_i.256:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f1146a54750>",
		clk_sens=False,
		fillcolor=gold,
		label="precaler_i.256:AL",
		sens="['sys_clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'prescaler']"];
	"precaler_i.Leaf_256:AL" -> "precaler_i.256:AL";
	"precaler_i.Leaf_256:AL" -> "precaler_i.266:AS";
	"474:CA" -> "475:BL"	 [cond="[]",
		lineno=None];
	"mmc_cmd_select_i.126:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146a6f290>",
		def_var="['cmd_bits']",
		fillcolor=deepskyblue,
		label="mmc_cmd_select_i.126:AS
cmd_bits = (bit[7:6] == 2'b00) & (bit[5:4] != 2'b11) & (cmd[3:2] != 2'b11);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bit', 'bit', 'cmd']"];
	"mmc_cmd_select_i.126:AS" -> "mmc_cmd_select_i.229:AS";
	"422:BL" -> "423:IF"	 [cond="[]",
		lineno=None];
	"precaler_i.256:AL" -> "precaler_i.257:IF"	 [cond="[]",
		lineno=None];
	"460:CA" -> "461:BL"	 [cond="[]",
		lineno=None];
	"Leaf_377:AL"	 [def_var="['counter_command_bits']",
		label="Leaf_377:AL"];
	"379:NS" -> "Leaf_377:AL"	 [cond="[]",
		lineno=None];
	"mmc_cmd_select_i.130:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f1146e11bd0>",
		def_var="['start_bit']",
		fillcolor=deepskyblue,
		label="mmc_cmd_select_i.130:AS
start_bit = bit[7:0] == 8'b00000001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['bit']"];
	"mmc_cmd_select_i.130:AS" -> "mmc_cmd_select_i.217:AS";
	"447:IF" -> "447:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=447];
	"381:NS" -> "Leaf_377:AL"	 [cond="[]",
		lineno=None];
	"457:BS" -> "Leaf_415:AL"	 [cond="[]",
		lineno=None];
	"precaler_i.266:AS" -> "525:AS";
	"445:CA" -> "446:BL"	 [cond="[]",
		lineno=None];
	"435:IF" -> "436:BS"	 [cond="['cmd1_resp_start_bit', 'mmc_cmd']",
		label="((cmd1_resp_start_bit == 1'b1) & (mmc_cmd == 1'b1))",
		lineno=435];
	"Leaf_377:AL" -> "395:AS";
	"Leaf_377:AL" -> "377:AL";
	"Leaf_377:AL" -> "392:AS";
	"Leaf_377:AL" -> "397:AS";
	"precaler_i.260:NS" -> "precaler_i.Leaf_256:AL"	 [cond="[]",
		lineno=None];
	"462:IF" -> "462:BS"	 [cond="['cmd_done']",
		label=cmd_done,
		lineno=462];
	"441:IF" -> "442:BS"	 [cond="['cmd1_resp_busy_bit', 'mmc_cmd']",
		label="((cmd1_resp_busy_bit == 1'b1) & (mmc_cmd == 1'b1))",
		lineno=441];
}
